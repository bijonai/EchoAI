"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_shikiji_0_10_2_node_modules_shikiji_dist_langs_ocaml_mjs"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/shikiji@0.10.2/node_modules/shikiji/dist/langs/ocaml.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/shikiji@0.10.2/node_modules/shikiji/dist/langs/ocaml.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ocaml)\n/* harmony export */ });\nconst lang = Object.freeze({ \"displayName\": \"OCaml\", \"fileTypes\": [\".ml\", \".mli\"], \"name\": \"ocaml\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pragma\" }, { \"include\": \"#decl\" }], \"repository\": { \"attribute\": { \"begin\": \"(\\\\[)[[:space:]]*((?<![#\\\\-:!?.@*/&%^+<=>|~$])@{1,3}(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"beginCaptures\": { \"1\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" }, \"2\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" } }, \"patterns\": [{ \"include\": \"#attributePayload\" }] }, \"attributeIdentifier\": { \"captures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"punctuation.definition.tag\" } }, \"match\": `((?<![#\\\\-:!?.@*/&%^+<=>|~$])%(?![#\\\\-:!?.@*/&%^+<=>|~$]))((?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*))` }, \"attributePayload\": { \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]%|^%))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"((?<![#\\\\-:!?.@*/&%^+<=>|~$])[:\\\\?](?![#\\\\-:!?.@*/&%^+<=>|~$]))|(?<=[[:space:]])|(?=\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"include\": \"#pathModuleExtended\" }, { \"include\": \"#pathRecord\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#signature\" }, { \"include\": \"#type\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]\\\\?|^\\\\?))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]\\\\?|^\\\\?))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(?=\\\\])|\\\\bwhen\\\\b\", \"endCaptures\": { \"1\": {} }, \"patterns\": [{ \"include\": \"#pattern\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]when|^when))(?![[:word:]]))\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#term\" }] }] }, { \"include\": \"#term\" }] }, \"bindClassTerm\": { \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]and|^and|[^[:word:]]class|^class|[^[:word:]]type|^type))(?![[:word:]]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])(:)|(=)(?![#\\\\-:!?.@*/&%^+<=>|~$])|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]and|^and|[^[:word:]]class|^class|[^[:word:]]type|^type))(?![[:word:]]))\", \"end\": `(?=(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)[[:space:]]*,|[^[:space:][:lower:]%])|(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)|(?=\\\\btype\\\\b)`, \"endCaptures\": { \"0\": { \"name\": \"entity.name.function strong emphasis\" } }, \"patterns\": [{ \"include\": \"#attributeIdentifier\" }] }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#bindTermArgs\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])=(?![#\\\\-:!?.@*/&%^+<=>|~$])|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#literalClassType\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\band\\\\b|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" } }, \"patterns\": [{ \"include\": \"#term\" }] }] }, \"bindClassType\": { \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]and|^and|[^[:word:]]class|^class|[^[:word:]]type|^type))(?![[:word:]]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])(:)|(=)(?![#\\\\-:!?.@*/&%^+<=>|~$])|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]and|^and|[^[:word:]]class|^class|[^[:word:]]type|^type))(?![[:word:]]))\", \"end\": `(?=(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)[[:space:]]*,|[^[:space:][:lower:]%])|(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)|(?=\\\\btype\\\\b)`, \"endCaptures\": { \"0\": { \"name\": \"entity.name.function strong emphasis\" } }, \"patterns\": [{ \"include\": \"#attributeIdentifier\" }] }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#bindTermArgs\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])=(?![#\\\\-:!?.@*/&%^+<=>|~$])|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#literalClassType\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\band\\\\b|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" } }, \"patterns\": [{ \"include\": \"#literalClassType\" }] }] }, \"bindConstructor\": { \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]exception|^exception))(?![[:word:]]))|(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]\\\\+=|^\\\\+=|[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=|[^#\\\\-:!?.@*/&%^+<=>|~$]\\\\||^\\\\|))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(:)|(\\\\bof\\\\b)|((?<![#\\\\-:!?.@*/&%^+<=>|~$])\\\\|(?![#\\\\-:!?.@*/&%^+<=>|~$]))|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"punctuation.definition.tag\" }, \"3\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#attributeIdentifier\" }, { \"match\": \"\\\\.\\\\.\", \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, { \"match\": \"\\\\b(?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)\\\\b(?![[:space:]]*(?:\\\\.|\\\\([^\\\\*]))\", \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" }, { \"include\": \"#type\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))|(?:(?<=(?:[^[:word:]]of|^of))(?![[:word:]]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])\\\\|(?![#\\\\-:!?.@*/&%^+<=>|~$])|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#type\" }] }] }, \"bindSignature\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?:(?<=(?:[^[:word:]]type|^type))(?![[:word:]]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])=(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"endCaptures\": { \"0\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pathModuleExtended\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\band\\\\b|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" } }, \"patterns\": [{ \"include\": \"#signature\" }] }] }, \"bindStructure\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?:(?<=(?:[^[:word:]]and|^and))(?![[:word:]]))|(?=[[:upper:]])\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])(:(?!=))|(:?=)(?![#\\\\-:!?.@*/&%^+<=>|~$])|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|open|type|val)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"\\\\bmodule\\\\b\", \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename\" }, { \"match\": \"(?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)\", \"name\": \"entity.name.function strong emphasis\" }, { \"begin\": \"\\\\((?!\\\\))\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$]):(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#signature\" }] }, { \"include\": \"#variableModule\" }] }, { \"include\": \"#literalUnit\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\b(and)\\\\b|((?<![#\\\\-:!?.@*/&%^+<=>|~$])=(?![#\\\\-:!?.@*/&%^+<=>|~$]))|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" }, \"2\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#signature\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:=|^:=|[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\b(?:(and)|(with))\\\\b|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" }, \"2\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" } }, \"patterns\": [{ \"include\": \"#structure\" }] }] }, \"bindTerm\": { \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]!|^!))(?![#\\\\-:!?.@*/&%^+<=>|~$]))|(?:(?<=(?:[^[:word:]]and|^and|[^[:word:]]external|^external|[^[:word:]]let|^let|[^[:word:]]method|^method|[^[:word:]]val|^val))(?![[:word:]]))\", \"end\": \"(\\\\bmodule\\\\b)|(\\\\bopen\\\\b)|(?<![#\\\\-:!?.@*/&%^+<=>|~$])(:)|((?<![#\\\\-:!?.@*/&%^+<=>|~$])=(?![#\\\\-:!?.@*/&%^+<=>|~$]))(?![#\\\\-:!?.@*/&%^+<=>|~$])|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename\" }, \"2\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"3\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"4\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]!|^!))(?![#\\\\-:!?.@*/&%^+<=>|~$]))|(?:(?<=(?:[^[:word:]]and|^and|[^[:word:]]external|^external|[^[:word:]]let|^let|[^[:word:]]method|^method|[^[:word:]]val|^val))(?![[:word:]]))\", \"end\": `(?=\\\\b(?:module|open)\\\\b)|(?=(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)[[:space:]]*,|[^[:space:][:lower:]%])|(\\\\brec\\\\b)|((?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*))`, \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"2\": { \"name\": \"entity.name.function strong emphasis\" } }, \"patterns\": [{ \"include\": \"#attributeIdentifier\" }, { \"include\": \"#comment\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]rec|^rec))(?![[:word:]]))\", \"end\": `((?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*))|(?=[^[:space:][:alpha:]])`, \"endCaptures\": { \"0\": { \"name\": \"entity.name.function strong emphasis\" } }, \"patterns\": [{ \"include\": \"#bindTermArgs\" }] }, { \"include\": \"#bindTermArgs\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]module|^module))(?![[:word:]]))\", \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#declModule\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]open|^open))(?![[:word:]]))\", \"end\": \"(?=\\\\bin\\\\b)|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#pathModuleSimple\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])=(?![#\\\\-:!?.@*/&%^+<=>|~$])|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\btype\\\\b|(?=[^[:space:]])\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control\" } } }, { \"begin\": \"(?:(?<=(?:[^[:word:]]type|^type))(?![[:word:]]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])\\\\.(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"include\": \"#pattern\" }] }, { \"include\": \"#type\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\band\\\\b|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" } }, \"patterns\": [{ \"include\": \"#term\" }] }] }, \"bindTermArgs\": { \"patterns\": [{ \"applyEndPatternLast\": true, \"begin\": \"~|\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \":|(?=[^[:space:]])\", \"endCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]~|^~|[^#\\\\-:!?.@*/&%^+<=>|~$]\\\\?|^\\\\?))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)|(?<=\\\\))`, \"endCaptures\": { \"0\": { \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"\\\\((?!\\\\*)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"begin\": \"(?<=\\\\()\", \"end\": \":|=\", \"endCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"patterns\": [{ \"match\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename\" }] }, { \"begin\": \"(?<=:)\", \"end\": \"=|(?=\\\\))\", \"endCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#term\" }] }] }] }] }, { \"include\": \"#pattern\" }] }, \"bindType\": { \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]and|^and|[^[:word:]]type|^type))(?![[:word:]]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])\\\\+=|=(?![#\\\\-:!?.@*/&%^+<=>|~$])|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#attributeIdentifier\" }, { \"include\": \"#pathType\" }, { \"match\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"name\": \"entity.name.function strong\" }, { \"include\": \"#type\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]\\\\+=|^\\\\+=|[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\band\\\\b|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" } }, \"patterns\": [{ \"include\": \"#bindConstructor\" }] }] }, \"comment\": { \"patterns\": [{ \"include\": \"#attribute\" }, { \"include\": \"#extension\" }, { \"include\": \"#commentBlock\" }, { \"include\": \"#commentDoc\" }] }, \"commentBlock\": { \"begin\": \"\\\\(\\\\*(?!\\\\*[^\\\\)])\", \"contentName\": \"emphasis\", \"end\": \"\\\\*\\\\)\", \"name\": \"comment constant.regexp meta.separator.markdown\", \"patterns\": [{ \"include\": \"#commentBlock\" }, { \"include\": \"#commentDoc\" }] }, \"commentDoc\": { \"begin\": \"\\\\(\\\\*\\\\*\", \"end\": \"\\\\*\\\\)\", \"name\": \"comment constant.regexp meta.separator.markdown\", \"patterns\": [{ \"match\": \"\\\\*\" }, { \"include\": \"#comment\" }] }, \"decl\": { \"patterns\": [{ \"include\": \"#declClass\" }, { \"include\": \"#declException\" }, { \"include\": \"#declInclude\" }, { \"include\": \"#declModule\" }, { \"include\": \"#declOpen\" }, { \"include\": \"#declTerm\" }, { \"include\": \"#declType\" }] }, \"declClass\": { \"begin\": \"\\\\bclass\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.class constant.numeric markup.underline\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pragma\" }, { \"begin\": \"(?:(?<=(?:[^[:word:]]class|^class))(?![[:word:]]))\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.class constant.numeric markup.underline\" } }, \"end\": \"\\\\btype\\\\b|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"patterns\": [{ \"include\": \"#bindClassTerm\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]type|^type))(?![[:word:]]))\", \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#bindClassType\" }] }] }, \"declException\": { \"begin\": \"\\\\bexception\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword markup.underline\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#attributeIdentifier\" }, { \"include\": \"#comment\" }, { \"include\": \"#pragma\" }, { \"include\": \"#bindConstructor\" }] }, \"declInclude\": { \"begin\": \"\\\\binclude\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#attributeIdentifier\" }, { \"include\": \"#comment\" }, { \"include\": \"#pragma\" }, { \"include\": \"#signature\" }] }, \"declModule\": { \"begin\": \"(?:(?<=(?:[^[:word:]]module|^module))(?![[:word:]]))|\\\\bmodule\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename markup.underline\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pragma\" }, { \"begin\": \"(?:(?<=(?:[^[:word:]]module|^module))(?![[:word:]]))\", \"end\": \"(\\\\btype\\\\b)|(?=[[:upper:]])\", \"endCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"patterns\": [{ \"include\": \"#attributeIdentifier\" }, { \"include\": \"#comment\" }, { \"match\": \"\\\\brec\\\\b\", \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]type|^type))(?![[:word:]]))\", \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#bindSignature\" }] }, { \"begin\": \"(?=[[:upper:]])\", \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#bindStructure\" }] }] }, \"declOpen\": { \"begin\": \"\\\\bopen\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#attributeIdentifier\" }, { \"include\": \"#comment\" }, { \"include\": \"#pragma\" }, { \"include\": \"#pathModuleExtended\" }] }, \"declTerm\": { \"begin\": \"\\\\b(?:(external|val)|(method)|(let))\\\\b(!?)\", \"beginCaptures\": { \"1\": { \"name\": \"support.type markup.underline\" }, \"2\": { \"name\": \"storage.type markup.underline\" }, \"3\": { \"name\": \"keyword.control markup.underline\" }, \"4\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pragma\" }, { \"include\": \"#bindTerm\" }] }, \"declType\": { \"begin\": \"(?:(?<=(?:[^[:word:]]type|^type))(?![[:word:]]))|\\\\btype\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword markup.underline\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pragma\" }, { \"include\": \"#bindType\" }] }, \"extension\": { \"begin\": \"(\\\\[)((?<![#\\\\-:!?.@*/&%^+<=>|~$])%{1,3}(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"beginCaptures\": { \"1\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" }, \"2\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" } }, \"patterns\": [{ \"include\": \"#attributePayload\" }] }, \"literal\": { \"patterns\": [{ \"include\": \"#termConstructor\" }, { \"include\": \"#literalArray\" }, { \"include\": \"#literalBoolean\" }, { \"include\": \"#literalCharacter\" }, { \"include\": \"#literalList\" }, { \"include\": \"#literalNumber\" }, { \"include\": \"#literalObjectTerm\" }, { \"include\": \"#literalString\" }, { \"include\": \"#literalRecord\" }, { \"include\": \"#literalUnit\" }] }, \"literalArray\": { \"begin\": \"\\\\[\\\\|\", \"captures\": { \"0\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" } }, \"end\": \"\\\\|\\\\]\", \"patterns\": [{ \"include\": \"#term\" }] }, \"literalBoolean\": { \"match\": \"\\\\bfalse|true\\\\b\", \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" }, \"literalCharacter\": { \"begin\": \"(?<![[:word:]])'\", \"end\": \"'\", \"name\": \"markup.punctuation.quote.beginning\", \"patterns\": [{ \"include\": \"#literalCharacterEscape\" }] }, \"literalCharacterEscape\": { \"match\": `\\\\\\\\(?:[\\\\\\\\\"'ntbr]|[[:digit:]][[:digit:]][[:digit:]]|x[[:xdigit:]][[:xdigit:]]|o[0-3][0-7][0-7])` }, \"literalClassType\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"\\\\bobject\\\\b\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag emphasis\" } }, \"end\": \"\\\\bend\\\\b\", \"patterns\": [{ \"begin\": \"\\\\binherit\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"begin\": \"\\\\bas\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#variablePattern\" }] }, { \"include\": \"#type\" }] }, { \"include\": \"#pattern\" }, { \"include\": \"#declTerm\" }] }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\" }] }, \"literalList\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#term\" }] }] }, \"literalNumber\": { \"match\": \"(?<![[:alpha:]])[[:digit:]][[:digit:]]*(\\\\.[[:digit:]][[:digit:]]*)?\", \"name\": \"constant.numeric\" }, \"literalObjectTerm\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"\\\\bobject\\\\b\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag emphasis\" } }, \"end\": \"\\\\bend\\\\b\", \"patterns\": [{ \"begin\": \"\\\\binherit\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"begin\": \"\\\\bas\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \";;|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#variablePattern\" }] }, { \"include\": \"#term\" }] }, { \"include\": \"#pattern\" }, { \"include\": \"#declTerm\" }] }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\" }] }, \"literalRecord\": { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong strong\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"begin\": \"(?<=\\\\{|;)\", \"end\": \"(:)|(=)|(;)|(with)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"support.type strong\" }, \"3\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"4\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pathModulePrefixSimple\" }, { \"match\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename emphasis\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]with|^with))(?![[:word:]]))\", \"end\": \"(:)|(=)|(;)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"support.type strong\" }, \"3\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"match\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename emphasis\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(;)|(=)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"2\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \";|(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"include\": \"#term\" }] }] }, \"literalString\": { \"patterns\": [{ \"begin\": '\"', \"end\": '\"', \"name\": \"string beginning.punctuation.definition.quote.markdown\", \"patterns\": [{ \"include\": \"#literalStringEscape\" }] }, { \"begin\": \"(\\\\{)([_[:lower:]]*?)(\\\\|)\", \"end\": \"(\\\\|)(\\\\2)(\\\\})\", \"name\": \"string beginning.punctuation.definition.quote.markdown\", \"patterns\": [{ \"include\": \"#literalStringEscape\" }] }] }, \"literalStringEscape\": { \"match\": '\\\\\\\\(?:[\\\\\\\\\"ntbr]|[[:digit:]][[:digit:]][[:digit:]]|x[[:xdigit:]][[:xdigit:]]|o[0-3][0-7][0-7])' }, \"literalUnit\": { \"match\": \"\\\\(\\\\)\", \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" }, \"pathModuleExtended\": { \"patterns\": [{ \"include\": \"#pathModulePrefixExtended\" }, { \"match\": \"(?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)\", \"name\": \"entity.name.class constant.numeric\" }] }, \"pathModulePrefixExtended\": { \"begin\": \"(?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)(?=[[:space:]]*\\\\.|$|\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.class constant.numeric\" } }, \"end\": \"(?![[:space:]\\\\.]|$|\\\\()\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"keyword.control\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"match\": \"((?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)(?=[[:space:]]*\\\\)))\", \"name\": \"string.other.link variable.language variable.parameter emphasis\" }, { \"include\": \"#structure\" }] }, { \"begin\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])\\\\.(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"beginCaptures\": { \"0\": { \"name\": \"keyword strong\" } }, \"end\": \"((?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)(?=[[:space:]]*\\\\.|$))|((?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)(?=[[:space:]]*(?:$|\\\\()))|((?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)(?=[[:space:]]*\\\\)))|(?![[:space:]\\\\.[:upper:]]|$|\\\\()\", \"endCaptures\": { \"1\": { \"name\": \"entity.name.class constant.numeric\" }, \"2\": { \"name\": \"entity.name.function strong\" }, \"3\": { \"name\": \"string.other.link variable.language variable.parameter emphasis\" } } }] }, \"pathModulePrefixExtendedParens\": { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"keyword.control\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"match\": \"((?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)(?=[[:space:]]*\\\\)))\", \"name\": \"string.other.link variable.language variable.parameter emphasis\" }, { \"include\": \"#structure\" }] }, \"pathModulePrefixSimple\": { \"begin\": \"(?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)(?=[[:space:]]*\\\\.)\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.class constant.numeric\" } }, \"end\": \"(?![[:space:]\\\\.])\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])\\\\.(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"beginCaptures\": { \"0\": { \"name\": \"keyword strong\" } }, \"end\": \"((?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)(?=[[:space:]]*\\\\.))|((?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)(?=[[:space:]]*))|(?![[:space:]\\\\.[:upper:]])\", \"endCaptures\": { \"1\": { \"name\": \"entity.name.class constant.numeric\" }, \"2\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" } } }] }, \"pathModuleSimple\": { \"patterns\": [{ \"include\": \"#pathModulePrefixSimple\" }, { \"match\": \"(?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)\", \"name\": \"entity.name.class constant.numeric\" }] }, \"pathRecord\": { \"patterns\": [{ \"begin\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"end\": \"(?=[^[:space:]\\\\.])(?!\\\\(\\\\*)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]\\\\.|^\\\\.))(?![#\\\\-:!?.@*/&%^+<=>|~$]))|(?<![#\\\\-:!?.@*/&%^+<=>|~$])\\\\.(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"beginCaptures\": { \"0\": { \"name\": \"keyword strong\" } }, \"end\": `((?<![#\\\\-:!?.@*/&%^+<=>|~$])\\\\.(?![#\\\\-:!?.@*/&%^+<=>|~$]))|((?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|mutable|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*))|(?<=\\\\))|(?<=\\\\])`, \"endCaptures\": { \"1\": { \"name\": \"keyword strong\" }, \"2\": { \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pathModulePrefixSimple\" }, { \"begin\": \"\\\\((?!\\\\*)\", \"captures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#term\" }] }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#pattern\" }] }] }] }] }, \"pattern\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#patternArray\" }, { \"include\": \"#patternLazy\" }, { \"include\": \"#patternList\" }, { \"include\": \"#patternMisc\" }, { \"include\": \"#patternModule\" }, { \"include\": \"#patternRecord\" }, { \"include\": \"#literal\" }, { \"include\": \"#patternParens\" }, { \"include\": \"#patternType\" }, { \"include\": \"#variablePattern\" }, { \"include\": \"#termOperator\" }] }, \"patternArray\": { \"begin\": \"\\\\[\\\\|\", \"captures\": { \"0\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" } }, \"end\": \"\\\\|\\\\]\", \"patterns\": [{ \"include\": \"#pattern\" }] }, \"patternLazy\": { \"match\": \"lazy\", \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"patternList\": { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#pattern\" }] }, \"patternMisc\": { \"captures\": { \"1\": { \"name\": \"string.regexp strong\" }, \"2\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"3\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"match\": \"((?<![#\\\\-:!?.@*/&%^+<=>|~$]),(?![#\\\\-:!?.@*/&%^+<=>|~$]))|([#\\\\-:!?.@*/&%^+<=>|~$]+)|\\\\b(as)\\\\b\" }, \"patternModule\": { \"begin\": \"\\\\bmodule\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#declModule\" }] }, \"patternParens\": { \"begin\": \"\\\\((?!\\\\))\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$]):(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#pattern\" }] }, \"patternRecord\": { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong strong\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"begin\": \"(?<=\\\\{|;)\", \"end\": \"(:)|(=)|(;)|(with)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"support.type strong\" }, \"3\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"4\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pathModulePrefixSimple\" }, { \"match\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename emphasis\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]with|^with))(?![[:word:]]))\", \"end\": \"(:)|(=)|(;)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"support.type strong\" }, \"3\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"match\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename emphasis\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(;)|(=)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"2\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \";|(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"include\": \"#pattern\" }] }] }, \"patternType\": { \"begin\": \"\\\\btype\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#declType\" }] }, \"pragma\": { \"begin\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])#(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#literalNumber\" }, { \"include\": \"#literalString\" }] }, \"signature\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#signatureLiteral\" }, { \"include\": \"#signatureFunctor\" }, { \"include\": \"#pathModuleExtended\" }, { \"include\": \"#signatureParens\" }, { \"include\": \"#signatureRecovered\" }, { \"include\": \"#signatureConstraints\" }] }, \"signatureConstraints\": { \"begin\": \"\\\\bwith\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" } }, \"end\": \"(?=\\\\))|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]with|^with))(?![[:word:]]))\", \"end\": \"\\\\b(?:(module)|(type))\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename\" }, \"2\": { \"name\": \"keyword\" } } }, { \"include\": \"#declModule\" }, { \"include\": \"#declType\" }] }, \"signatureFunctor\": { \"patterns\": [{ \"begin\": \"\\\\bfunctor\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]functor|^functor))(?![[:word:]]))\", \"end\": \"(\\\\(\\\\))|(\\\\((?!\\\\)))\", \"endCaptures\": { \"1\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" }, \"2\": { \"name\": \"punctuation.definition.tag\" } } }, { \"begin\": \"(?<=\\\\()\", \"end\": \"(:)|(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#variableModule\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#signature\" }] }, { \"begin\": \"(?<=\\\\))\", \"end\": \"(\\\\()|((?<![#\\\\-:!?.@*/&%^+<=>|~$])->(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag\" }, \"2\": { \"name\": \"support.type strong\" } } }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]->|^->))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#signature\" }] }] }, { \"match\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])->(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"name\": \"support.type strong\" }] }, \"signatureLiteral\": { \"begin\": \"\\\\bsig\\\\b\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag emphasis\" } }, \"end\": \"\\\\bend\\\\b\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pragma\" }, { \"include\": \"#decl\" }] }, \"signatureParens\": { \"begin\": \"\\\\((?!\\\\))\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$]):(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#signature\" }] }, { \"include\": \"#signature\" }] }, \"signatureRecovered\": { \"patterns\": [{ \"begin\": \"\\\\(|(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:|[^#\\\\-:!?.@*/&%^+<=>|~$]->|^->))(?![#\\\\-:!?.@*/&%^+<=>|~$]))|(?:(?<=(?:[^[:word:]]include|^include|[^[:word:]]open|^open))(?![[:word:]]))\", \"end\": \"\\\\bmodule\\\\b|(?!$|[[:space:]]|\\\\bmodule\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename\" } } }, { \"begin\": \"(?:(?<=(?:[^[:word:]]module|^module))(?![[:word:]]))\", \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]module|^module))(?![[:word:]]))\", \"end\": \"\\\\btype\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"keyword\" } } }, { \"begin\": \"(?:(?<=(?:[^[:word:]]type|^type))(?![[:word:]]))\", \"end\": \"\\\\bof\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } } }, { \"begin\": \"(?:(?<=(?:[^[:word:]]of|^of))(?![[:word:]]))\", \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#signature\" }] }] }] }, \"structure\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#structureLiteral\" }, { \"include\": \"#structureFunctor\" }, { \"include\": \"#pathModuleExtended\" }, { \"include\": \"#structureParens\" }] }, \"structureFunctor\": { \"patterns\": [{ \"begin\": \"\\\\bfunctor\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]functor|^functor))(?![[:word:]]))\", \"end\": \"(\\\\(\\\\))|(\\\\((?!\\\\)))\", \"endCaptures\": { \"1\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" }, \"2\": { \"name\": \"punctuation.definition.tag\" } } }, { \"begin\": \"(?<=\\\\()\", \"end\": \"(:)|(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#variableModule\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"patterns\": [{ \"include\": \"#signature\" }] }, { \"begin\": \"(?<=\\\\))\", \"end\": \"(\\\\()|((?<![#\\\\-:!?.@*/&%^+<=>|~$])->(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag\" }, \"2\": { \"name\": \"support.type strong\" } } }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]->|^->))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"patterns\": [{ \"include\": \"#structure\" }] }] }, { \"match\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])->(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"name\": \"support.type strong\" }] }, \"structureLiteral\": { \"begin\": \"\\\\bstruct\\\\b\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag emphasis\" } }, \"end\": \"\\\\bend\\\\b\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pragma\" }, { \"include\": \"#decl\" }] }, \"structureParens\": { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#structureUnpack\" }, { \"include\": \"#structure\" }] }, \"structureUnpack\": { \"begin\": \"\\\\bval\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \"(?=\\\\))\" }, \"term\": { \"patterns\": [{ \"include\": \"#termLet\" }, { \"include\": \"#termAtomic\" }] }, \"termAtomic\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#termConditional\" }, { \"include\": \"#termConstructor\" }, { \"include\": \"#termDelim\" }, { \"include\": \"#termFor\" }, { \"include\": \"#termFunction\" }, { \"include\": \"#literal\" }, { \"include\": \"#termMatch\" }, { \"include\": \"#termMatchRule\" }, { \"include\": \"#termPun\" }, { \"include\": \"#termOperator\" }, { \"include\": \"#termTry\" }, { \"include\": \"#termWhile\" }, { \"include\": \"#pathRecord\" }] }, \"termConditional\": { \"match\": \"\\\\b(?:if|then|else)\\\\b\", \"name\": \"keyword.control\" }, \"termConstructor\": { \"patterns\": [{ \"include\": \"#pathModulePrefixSimple\" }, { \"match\": \"(?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)\", \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong\" }] }, \"termDelim\": { \"patterns\": [{ \"begin\": \"\\\\((?!\\\\))\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#term\" }] }, { \"begin\": \"\\\\bbegin\\\\b\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"\\\\bend\\\\b\", \"patterns\": [{ \"include\": \"#attributeIdentifier\" }, { \"include\": \"#term\" }] }] }, \"termFor\": { \"patterns\": [{ \"begin\": \"\\\\bfor\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control\" } }, \"end\": \"\\\\bdone\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control\" } }, \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]for|^for))(?![[:word:]]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])=(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"endCaptures\": { \"0\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#pattern\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"\\\\b(?:downto|to)\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control\" } }, \"patterns\": [{ \"include\": \"#term\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]to|^to))(?![[:word:]]))\", \"end\": \"\\\\bdo\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control\" } }, \"patterns\": [{ \"include\": \"#term\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]do|^do))(?![[:word:]]))\", \"end\": \"(?=\\\\bdone\\\\b)\", \"patterns\": [{ \"include\": \"#term\" }] }] }] }, \"termFunction\": { \"captures\": { \"1\": { \"name\": \"storage.type\" }, \"2\": { \"name\": \"storage.type\" } }, \"match\": \"\\\\b(?:(fun)|(function))\\\\b\" }, \"termLet\": { \"patterns\": [{ \"begin\": \"(?:(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=|[^#\\\\-:!?.@*/&%^+<=>|~$]->|^->))(?![#\\\\-:!?.@*/&%^+<=>|~$]))|(?<=;|\\\\())(?=[[:space:]]|\\\\blet\\\\b)|(?:(?<=(?:[^[:word:]]begin|^begin|[^[:word:]]do|^do|[^[:word:]]else|^else|[^[:word:]]in|^in|[^[:word:]]struct|^struct|[^[:word:]]then|^then|[^[:word:]]try|^try))(?![[:word:]]))|(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]@@|^@@))(?![#\\\\-:!?.@*/&%^+<=>|~$]))[[:space:]]+\", \"end\": \"\\\\b(?:(and)|(let))\\\\b|(?=[^[:space:]])(?!\\\\(\\\\*)\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" }, \"2\": { \"name\": \"storage.type markup.underline\" } }, \"patterns\": [{ \"include\": \"#comment\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]and|^and|[^[:word:]]let|^let))(?![[:word:]]))|(let)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type markup.underline\" } }, \"end\": \"\\\\b(?:(and)|(in))\\\\b|(?=\\\\}|\\\\)|\\\\]|\\\\b(?:end|class|exception|external|include|inherit|initializer|let|method|module|open|type|val)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp markup.underline\" }, \"2\": { \"name\": \"storage.type markup.underline\" } }, \"patterns\": [{ \"include\": \"#bindTerm\" }] }] }, \"termMatch\": { \"begin\": \"\\\\bmatch\\\\b\", \"captures\": { \"0\": { \"name\": \"keyword.control\" } }, \"end\": \"\\\\bwith\\\\b\", \"patterns\": [{ \"include\": \"#term\" }] }, \"termMatchRule\": { \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]fun|^fun|[^[:word:]]function|^function|[^[:word:]]with|^with))(?![[:word:]]))\", \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])(\\\\|)|(->)(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"endCaptures\": { \"1\": { \"name\": \"support.type strong\" }, \"2\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#attributeIdentifier\" }, { \"include\": \"#pattern\" }] }, { \"begin\": \"(?:(?<=(?:[^\\\\[#\\\\-:!?.@*/&%^+<=>|~$]\\\\||^\\\\|))(?![#\\\\-:!?.@*/&%^+<=>|~$]))|(?<![#\\\\-:!?.@*/&%^+<=>|~$])\\\\|(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"beginCaptures\": { \"0\": { \"name\": \"support.type strong\" } }, \"end\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])(\\\\|)|(->)(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"endCaptures\": { \"1\": { \"name\": \"support.type strong\" }, \"2\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#pattern\" }, { \"begin\": \"\\\\bwhen\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \"(?=(?<![#\\\\-:!?.@*/&%^+<=>|~$])->(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"patterns\": [{ \"include\": \"#term\" }] }] }] }, \"termOperator\": { \"patterns\": [{ \"begin\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])#(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"beginCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"end\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"endCaptures\": { \"0\": { \"name\": \"entity.name.function\" } } }, { \"captures\": { \"0\": { \"name\": \"keyword.control strong\" } }, \"match\": \"<-\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"2\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"match\": \"(,|[#\\\\-:!?.@*/&%^+<=>|~$]+)|(;)\" }, { \"match\": \"\\\\b(?:and|assert|asr|land|lazy|lsr|lxor|mod|new|or)\\\\b\", \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }] }, \"termPun\": { \"applyEndPatternLast\": true, \"begin\": \"(?<![#\\\\-:!?.@*/&%^+<=>|~$])\\\\?|~(?![#\\\\-:!?.@*/&%^+<=>|~$])\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"end\": \":|(?=[^[:space:]:])\", \"endCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]\\\\?|^\\\\?|[^#\\\\-:!?.@*/&%^+<=>|~$]~|^~))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"endCaptures\": { \"0\": { \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename\" } } }] }, \"termTry\": { \"begin\": \"\\\\btry\\\\b\", \"captures\": { \"0\": { \"name\": \"keyword.control\" } }, \"end\": \"\\\\bwith\\\\b\", \"patterns\": [{ \"include\": \"#term\" }] }, \"termWhile\": { \"patterns\": [{ \"begin\": \"\\\\bwhile\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control\" } }, \"end\": \"\\\\bdone\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control\" } }, \"patterns\": [{ \"begin\": \"(?:(?<=(?:[^[:word:]]while|^while))(?![[:word:]]))\", \"end\": \"\\\\bdo\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control\" } }, \"patterns\": [{ \"include\": \"#term\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]do|^do))(?![[:word:]]))\", \"end\": \"(?=\\\\bdone\\\\b)\", \"patterns\": [{ \"include\": \"#term\" }] }] }] }, \"type\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"\\\\bnonrec\\\\b\", \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, { \"include\": \"#pathModulePrefixExtended\" }, { \"include\": \"#typeLabel\" }, { \"include\": \"#typeObject\" }, { \"include\": \"#typeOperator\" }, { \"include\": \"#typeParens\" }, { \"include\": \"#typePolymorphicVariant\" }, { \"include\": \"#typeRecord\" }, { \"include\": \"#typeConstructor\" }] }, \"typeConstructor\": { \"patterns\": [{ \"begin\": `(_)|((?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*))|(')((?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*))|(?<=[^\\\\*]\\\\)|\\\\])`, \"beginCaptures\": { \"1\": { \"name\": \"comment constant.regexp meta.separator.markdown\" }, \"3\": { \"name\": \"string.other.link variable.language variable.parameter emphasis strong emphasis\" }, \"4\": { \"name\": \"keyword.control emphasis\" } }, \"end\": `(?=\\\\((?!\\\\*)|\\\\*|:|,|=|\\\\.|>|-|\\\\{|\\\\[|\\\\+|\\\\}|\\\\)|\\\\]|;|\\\\|)|((?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*))[:space:]*(?!\\\\(\\\\*|[[:word:]])|(?=;;|\\\\}|\\\\)|\\\\]|\\\\b(?:end|and|class|exception|external|in|include|inherit|initializer|let|method|module|open|type|val)\\\\b)`, \"endCaptures\": { \"1\": { \"name\": \"entity.name.function strong\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pathModulePrefixExtended\" }] }] }, \"typeLabel\": { \"patterns\": [{ \"begin\": `(\\\\??)((?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*))[[:space:]]*((?<![#\\\\-:!?.@*/&%^+<=>|~$]):(?![#\\\\-:!?.@*/&%^+<=>|~$]))`, \"captures\": { \"1\": { \"name\": \"keyword strong emphasis\" }, \"2\": { \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename emphasis\" }, \"3\": { \"name\": \"keyword\" } }, \"end\": \"(?=(?<![#\\\\-:!?.@*/&%^+<=>|~$])->(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"typeModule\": { \"begin\": \"\\\\bmodule\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#pathModuleExtended\" }, { \"include\": \"#signatureConstraints\" }] }, \"typeObject\": { \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong strong\" } }, \"end\": \">\", \"patterns\": [{ \"begin\": \"(?<=<|;)\", \"end\": \"(:)|(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"3\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"4\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pathModulePrefixSimple\" }, { \"match\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename emphasis\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(;)|(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"2\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#type\" }] }] }, \"typeOperator\": { \"patterns\": [{ \"match\": \",|;|[#\\\\-:!?.@*/&%^+<=>|~$]+\", \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }] }, \"typeParens\": { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.tag\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"match\": \",\", \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, { \"include\": \"#typeModule\" }, { \"include\": \"#type\" }] }, \"typePolymorphicVariant\": { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [] }, \"typeRecord\": { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.language constant.numeric entity.other.attribute-name.id.css strong strong\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"begin\": \"(?<=\\\\{|;)\", \"end\": \"(:)|(=)|(;)|(with)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"support.type strong\" }, \"3\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"4\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pathModulePrefixSimple\" }, { \"match\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename emphasis\" }] }, { \"begin\": \"(?:(?<=(?:[^[:word:]]with|^with))(?![[:word:]]))\", \"end\": \"(:)|(=)|(;)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp strong\" }, \"2\": { \"name\": \"support.type strong\" }, \"3\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"match\": `(?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*)`, \"name\": \"markup.inserted constant.language support.constant.property-value entity.name.filename emphasis\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]:|^:))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \"(;)|(=)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" }, \"2\": { \"name\": \"support.type strong\" } }, \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(?:(?<=(?:[^#\\\\-:!?.@*/&%^+<=>|~$]=|^=))(?![#\\\\-:!?.@*/&%^+<=>|~$]))\", \"end\": \";|(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.class.js message.error variable.interpolation string.regexp\" } }, \"patterns\": [{ \"include\": \"#type\" }] }] }, \"variableModule\": { \"captures\": { \"0\": { \"name\": \"string.other.link variable.language variable.parameter emphasis\" } }, \"match\": \"(?:\\\\b(?=[[:upper:]])[[:alpha:]_][[:word:]']*)\" }, \"variablePattern\": { \"captures\": { \"1\": { \"name\": \"comment constant.regexp meta.separator.markdown\" }, \"2\": { \"name\": \"string.other.link variable.language variable.parameter emphasis\" } }, \"match\": `(\\\\b_\\\\b)|((?:(?!\\\\b(?:and|'|as|asr|assert|\\\\*|begin|class|:|,|@|constraint|do|done|downto|else|end|=|exception|external|false|for|\\\\.|fun|function|functor|>|-|if|in|include|inherit|initializer|land|lazy|\\\\{|\\\\(|\\\\[|<|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|#|object|of|open|or|%|\\\\+|private|\\\\?|\"|rec|\\\\\\\\|\\\\}|\\\\)|\\\\]|;|sig|/|struct|then|~|to|true|try|type|val|\\\\||virtual|when|while|with)\\\\b(?:[^']|$))\\\\b(?=[[:lower:]_])[[:alpha:]_][[:word:]']*))` } }, \"scopeName\": \"source.ocaml\" });\nvar ocaml = [\n  lang\n];\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9zaGlraWppQDAuMTAuMi9ub2RlX21vZHVsZXMvc2hpa2lqaS9kaXN0L2xhbmdzL29jYW1sLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsNkJBQTZCLHNGQUFzRix1QkFBdUIsSUFBSSxzQkFBc0IsSUFBSSxvQkFBb0IsbUJBQW1CLGVBQWUsMERBQTBELElBQUksa0RBQWtELE9BQU8sd0ZBQXdGLFNBQVMsd0ZBQXdGLGlDQUFpQyxPQUFPLDBGQUEwRixpQkFBaUIsZ0NBQWdDLEdBQUcsMkJBQTJCLGNBQWMsT0FBTyw2RkFBNkYsU0FBUyx3Q0FBd0MsMlFBQTJRLCtIQUErSCxVQUFVLG9JQUFvSSx3QkFBd0IsZUFBZSxxTUFBcU0sT0FBTyx3RkFBd0YsaUJBQWlCLGtDQUFrQyxJQUFJLDBCQUEwQixHQUFHLElBQUksa0hBQWtILHlCQUF5QixJQUFJLG9CQUFvQixHQUFHLElBQUksc0hBQXNILG1JQUFtSSxTQUFTLGlCQUFpQix1QkFBdUIsR0FBRyxJQUFJLDhGQUE4RixvQkFBb0IsR0FBRyxHQUFHLElBQUksb0JBQW9CLEdBQUcscUJBQXFCLGVBQWUscUxBQXFMLElBQUksdUlBQXVJLE9BQU8sNkZBQTZGLFNBQVMsaUNBQWlDLGlCQUFpQix3VEFBd1QsK0hBQStILFVBQVUsMFdBQTBXLCtIQUErSCxVQUFVLG1LQUFtSyxPQUFPLGtEQUFrRCxpQkFBaUIsbUNBQW1DLEdBQUcsSUFBSSw4QkFBOEIsT0FBTyx3Q0FBd0MsK0JBQStCLG9CQUFvQixHQUFHLElBQUksNEJBQTRCLEdBQUcsSUFBSSx3SkFBd0osa0lBQWtJLE9BQU8saUNBQWlDLGlCQUFpQixnQ0FBZ0MsR0FBRyxJQUFJLHdHQUF3RyxJQUFJLHVJQUF1SSxPQUFPLHlHQUF5RyxpQkFBaUIsb0JBQW9CLEdBQUcsR0FBRyxxQkFBcUIsZUFBZSxxTEFBcUwsSUFBSSx1SUFBdUksT0FBTyw2RkFBNkYsU0FBUyxpQ0FBaUMsaUJBQWlCLHdU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LElBQUksMkZBQTJGLFlBQVkscUJBQXFCLE9BQU8sc0ZBQXNGLFNBQVMsaUNBQWlDLGlCQUFpQixvQkFBb0IsR0FBRyxJQUFJLDBGQUEwRixPQUFPLHFCQUFxQixPQUFPLHdGQUF3RixpQkFBaUIsb0JBQW9CLEdBQUcsR0FBRyxzQkFBc0IsY0FBYyxPQUFPLDZFQUE2RSw2REFBNkQsdUJBQXVCLGNBQWMsT0FBTywyREFBMkQsU0FBUyw2RUFBNkUsMk5BQTJOLCtIQUErSCxVQUFVLHNJQUFzSSwrQkFBK0I7QUFDMzRqRTtBQUNBO0FBQ0E7O0FBRTRCIiwic291cmNlcyI6WyIvVXNlcnMvYWNib3hsaXUvcHJvamVjdHMvYmlqb24vZWNob2FpL25vZGVfbW9kdWxlcy8ucG5wbS9zaGlraWppQDAuMTAuMi9ub2RlX21vZHVsZXMvc2hpa2lqaS9kaXN0L2xhbmdzL29jYW1sLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBsYW5nID0gT2JqZWN0LmZyZWV6ZSh7IFwiZGlzcGxheU5hbWVcIjogXCJPQ2FtbFwiLCBcImZpbGVUeXBlc1wiOiBbXCIubWxcIiwgXCIubWxpXCJdLCBcIm5hbWVcIjogXCJvY2FtbFwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcHJhZ21hXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjZGVjbFwiIH1dLCBcInJlcG9zaXRvcnlcIjogeyBcImF0dHJpYnV0ZVwiOiB7IFwiYmVnaW5cIjogXCIoXFxcXFspW1s6c3BhY2U6XV0qKCg/PCFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKUB7MSwzfSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKVwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJjb25zdGFudC5sYW5ndWFnZSBjb25zdGFudC5udW1lcmljIGVudGl0eS5vdGhlci5hdHRyaWJ1dGUtbmFtZS5pZC5jc3Mgc3Ryb25nXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXF1cIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImNvbnN0YW50Lmxhbmd1YWdlIGNvbnN0YW50Lm51bWVyaWMgZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLmlkLmNzcyBzdHJvbmdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2F0dHJpYnV0ZVBheWxvYWRcIiB9XSB9LCBcImF0dHJpYnV0ZUlkZW50aWZpZXJcIjogeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgc3Ryb25nXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWdcIiB9IH0sIFwibWF0Y2hcIjogYCgoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSklKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpKCg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopKWAgfSwgXCJhdHRyaWJ1dGVQYXlsb2FkXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdJXxeJSkpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwiZW5kXCI6IFwiKCg/PCFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKVs6XFxcXD9dKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpfCg/PD1bWzpzcGFjZTpdXSl8KD89XFxcXF0pXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cFwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjcGF0aE1vZHVsZUV4dGVuZGVkXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcGF0aFJlY29yZFwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXTp8XjopKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKVwiLCBcImVuZFwiOiBcIig/PVxcXFxdKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNzaWduYXR1cmVcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0eXBlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdXFxcXD98XlxcXFw/KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCIoPz1cXFxcXSlcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdXFxcXD98XlxcXFw/KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCIoPz1cXFxcXSl8XFxcXGJ3aGVuXFxcXGJcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7fSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNwYXR0ZXJuXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1dd2hlbnxed2hlbikpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKD89XFxcXF0pXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3Rlcm1cIiB9XSB9XSB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0ZXJtXCIgfV0gfSwgXCJiaW5kQ2xhc3NUZXJtXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1dYW5kfF5hbmR8W15bOndvcmQ6XV1jbGFzc3xeY2xhc3N8W15bOndvcmQ6XV10eXBlfF50eXBlKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogXCIoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkoOil8KD0pKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSl8KD89Ozt8XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIHN0cm9uZ1wiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXWFuZHxeYW5kfFteWzp3b3JkOl1dY2xhc3N8XmNsYXNzfFteWzp3b3JkOl1ddHlwZXxedHlwZSkpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IGAoPz0oPzooPyFcXFxcYig/OmFuZHwnfGFzfGFzcnxhc3NlcnR8XFxcXCp8YmVnaW58Y2xhc3N8OnwsfEB8Y29uc3RyYWludHxkb3xkb25lfGRvd250b3xlbHNlfGVuZHw9fGV4Y2VwdGlvbnxleHRlcm5hbHxmYWxzZXxmb3J8XFxcXC58ZnVufGZ1bmN0aW9ufGZ1bmN0b3J8PnwtfGlmfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsYW5kfGxhenl8XFxcXHt8XFxcXCh8XFxcXFt8PHxsZXR8bG9yfGxzbHxsc3J8bHhvcnxtYXRjaHxtZXRob2R8bW9kfG1vZHVsZXxtdXRhYmxlfG5ld3xub25yZWN8I3xvYmplY3R8b2Z8b3BlbnxvcnwlfFxcXFwrfHByaXZhdGV8XFxcXD98XCJ8cmVjfFxcXFxcXFxcfFxcXFx9fFxcXFwpfFxcXFxdfDt8c2lnfC98c3RydWN0fHRoZW58fnx0b3x0cnVlfHRyeXx0eXBlfHZhbHxcXFxcfHx2aXJ0dWFsfHdoZW58d2hpbGV8d2l0aClcXFxcYig/OlteJ118JCkpXFxcXGIoPz1bWzpsb3dlcjpdX10pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKVtbOnNwYWNlOl1dKix8W15bOnNwYWNlOl1bOmxvd2VyOl0lXSl8KD86KD8hXFxcXGIoPzphbmR8J3xhc3xhc3J8YXNzZXJ0fFxcXFwqfGJlZ2lufGNsYXNzfDp8LHxAfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8PXxleGNlcHRpb258ZXh0ZXJuYWx8ZmFsc2V8Zm9yfFxcXFwufGZ1bnxmdW5jdGlvbnxmdW5jdG9yfD58LXxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGFuZHxsYXp5fFxcXFx7fFxcXFwofFxcXFxbfDx8bGV0fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWV0aG9kfG1vZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfCN8b2JqZWN0fG9mfG9wZW58b3J8JXxcXFxcK3xwcml2YXRlfFxcXFw/fFwifHJlY3xcXFxcXFxcXHxcXFxcfXxcXFxcKXxcXFxcXXw7fHNpZ3wvfHN0cnVjdHx0aGVufH58dG98dHJ1ZXx0cnl8dHlwZXx2YWx8XFxcXHx8dmlydHVhbHx3aGVufHdoaWxlfHdpdGgpXFxcXGIoPzpbXiddfCQpKVxcXFxiKD89W1s6bG93ZXI6XV9dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKil8KD89XFxcXGJ0eXBlXFxcXGIpYCwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImVudGl0eS5uYW1lLmZ1bmN0aW9uIHN0cm9uZyBlbXBoYXNpc1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjYXR0cmlidXRlSWRlbnRpZmllclwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIlxcXFxbXCIsIFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1wiIH0gfSwgXCJlbmRcIjogXCJcXFxcXVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN0eXBlXCIgfV0gfSwgeyBcImluY2x1ZGVcIjogXCIjYmluZFRlcm1BcmdzXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdOnxeOikpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwiZW5kXCI6IFwiKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pPSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pfCg/PVxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjbGl0ZXJhbENsYXNzVHlwZVwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXT18Xj0pKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKVwiLCBcImVuZFwiOiBcIlxcXFxiYW5kXFxcXGJ8KD89Ozt8XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIG1hcmt1cC51bmRlcmxpbmVcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3Rlcm1cIiB9XSB9XSB9LCBcImJpbmRDbGFzc1R5cGVcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W15bOndvcmQ6XV1hbmR8XmFuZHxbXls6d29yZDpdXWNsYXNzfF5jbGFzc3xbXls6d29yZDpdXXR5cGV8XnR5cGUpKSg/IVtbOndvcmQ6XV0pKVwiLCBcImVuZFwiOiBcIig/PCFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSg6KXwoPSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKXwoPz07O3xcXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgc3Ryb25nXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1dYW5kfF5hbmR8W15bOndvcmQ6XV1jbGFzc3xeY2xhc3N8W15bOndvcmQ6XV10eXBlfF50eXBlKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogYCg/PSg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopW1s6c3BhY2U6XV0qLHxbXls6c3BhY2U6XVs6bG93ZXI6XSVdKXwoPzooPyFcXFxcYig/OmFuZHwnfGFzfGFzcnxhc3NlcnR8XFxcXCp8YmVnaW58Y2xhc3N8OnwsfEB8Y29uc3RyYWludHxkb3xkb25lfGRvd250b3xlbHNlfGVuZHw9fGV4Y2VwdGlvbnxleHRlcm5hbHxmYWxzZXxmb3J8XFxcXC58ZnVufGZ1bmN0aW9ufGZ1bmN0b3J8PnwtfGlmfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsYW5kfGxhenl8XFxcXHt8XFxcXCh8XFxcXFt8PHxsZXR8bG9yfGxzbHxsc3J8bHhvcnxtYXRjaHxtZXRob2R8bW9kfG1vZHVsZXxtdXRhYmxlfG5ld3xub25yZWN8I3xvYmplY3R8b2Z8b3BlbnxvcnwlfFxcXFwrfHByaXZhdGV8XFxcXD98XCJ8cmVjfFxcXFxcXFxcfFxcXFx9fFxcXFwpfFxcXFxdfDt8c2lnfC98c3RydWN0fHRoZW58fnx0b3x0cnVlfHRyeXx0eXBlfHZhbHxcXFxcfHx2aXJ0dWFsfHdoZW58d2hpbGV8d2l0aClcXFxcYig/OlteJ118JCkpXFxcXGIoPz1bWzpsb3dlcjpdX10pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKXwoPz1cXFxcYnR5cGVcXFxcYilgLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24gc3Ryb25nIGVtcGhhc2lzXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNhdHRyaWJ1dGVJZGVudGlmaWVyXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiXFxcXFtcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSB9LCBcImVuZFwiOiBcIlxcXFxdXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3R5cGVcIiB9XSB9LCB7IFwiaW5jbHVkZVwiOiBcIiNiaW5kVGVybUFyZ3NcIiB9XSB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF06fF46KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCIoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSk9KD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSl8KD89XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx2YWwpXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUgc3Ryb25nXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNsaXRlcmFsQ2xhc3NUeXBlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdPXxePSkpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwiZW5kXCI6IFwiXFxcXGJhbmRcXFxcYnwoPz07O3xcXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgbWFya3VwLnVuZGVybGluZVwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjbGl0ZXJhbENsYXNzVHlwZVwiIH1dIH1dIH0sIFwiYmluZENvbnN0cnVjdG9yXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1dZXhjZXB0aW9ufF5leGNlcHRpb24pKSg/IVtbOndvcmQ6XV0pKXwoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF1cXFxcKz18XlxcXFwrPXxbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXT18Xj18W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF1cXFxcfHxeXFxcXHwpKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKVwiLCBcImVuZFwiOiBcIig6KXwoXFxcXGJvZlxcXFxiKXwoKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXFxcXHwoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSl8KD89Ozt8XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIHN0cm9uZ1wiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSwgXCIzXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjYXR0cmlidXRlSWRlbnRpZmllclwiIH0sIHsgXCJtYXRjaFwiOiBcIlxcXFwuXFxcXC5cIiwgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9LCB7IFwibWF0Y2hcIjogXCJcXFxcYig/OlxcXFxiKD89W1s6dXBwZXI6XV0pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKVxcXFxiKD8hW1s6c3BhY2U6XV0qKD86XFxcXC58XFxcXChbXlxcXFwqXSkpXCIsIFwibmFtZVwiOiBcImNvbnN0YW50Lmxhbmd1YWdlIGNvbnN0YW50Lm51bWVyaWMgZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLmlkLmNzcyBzdHJvbmdcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0eXBlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdOnxeOikpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpfCg/Oig/PD0oPzpbXls6d29yZDpdXW9mfF5vZikpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXFxcXHwoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKXwoPz07O3xcXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdHlwZVwiIH1dIH1dIH0sIFwiYmluZFNpZ25hdHVyZVwiOiB7IFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W15bOndvcmQ6XV10eXBlfF50eXBlKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogXCIoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSk9KD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNwYXRoTW9kdWxlRXh0ZW5kZWRcIiB9XSB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF09fF49KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCJcXFxcYmFuZFxcXFxifCg/PTs7fFxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cCBtYXJrdXAudW5kZXJsaW5lXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNzaWduYXR1cmVcIiB9XSB9XSB9LCBcImJpbmRTdHJ1Y3R1cmVcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50XCIgfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1dYW5kfF5hbmQpKSg/IVtbOndvcmQ6XV0pKXwoPz1bWzp1cHBlcjpdXSlcIiwgXCJlbmRcIjogXCIoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkoOig/IT0pKXwoOj89KSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pfCg/PVxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIHN0cm9uZ1wiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwibWF0Y2hcIjogXCJcXFxcYm1vZHVsZVxcXFxiXCIsIFwibmFtZVwiOiBcIm1hcmt1cC5pbnNlcnRlZCBjb25zdGFudC5sYW5ndWFnZSBzdXBwb3J0LmNvbnN0YW50LnByb3BlcnR5LXZhbHVlIGVudGl0eS5uYW1lLmZpbGVuYW1lXCIgfSwgeyBcIm1hdGNoXCI6IFwiKD86XFxcXGIoPz1bWzp1cHBlcjpdXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopXCIsIFwibmFtZVwiOiBcImVudGl0eS5uYW1lLmZ1bmN0aW9uIHN0cm9uZyBlbXBoYXNpc1wiIH0sIHsgXCJiZWdpblwiOiBcIlxcXFwoKD8hXFxcXCkpXCIsIFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1wiIH0gfSwgXCJlbmRcIjogXCJcXFxcKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50XCIgfSwgeyBcImJlZ2luXCI6IFwiKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pOig/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIHN0cm9uZ1wiIH0gfSwgXCJlbmRcIjogXCIoPz1cXFxcKSlcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjc2lnbmF0dXJlXCIgfV0gfSwgeyBcImluY2x1ZGVcIjogXCIjdmFyaWFibGVNb2R1bGVcIiB9XSB9LCB7IFwiaW5jbHVkZVwiOiBcIiNsaXRlcmFsVW5pdFwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXTp8XjopKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKVwiLCBcImVuZFwiOiBcIlxcXFxiKGFuZClcXFxcYnwoKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pPSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKXwoPz07O3xcXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgbWFya3VwLnVuZGVybGluZVwiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3NpZ25hdHVyZVwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXTo9fF46PXxbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXT18Xj0pKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKVwiLCBcImVuZFwiOiBcIlxcXFxiKD86KGFuZCl8KHdpdGgpKVxcXFxifCg/PTs7fFxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cCBtYXJrdXAudW5kZXJsaW5lXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgbWFya3VwLnVuZGVybGluZVwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjc3RydWN0dXJlXCIgfV0gfV0gfSwgXCJiaW5kVGVybVwiOiB7IFwicGF0dGVybnNcIjogW3sgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSF8XiEpKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKXwoPzooPzw9KD86W15bOndvcmQ6XV1hbmR8XmFuZHxbXls6d29yZDpdXWV4dGVybmFsfF5leHRlcm5hbHxbXls6d29yZDpdXWxldHxebGV0fFteWzp3b3JkOl1dbWV0aG9kfF5tZXRob2R8W15bOndvcmQ6XV12YWx8XnZhbCkpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKFxcXFxibW9kdWxlXFxcXGIpfChcXFxcYm9wZW5cXFxcYil8KD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKDopfCgoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSk9KD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSl8KD89Ozt8XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcIm1hcmt1cC5pbnNlcnRlZCBjb25zdGFudC5sYW5ndWFnZSBzdXBwb3J0LmNvbnN0YW50LnByb3BlcnR5LXZhbHVlIGVudGl0eS5uYW1lLmZpbGVuYW1lXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9LCBcIjNcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cCBzdHJvbmdcIiB9LCBcIjRcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUgc3Ryb25nXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0hfF4hKSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSl8KD86KD88PSg/OlteWzp3b3JkOl1dYW5kfF5hbmR8W15bOndvcmQ6XV1leHRlcm5hbHxeZXh0ZXJuYWx8W15bOndvcmQ6XV1sZXR8XmxldHxbXls6d29yZDpdXW1ldGhvZHxebWV0aG9kfFteWzp3b3JkOl1ddmFsfF52YWwpKSg/IVtbOndvcmQ6XV0pKVwiLCBcImVuZFwiOiBgKD89XFxcXGIoPzptb2R1bGV8b3BlbilcXFxcYil8KD89KD86KD8hXFxcXGIoPzphbmR8J3xhc3xhc3J8YXNzZXJ0fFxcXFwqfGJlZ2lufGNsYXNzfDp8LHxAfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8PXxleGNlcHRpb258ZXh0ZXJuYWx8ZmFsc2V8Zm9yfFxcXFwufGZ1bnxmdW5jdGlvbnxmdW5jdG9yfD58LXxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGFuZHxsYXp5fFxcXFx7fFxcXFwofFxcXFxbfDx8bGV0fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWV0aG9kfG1vZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfCN8b2JqZWN0fG9mfG9wZW58b3J8JXxcXFxcK3xwcml2YXRlfFxcXFw/fFwifHJlY3xcXFxcXFxcXHxcXFxcfXxcXFxcKXxcXFxcXXw7fHNpZ3wvfHN0cnVjdHx0aGVufH58dG98dHJ1ZXx0cnl8dHlwZXx2YWx8XFxcXHx8dmlydHVhbHx3aGVufHdoaWxlfHdpdGgpXFxcXGIoPzpbXiddfCQpKVxcXFxiKD89W1s6bG93ZXI6XV9dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKilbWzpzcGFjZTpdXSosfFteWzpzcGFjZTpdWzpsb3dlcjpdJV0pfChcXFxcYnJlY1xcXFxiKXwoKD86KD8hXFxcXGIoPzphbmR8J3xhc3xhc3J8YXNzZXJ0fFxcXFwqfGJlZ2lufGNsYXNzfDp8LHxAfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8PXxleGNlcHRpb258ZXh0ZXJuYWx8ZmFsc2V8Zm9yfFxcXFwufGZ1bnxmdW5jdGlvbnxmdW5jdG9yfD58LXxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGFuZHxsYXp5fFxcXFx7fFxcXFwofFxcXFxbfDx8bGV0fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWV0aG9kfG1vZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfCN8b2JqZWN0fG9mfG9wZW58b3J8JXxcXFxcK3xwcml2YXRlfFxcXFw/fFwifHJlY3xcXFxcXFxcXHxcXFxcfXxcXFxcKXxcXFxcXXw7fHNpZ3wvfHN0cnVjdHx0aGVufH58dG98dHJ1ZXx0cnl8dHlwZXx2YWx8XFxcXHx8dmlydHVhbHx3aGVufHdoaWxlfHdpdGgpXFxcXGIoPzpbXiddfCQpKVxcXFxiKD89W1s6bG93ZXI6XV9dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKikpYCwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24gc3Ryb25nIGVtcGhhc2lzXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNhdHRyaWJ1dGVJZGVudGlmaWVyXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXXJlY3xecmVjKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogYCgoPzooPyFcXFxcYig/OmFuZHwnfGFzfGFzcnxhc3NlcnR8XFxcXCp8YmVnaW58Y2xhc3N8OnwsfEB8Y29uc3RyYWludHxkb3xkb25lfGRvd250b3xlbHNlfGVuZHw9fGV4Y2VwdGlvbnxleHRlcm5hbHxmYWxzZXxmb3J8XFxcXC58ZnVufGZ1bmN0aW9ufGZ1bmN0b3J8PnwtfGlmfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsYW5kfGxhenl8XFxcXHt8XFxcXCh8XFxcXFt8PHxsZXR8bG9yfGxzbHxsc3J8bHhvcnxtYXRjaHxtZXRob2R8bW9kfG1vZHVsZXxtdXRhYmxlfG5ld3xub25yZWN8I3xvYmplY3R8b2Z8b3BlbnxvcnwlfFxcXFwrfHByaXZhdGV8XFxcXD98XCJ8cmVjfFxcXFxcXFxcfFxcXFx9fFxcXFwpfFxcXFxdfDt8c2lnfC98c3RydWN0fHRoZW58fnx0b3x0cnVlfHRyeXx0eXBlfHZhbHxcXFxcfHx2aXJ0dWFsfHdoZW58d2hpbGV8d2l0aClcXFxcYig/OlteJ118JCkpXFxcXGIoPz1bWzpsb3dlcjpdX10pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKSl8KD89W15bOnNwYWNlOl1bOmFscGhhOl1dKWAsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS5mdW5jdGlvbiBzdHJvbmcgZW1waGFzaXNcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2JpbmRUZXJtQXJnc1wiIH1dIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2JpbmRUZXJtQXJnc1wiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXW1vZHVsZXxebW9kdWxlKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogXCIoPz07O3xcXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNkZWNsTW9kdWxlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1db3Blbnxeb3BlbikpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKD89XFxcXGJpblxcXFxiKXwoPz1cXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNwYXRoTW9kdWxlU2ltcGxlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdOnxeOikpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwiZW5kXCI6IFwiKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pPSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pfCg/PTs7fFxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUgc3Ryb25nXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF06fF46KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCJcXFxcYnR5cGVcXFxcYnwoPz1bXls6c3BhY2U6XV0pXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkLmNvbnRyb2xcIiB9IH0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1ddHlwZXxedHlwZSkpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXFxcXC4oPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3BhdHRlcm5cIiB9XSB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0eXBlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdPXxePSkpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwiZW5kXCI6IFwiXFxcXGJhbmRcXFxcYnwoPz07O3xcXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgbWFya3VwLnVuZGVybGluZVwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH1dIH0sIFwiYmluZFRlcm1BcmdzXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImFwcGx5RW5kUGF0dGVybkxhc3RcIjogdHJ1ZSwgXCJiZWdpblwiOiBcIn58XFxcXD9cIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwiZW5kXCI6IFwiOnwoPz1bXls6c3BhY2U6XV0pXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF1+fF5+fFteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdXFxcXD98XlxcXFw/KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogYCg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopfCg/PD1cXFxcKSlgLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwibWFya3VwLmluc2VydGVkIGNvbnN0YW50Lmxhbmd1YWdlIHN1cHBvcnQuY29uc3RhbnQucHJvcGVydHktdmFsdWUgZW50aXR5Lm5hbWUuZmlsZW5hbWVcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiYmVnaW5cIjogXCJcXFxcKCg/IVxcXFwqKVwiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWdcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXClcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD88PVxcXFwoKVwiLCBcImVuZFwiOiBcIjp8PVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZFwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcIm1hdGNoXCI6IGAoPzooPyFcXFxcYig/OmFuZHwnfGFzfGFzcnxhc3NlcnR8XFxcXCp8YmVnaW58Y2xhc3N8OnwsfEB8Y29uc3RyYWludHxkb3xkb25lfGRvd250b3xlbHNlfGVuZHw9fGV4Y2VwdGlvbnxleHRlcm5hbHxmYWxzZXxmb3J8XFxcXC58ZnVufGZ1bmN0aW9ufGZ1bmN0b3J8PnwtfGlmfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsYW5kfGxhenl8XFxcXHt8XFxcXCh8XFxcXFt8PHxsZXR8bG9yfGxzbHxsc3J8bHhvcnxtYXRjaHxtZXRob2R8bW9kfG1vZHVsZXxtdXRhYmxlfG5ld3xub25yZWN8I3xvYmplY3R8b2Z8b3BlbnxvcnwlfFxcXFwrfHByaXZhdGV8XFxcXD98XCJ8cmVjfFxcXFxcXFxcfFxcXFx9fFxcXFwpfFxcXFxdfDt8c2lnfC98c3RydWN0fHRoZW58fnx0b3x0cnVlfHRyeXx0eXBlfHZhbHxcXFxcfHx2aXJ0dWFsfHdoZW58d2hpbGV8d2l0aClcXFxcYig/OlteJ118JCkpXFxcXGIoPz1bWzpsb3dlcjpdX10pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKWAsIFwibmFtZVwiOiBcIm1hcmt1cC5pbnNlcnRlZCBjb25zdGFudC5sYW5ndWFnZSBzdXBwb3J0LmNvbnN0YW50LnByb3BlcnR5LXZhbHVlIGVudGl0eS5uYW1lLmZpbGVuYW1lXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD88PTopXCIsIFwiZW5kXCI6IFwiPXwoPz1cXFxcKSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImtleXdvcmRcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3R5cGVcIiB9XSB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF09fF49KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCIoPz1cXFxcKSlcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH1dIH1dIH1dIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3BhdHRlcm5cIiB9XSB9LCBcImJpbmRUeXBlXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1dYW5kfF5hbmR8W15bOndvcmQ6XV10eXBlfF50eXBlKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogXCIoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSlcXFxcKz18PSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pfCg/PTs7fFxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUgc3Ryb25nXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNhdHRyaWJ1dGVJZGVudGlmaWVyXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcGF0aFR5cGVcIiB9LCB7IFwibWF0Y2hcIjogYCg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopYCwgXCJuYW1lXCI6IFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24gc3Ryb25nXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjdHlwZVwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXVxcXFwrPXxeXFxcXCs9fFteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdPXxePSkpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwiZW5kXCI6IFwiXFxcXGJhbmRcXFxcYnwoPz07O3xcXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgbWFya3VwLnVuZGVybGluZVwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjYmluZENvbnN0cnVjdG9yXCIgfV0gfV0gfSwgXCJjb21tZW50XCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjYXR0cmlidXRlXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjZXh0ZW5zaW9uXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjY29tbWVudEJsb2NrXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjY29tbWVudERvY1wiIH1dIH0sIFwiY29tbWVudEJsb2NrXCI6IHsgXCJiZWdpblwiOiBcIlxcXFwoXFxcXCooPyFcXFxcKlteXFxcXCldKVwiLCBcImNvbnRlbnROYW1lXCI6IFwiZW1waGFzaXNcIiwgXCJlbmRcIjogXCJcXFxcKlxcXFwpXCIsIFwibmFtZVwiOiBcImNvbW1lbnQgY29uc3RhbnQucmVnZXhwIG1ldGEuc2VwYXJhdG9yLm1hcmtkb3duXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRCbG9ja1wiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnREb2NcIiB9XSB9LCBcImNvbW1lbnREb2NcIjogeyBcImJlZ2luXCI6IFwiXFxcXChcXFxcKlxcXFwqXCIsIFwiZW5kXCI6IFwiXFxcXCpcXFxcKVwiLCBcIm5hbWVcIjogXCJjb21tZW50IGNvbnN0YW50LnJlZ2V4cCBtZXRhLnNlcGFyYXRvci5tYXJrZG93blwiLCBcInBhdHRlcm5zXCI6IFt7IFwibWF0Y2hcIjogXCJcXFxcKlwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9XSB9LCBcImRlY2xcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNkZWNsQ2xhc3NcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNkZWNsRXhjZXB0aW9uXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjZGVjbEluY2x1ZGVcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNkZWNsTW9kdWxlXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjZGVjbE9wZW5cIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNkZWNsVGVybVwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2RlY2xUeXBlXCIgfV0gfSwgXCJkZWNsQ2xhc3NcIjogeyBcImJlZ2luXCI6IFwiXFxcXGJjbGFzc1xcXFxiXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImVudGl0eS5uYW1lLmNsYXNzIGNvbnN0YW50Lm51bWVyaWMgbWFya3VwLnVuZGVybGluZVwiIH0gfSwgXCJlbmRcIjogXCI7O3woPz1cXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNwcmFnbWFcIiB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W15bOndvcmQ6XV1jbGFzc3xeY2xhc3MpKSg/IVtbOndvcmQ6XV0pKVwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS5jbGFzcyBjb25zdGFudC5udW1lcmljIG1hcmt1cC51bmRlcmxpbmVcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXGJ0eXBlXFxcXGJ8KD89XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx2YWwpXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNiaW5kQ2xhc3NUZXJtXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1ddHlwZXxedHlwZSkpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKD89Ozt8XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjYmluZENsYXNzVHlwZVwiIH1dIH1dIH0sIFwiZGVjbEV4Y2VwdGlvblwiOiB7IFwiYmVnaW5cIjogXCJcXFxcYmV4Y2VwdGlvblxcXFxiXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImtleXdvcmQgbWFya3VwLnVuZGVybGluZVwiIH0gfSwgXCJlbmRcIjogXCI7O3woPz1cXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2F0dHJpYnV0ZUlkZW50aWZpZXJcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcHJhZ21hXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjYmluZENvbnN0cnVjdG9yXCIgfV0gfSwgXCJkZWNsSW5jbHVkZVwiOiB7IFwiYmVnaW5cIjogXCJcXFxcYmluY2x1ZGVcXFxcYlwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cFwiIH0gfSwgXCJlbmRcIjogXCI7O3woPz1cXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2F0dHJpYnV0ZUlkZW50aWZpZXJcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcHJhZ21hXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjc2lnbmF0dXJlXCIgfV0gfSwgXCJkZWNsTW9kdWxlXCI6IHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXW1vZHVsZXxebW9kdWxlKSkoPyFbWzp3b3JkOl1dKSl8XFxcXGJtb2R1bGVcXFxcYlwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJtYXJrdXAuaW5zZXJ0ZWQgY29uc3RhbnQubGFuZ3VhZ2Ugc3VwcG9ydC5jb25zdGFudC5wcm9wZXJ0eS12YWx1ZSBlbnRpdHkubmFtZS5maWxlbmFtZSBtYXJrdXAudW5kZXJsaW5lXCIgfSB9LCBcImVuZFwiOiBcIjs7fCg/PVxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3ByYWdtYVwiIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXW1vZHVsZXxebW9kdWxlKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogXCIoXFxcXGJ0eXBlXFxcXGIpfCg/PVtbOnVwcGVyOl1dKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZFwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjYXR0cmlidXRlSWRlbnRpZmllclwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwibWF0Y2hcIjogXCJcXFxcYnJlY1xcXFxiXCIsIFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1ddHlwZXxedHlwZSkpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKD89Ozt8XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjYmluZFNpZ25hdHVyZVwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/PVtbOnVwcGVyOl1dKVwiLCBcImVuZFwiOiBcIig/PTs7fFxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2JpbmRTdHJ1Y3R1cmVcIiB9XSB9XSB9LCBcImRlY2xPcGVuXCI6IHsgXCJiZWdpblwiOiBcIlxcXFxib3BlblxcXFxiXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcImVuZFwiOiBcIjs7fCg/PVxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjYXR0cmlidXRlSWRlbnRpZmllclwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNwcmFnbWFcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNwYXRoTW9kdWxlRXh0ZW5kZWRcIiB9XSB9LCBcImRlY2xUZXJtXCI6IHsgXCJiZWdpblwiOiBcIlxcXFxiKD86KGV4dGVybmFsfHZhbCl8KG1ldGhvZCl8KGxldCkpXFxcXGIoIT8pXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBtYXJrdXAudW5kZXJsaW5lXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwic3RvcmFnZS50eXBlIG1hcmt1cC51bmRlcmxpbmVcIiB9LCBcIjNcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkLmNvbnRyb2wgbWFya3VwLnVuZGVybGluZVwiIH0sIFwiNFwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcImVuZFwiOiBcIjs7fCg/PVxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3ByYWdtYVwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2JpbmRUZXJtXCIgfV0gfSwgXCJkZWNsVHlwZVwiOiB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W15bOndvcmQ6XV10eXBlfF50eXBlKSkoPyFbWzp3b3JkOl1dKSl8XFxcXGJ0eXBlXFxcXGJcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZCBtYXJrdXAudW5kZXJsaW5lXCIgfSB9LCBcImVuZFwiOiBcIjs7fCg/PVxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3ByYWdtYVwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2JpbmRUeXBlXCIgfV0gfSwgXCJleHRlbnNpb25cIjogeyBcImJlZ2luXCI6IFwiKFxcXFxbKSgoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSklezEsM30oPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwiY29uc3RhbnQubGFuZ3VhZ2UgY29uc3RhbnQubnVtZXJpYyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUuaWQuY3NzIHN0cm9uZ1wiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcImVuZFwiOiBcIlxcXFxdXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJjb25zdGFudC5sYW5ndWFnZSBjb25zdGFudC5udW1lcmljIGVudGl0eS5vdGhlci5hdHRyaWJ1dGUtbmFtZS5pZC5jc3Mgc3Ryb25nXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNhdHRyaWJ1dGVQYXlsb2FkXCIgfV0gfSwgXCJsaXRlcmFsXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdGVybUNvbnN0cnVjdG9yXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjbGl0ZXJhbEFycmF5XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjbGl0ZXJhbEJvb2xlYW5cIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNsaXRlcmFsQ2hhcmFjdGVyXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjbGl0ZXJhbExpc3RcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNsaXRlcmFsTnVtYmVyXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjbGl0ZXJhbE9iamVjdFRlcm1cIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNsaXRlcmFsU3RyaW5nXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjbGl0ZXJhbFJlY29yZFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2xpdGVyYWxVbml0XCIgfV0gfSwgXCJsaXRlcmFsQXJyYXlcIjogeyBcImJlZ2luXCI6IFwiXFxcXFtcXFxcfFwiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwiY29uc3RhbnQubGFuZ3VhZ2UgY29uc3RhbnQubnVtZXJpYyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUuaWQuY3NzIHN0cm9uZ1wiIH0gfSwgXCJlbmRcIjogXCJcXFxcfFxcXFxdXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3Rlcm1cIiB9XSB9LCBcImxpdGVyYWxCb29sZWFuXCI6IHsgXCJtYXRjaFwiOiBcIlxcXFxiZmFsc2V8dHJ1ZVxcXFxiXCIsIFwibmFtZVwiOiBcImNvbnN0YW50Lmxhbmd1YWdlIGNvbnN0YW50Lm51bWVyaWMgZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLmlkLmNzcyBzdHJvbmdcIiB9LCBcImxpdGVyYWxDaGFyYWN0ZXJcIjogeyBcImJlZ2luXCI6IFwiKD88IVtbOndvcmQ6XV0pJ1wiLCBcImVuZFwiOiBcIidcIiwgXCJuYW1lXCI6IFwibWFya3VwLnB1bmN0dWF0aW9uLnF1b3RlLmJlZ2lubmluZ1wiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNsaXRlcmFsQ2hhcmFjdGVyRXNjYXBlXCIgfV0gfSwgXCJsaXRlcmFsQ2hhcmFjdGVyRXNjYXBlXCI6IHsgXCJtYXRjaFwiOiBgXFxcXFxcXFwoPzpbXFxcXFxcXFxcIidudGJyXXxbWzpkaWdpdDpdXVtbOmRpZ2l0Ol1dW1s6ZGlnaXQ6XV18eFtbOnhkaWdpdDpdXVtbOnhkaWdpdDpdXXxvWzAtM11bMC03XVswLTddKWAgfSwgXCJsaXRlcmFsQ2xhc3NUeXBlXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJiZWdpblwiOiBcIlxcXFxib2JqZWN0XFxcXGJcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnIGVtcGhhc2lzXCIgfSB9LCBcImVuZFwiOiBcIlxcXFxiZW5kXFxcXGJcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiXFxcXGJpbmhlcml0XFxcXGJcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwiZW5kXCI6IFwiOzt8KD89XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCJcXFxcYmFzXFxcXGJcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwiZW5kXCI6IFwiOzt8KD89XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdmFyaWFibGVQYXR0ZXJuXCIgfV0gfSwgeyBcImluY2x1ZGVcIjogXCIjdHlwZVwiIH1dIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3BhdHRlcm5cIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNkZWNsVGVybVwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIlxcXFxbXCIsIFwiZW5kXCI6IFwiXFxcXF1cIiB9XSB9LCBcImxpdGVyYWxMaXN0XCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiXFxcXFtcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImNvbnN0YW50Lmxhbmd1YWdlIGNvbnN0YW50Lm51bWVyaWMgZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLmlkLmNzcyBzdHJvbmdcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXF1cIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH1dIH0sIFwibGl0ZXJhbE51bWJlclwiOiB7IFwibWF0Y2hcIjogXCIoPzwhW1s6YWxwaGE6XV0pW1s6ZGlnaXQ6XV1bWzpkaWdpdDpdXSooXFxcXC5bWzpkaWdpdDpdXVtbOmRpZ2l0Ol1dKik/XCIsIFwibmFtZVwiOiBcImNvbnN0YW50Lm51bWVyaWNcIiB9LCBcImxpdGVyYWxPYmplY3RUZXJtXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJiZWdpblwiOiBcIlxcXFxib2JqZWN0XFxcXGJcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnIGVtcGhhc2lzXCIgfSB9LCBcImVuZFwiOiBcIlxcXFxiZW5kXFxcXGJcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiXFxcXGJpbmhlcml0XFxcXGJcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwiZW5kXCI6IFwiOzt8KD89XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCJcXFxcYmFzXFxcXGJcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwiZW5kXCI6IFwiOzt8KD89XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdmFyaWFibGVQYXR0ZXJuXCIgfV0gfSwgeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3BhdHRlcm5cIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNkZWNsVGVybVwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIlxcXFxbXCIsIFwiZW5kXCI6IFwiXFxcXF1cIiB9XSB9LCBcImxpdGVyYWxSZWNvcmRcIjogeyBcImJlZ2luXCI6IFwiXFxcXHtcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImNvbnN0YW50Lmxhbmd1YWdlIGNvbnN0YW50Lm51bWVyaWMgZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLmlkLmNzcyBzdHJvbmcgc3Ryb25nXCIgfSB9LCBcImVuZFwiOiBcIlxcXFx9XCIsIFwicGF0dGVybnNcIjogW3sgXCJiZWdpblwiOiBcIig/PD1cXFxce3w7KVwiLCBcImVuZFwiOiBcIig6KXwoPSl8KDspfCh3aXRoKXwoPz1cXFxcfSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIHN0cm9uZ1wiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9LCBcIjNcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cFwiIH0sIFwiNFwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcGF0aE1vZHVsZVByZWZpeFNpbXBsZVwiIH0sIHsgXCJtYXRjaFwiOiBgKD86KD8hXFxcXGIoPzphbmR8J3xhc3xhc3J8YXNzZXJ0fFxcXFwqfGJlZ2lufGNsYXNzfDp8LHxAfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8PXxleGNlcHRpb258ZXh0ZXJuYWx8ZmFsc2V8Zm9yfFxcXFwufGZ1bnxmdW5jdGlvbnxmdW5jdG9yfD58LXxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGFuZHxsYXp5fFxcXFx7fFxcXFwofFxcXFxbfDx8bGV0fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWV0aG9kfG1vZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfCN8b2JqZWN0fG9mfG9wZW58b3J8JXxcXFxcK3xwcml2YXRlfFxcXFw/fFwifHJlY3xcXFxcXFxcXHxcXFxcfXxcXFxcKXxcXFxcXXw7fHNpZ3wvfHN0cnVjdHx0aGVufH58dG98dHJ1ZXx0cnl8dHlwZXx2YWx8XFxcXHx8dmlydHVhbHx3aGVufHdoaWxlfHdpdGgpXFxcXGIoPzpbXiddfCQpKVxcXFxiKD89W1s6bG93ZXI6XV9dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKilgLCBcIm5hbWVcIjogXCJtYXJrdXAuaW5zZXJ0ZWQgY29uc3RhbnQubGFuZ3VhZ2Ugc3VwcG9ydC5jb25zdGFudC5wcm9wZXJ0eS12YWx1ZSBlbnRpdHkubmFtZS5maWxlbmFtZSBlbXBoYXNpc1wiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXXdpdGh8XndpdGgpKSg/IVtbOndvcmQ6XV0pKVwiLCBcImVuZFwiOiBcIig6KXwoPSl8KDspfCg/PVxcXFx9KVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgc3Ryb25nXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH0sIFwiM1wiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwibWF0Y2hcIjogYCg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopYCwgXCJuYW1lXCI6IFwibWFya3VwLmluc2VydGVkIGNvbnN0YW50Lmxhbmd1YWdlIHN1cHBvcnQuY29uc3RhbnQucHJvcGVydHktdmFsdWUgZW50aXR5Lm5hbWUuZmlsZW5hbWUgZW1waGFzaXNcIiB9XSB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF06fF46KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCIoOyl8KD0pfCg/PVxcXFx9KVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUgc3Ryb25nXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN0eXBlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdPXxePSkpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwiZW5kXCI6IFwiO3woPz1cXFxcfSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN0ZXJtXCIgfV0gfV0gfSwgXCJsaXRlcmFsU3RyaW5nXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6ICdcIicsIFwiZW5kXCI6ICdcIicsIFwibmFtZVwiOiBcInN0cmluZyBiZWdpbm5pbmcucHVuY3R1YXRpb24uZGVmaW5pdGlvbi5xdW90ZS5tYXJrZG93blwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNsaXRlcmFsU3RyaW5nRXNjYXBlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKFxcXFx7KShbX1s6bG93ZXI6XV0qPykoXFxcXHwpXCIsIFwiZW5kXCI6IFwiKFxcXFx8KShcXFxcMikoXFxcXH0pXCIsIFwibmFtZVwiOiBcInN0cmluZyBiZWdpbm5pbmcucHVuY3R1YXRpb24uZGVmaW5pdGlvbi5xdW90ZS5tYXJrZG93blwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNsaXRlcmFsU3RyaW5nRXNjYXBlXCIgfV0gfV0gfSwgXCJsaXRlcmFsU3RyaW5nRXNjYXBlXCI6IHsgXCJtYXRjaFwiOiAnXFxcXFxcXFwoPzpbXFxcXFxcXFxcIm50YnJdfFtbOmRpZ2l0Ol1dW1s6ZGlnaXQ6XV1bWzpkaWdpdDpdXXx4W1s6eGRpZ2l0Ol1dW1s6eGRpZ2l0Ol1dfG9bMC0zXVswLTddWzAtN10pJyB9LCBcImxpdGVyYWxVbml0XCI6IHsgXCJtYXRjaFwiOiBcIlxcXFwoXFxcXClcIiwgXCJuYW1lXCI6IFwiY29uc3RhbnQubGFuZ3VhZ2UgY29uc3RhbnQubnVtZXJpYyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUuaWQuY3NzIHN0cm9uZ1wiIH0sIFwicGF0aE1vZHVsZUV4dGVuZGVkXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjcGF0aE1vZHVsZVByZWZpeEV4dGVuZGVkXCIgfSwgeyBcIm1hdGNoXCI6IFwiKD86XFxcXGIoPz1bWzp1cHBlcjpdXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopXCIsIFwibmFtZVwiOiBcImVudGl0eS5uYW1lLmNsYXNzIGNvbnN0YW50Lm51bWVyaWNcIiB9XSB9LCBcInBhdGhNb2R1bGVQcmVmaXhFeHRlbmRlZFwiOiB7IFwiYmVnaW5cIjogXCIoPzpcXFxcYig/PVtbOnVwcGVyOl1dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKikoPz1bWzpzcGFjZTpdXSpcXFxcLnwkfFxcXFwoKVwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS5jbGFzcyBjb25zdGFudC5udW1lcmljXCIgfSB9LCBcImVuZFwiOiBcIig/IVtbOnNwYWNlOl1cXFxcLl18JHxcXFxcKClcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJiZWdpblwiOiBcIlxcXFwoXCIsIFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkLmNvbnRyb2xcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXClcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcIm1hdGNoXCI6IFwiKCg/OlxcXFxiKD89W1s6dXBwZXI6XV0pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKSg/PVtbOnNwYWNlOl1dKlxcXFwpKSlcIiwgXCJuYW1lXCI6IFwic3RyaW5nLm90aGVyLmxpbmsgdmFyaWFibGUubGFuZ3VhZ2UgdmFyaWFibGUucGFyYW1ldGVyIGVtcGhhc2lzXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjc3RydWN0dXJlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXFxcXC4oPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKVwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkIHN0cm9uZ1wiIH0gfSwgXCJlbmRcIjogXCIoKD86XFxcXGIoPz1bWzp1cHBlcjpdXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopKD89W1s6c3BhY2U6XV0qXFxcXC58JCkpfCgoPzpcXFxcYig/PVtbOnVwcGVyOl1dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKikoPz1bWzpzcGFjZTpdXSooPzokfFxcXFwoKSkpfCgoPzpcXFxcYig/PVtbOnVwcGVyOl1dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKikoPz1bWzpzcGFjZTpdXSpcXFxcKSkpfCg/IVtbOnNwYWNlOl1cXFxcLls6dXBwZXI6XV18JHxcXFxcKClcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcImVudGl0eS5uYW1lLmNsYXNzIGNvbnN0YW50Lm51bWVyaWNcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS5mdW5jdGlvbiBzdHJvbmdcIiB9LCBcIjNcIjogeyBcIm5hbWVcIjogXCJzdHJpbmcub3RoZXIubGluayB2YXJpYWJsZS5sYW5ndWFnZSB2YXJpYWJsZS5wYXJhbWV0ZXIgZW1waGFzaXNcIiB9IH0gfV0gfSwgXCJwYXRoTW9kdWxlUHJlZml4RXh0ZW5kZWRQYXJlbnNcIjogeyBcImJlZ2luXCI6IFwiXFxcXChcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImtleXdvcmQuY29udHJvbFwiIH0gfSwgXCJlbmRcIjogXCJcXFxcKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwibWF0Y2hcIjogXCIoKD86XFxcXGIoPz1bWzp1cHBlcjpdXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopKD89W1s6c3BhY2U6XV0qXFxcXCkpKVwiLCBcIm5hbWVcIjogXCJzdHJpbmcub3RoZXIubGluayB2YXJpYWJsZS5sYW5ndWFnZSB2YXJpYWJsZS5wYXJhbWV0ZXIgZW1waGFzaXNcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNzdHJ1Y3R1cmVcIiB9XSB9LCBcInBhdGhNb2R1bGVQcmVmaXhTaW1wbGVcIjogeyBcImJlZ2luXCI6IFwiKD86XFxcXGIoPz1bWzp1cHBlcjpdXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopKD89W1s6c3BhY2U6XV0qXFxcXC4pXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImVudGl0eS5uYW1lLmNsYXNzIGNvbnN0YW50Lm51bWVyaWNcIiB9IH0sIFwiZW5kXCI6IFwiKD8hW1s6c3BhY2U6XVxcXFwuXSlcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJiZWdpblwiOiBcIig/PCFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKVxcXFwuKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSlcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZCBzdHJvbmdcIiB9IH0sIFwiZW5kXCI6IFwiKCg/OlxcXFxiKD89W1s6dXBwZXI6XV0pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKSg/PVtbOnNwYWNlOl1dKlxcXFwuKSl8KCg/OlxcXFxiKD89W1s6dXBwZXI6XV0pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKSg/PVtbOnNwYWNlOl1dKikpfCg/IVtbOnNwYWNlOl1cXFxcLls6dXBwZXI6XV0pXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS5jbGFzcyBjb25zdGFudC5udW1lcmljXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwiY29uc3RhbnQubGFuZ3VhZ2UgY29uc3RhbnQubnVtZXJpYyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUuaWQuY3NzIHN0cm9uZ1wiIH0gfSB9XSB9LCBcInBhdGhNb2R1bGVTaW1wbGVcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNwYXRoTW9kdWxlUHJlZml4U2ltcGxlXCIgfSwgeyBcIm1hdGNoXCI6IFwiKD86XFxcXGIoPz1bWzp1cHBlcjpdXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopXCIsIFwibmFtZVwiOiBcImVudGl0eS5uYW1lLmNsYXNzIGNvbnN0YW50Lm51bWVyaWNcIiB9XSB9LCBcInBhdGhSZWNvcmRcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogYCg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopYCwgXCJlbmRcIjogXCIoPz1bXls6c3BhY2U6XVxcXFwuXSkoPyFcXFxcKFxcXFwqKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50XCIgfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdXFxcXC58XlxcXFwuKSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSl8KD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXFxcXC4oPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKVwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkIHN0cm9uZ1wiIH0gfSwgXCJlbmRcIjogYCgoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSlcXFxcLig/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKXwoKD86KD8hXFxcXGIoPzphbmR8J3xhc3xhc3J8YXNzZXJ0fFxcXFwqfGJlZ2lufGNsYXNzfDp8LHxAfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8PXxleGNlcHRpb258ZXh0ZXJuYWx8ZmFsc2V8Zm9yfFxcXFwufGZ1bnxmdW5jdGlvbnxmdW5jdG9yfD58LXxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGFuZHxsYXp5fFxcXFx7fFxcXFwofFxcXFxbfDx8bGV0fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWV0aG9kfG1vZHxtdXRhYmxlfG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopKXwoPzw9XFxcXCkpfCg/PD1cXFxcXSlgLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZCBzdHJvbmdcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJtYXJrdXAuaW5zZXJ0ZWQgY29uc3RhbnQubGFuZ3VhZ2Ugc3VwcG9ydC5jb25zdGFudC5wcm9wZXJ0eS12YWx1ZSBlbnRpdHkubmFtZS5maWxlbmFtZVwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3BhdGhNb2R1bGVQcmVmaXhTaW1wbGVcIiB9LCB7IFwiYmVnaW5cIjogXCJcXFxcKCg/IVxcXFwqKVwiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXClcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIlxcXFxbXCIsIFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cFwiIH0gfSwgXCJlbmRcIjogXCJcXFxcXVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNwYXR0ZXJuXCIgfV0gfV0gfV0gfV0gfSwgXCJwYXR0ZXJuXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3BhdHRlcm5BcnJheVwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3BhdHRlcm5MYXp5XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcGF0dGVybkxpc3RcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNwYXR0ZXJuTWlzY1wiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3BhdHRlcm5Nb2R1bGVcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNwYXR0ZXJuUmVjb3JkXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjbGl0ZXJhbFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3BhdHRlcm5QYXJlbnNcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNwYXR0ZXJuVHlwZVwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3ZhcmlhYmxlUGF0dGVyblwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3Rlcm1PcGVyYXRvclwiIH1dIH0sIFwicGF0dGVybkFycmF5XCI6IHsgXCJiZWdpblwiOiBcIlxcXFxbXFxcXHxcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImNvbnN0YW50Lmxhbmd1YWdlIGNvbnN0YW50Lm51bWVyaWMgZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLmlkLmNzcyBzdHJvbmdcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXHxcXFxcXVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNwYXR0ZXJuXCIgfV0gfSwgXCJwYXR0ZXJuTGF6eVwiOiB7IFwibWF0Y2hcIjogXCJsYXp5XCIsIFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSwgXCJwYXR0ZXJuTGlzdFwiOiB7IFwiYmVnaW5cIjogXCJcXFxcW1wiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwiY29uc3RhbnQubGFuZ3VhZ2UgY29uc3RhbnQubnVtZXJpYyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUuaWQuY3NzIHN0cm9uZ1wiIH0gfSwgXCJlbmRcIjogXCJcXFxcXVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNwYXR0ZXJuXCIgfV0gfSwgXCJwYXR0ZXJuTWlzY1wiOiB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdHJpbmcucmVnZXhwIHN0cm9uZ1wiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSwgXCIzXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwibWF0Y2hcIjogXCIoKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pLCg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKXwoWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSspfFxcXFxiKGFzKVxcXFxiXCIgfSwgXCJwYXR0ZXJuTW9kdWxlXCI6IHsgXCJiZWdpblwiOiBcIlxcXFxibW9kdWxlXFxcXGJcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwibWFya3VwLmluc2VydGVkIGNvbnN0YW50Lmxhbmd1YWdlIHN1cHBvcnQuY29uc3RhbnQucHJvcGVydHktdmFsdWUgZW50aXR5Lm5hbWUuZmlsZW5hbWVcIiB9IH0sIFwiZW5kXCI6IFwiKD89XFxcXCkpXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2RlY2xNb2R1bGVcIiB9XSB9LCBcInBhdHRlcm5QYXJlbnNcIjogeyBcImJlZ2luXCI6IFwiXFxcXCgoPyFcXFxcKSlcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSB9LCBcImVuZFwiOiBcIlxcXFwpXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiYmVnaW5cIjogXCIoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSk6KD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSlcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgc3Ryb25nXCIgfSB9LCBcImVuZFwiOiBcIig/PVxcXFwpKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN0eXBlXCIgfV0gfSwgeyBcImluY2x1ZGVcIjogXCIjcGF0dGVyblwiIH1dIH0sIFwicGF0dGVyblJlY29yZFwiOiB7IFwiYmVnaW5cIjogXCJcXFxce1wiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwiY29uc3RhbnQubGFuZ3VhZ2UgY29uc3RhbnQubnVtZXJpYyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUuaWQuY3NzIHN0cm9uZyBzdHJvbmdcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXH1cIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD88PVxcXFx7fDspXCIsIFwiZW5kXCI6IFwiKDopfCg9KXwoOyl8KHdpdGgpfCg/PVxcXFx9KVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgc3Ryb25nXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH0sIFwiM1wiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSwgXCI0XCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNwYXRoTW9kdWxlUHJlZml4U2ltcGxlXCIgfSwgeyBcIm1hdGNoXCI6IGAoPzooPyFcXFxcYig/OmFuZHwnfGFzfGFzcnxhc3NlcnR8XFxcXCp8YmVnaW58Y2xhc3N8OnwsfEB8Y29uc3RyYWludHxkb3xkb25lfGRvd250b3xlbHNlfGVuZHw9fGV4Y2VwdGlvbnxleHRlcm5hbHxmYWxzZXxmb3J8XFxcXC58ZnVufGZ1bmN0aW9ufGZ1bmN0b3J8PnwtfGlmfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsYW5kfGxhenl8XFxcXHt8XFxcXCh8XFxcXFt8PHxsZXR8bG9yfGxzbHxsc3J8bHhvcnxtYXRjaHxtZXRob2R8bW9kfG1vZHVsZXxtdXRhYmxlfG5ld3xub25yZWN8I3xvYmplY3R8b2Z8b3BlbnxvcnwlfFxcXFwrfHByaXZhdGV8XFxcXD98XCJ8cmVjfFxcXFxcXFxcfFxcXFx9fFxcXFwpfFxcXFxdfDt8c2lnfC98c3RydWN0fHRoZW58fnx0b3x0cnVlfHRyeXx0eXBlfHZhbHxcXFxcfHx2aXJ0dWFsfHdoZW58d2hpbGV8d2l0aClcXFxcYig/OlteJ118JCkpXFxcXGIoPz1bWzpsb3dlcjpdX10pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKWAsIFwibmFtZVwiOiBcIm1hcmt1cC5pbnNlcnRlZCBjb25zdGFudC5sYW5ndWFnZSBzdXBwb3J0LmNvbnN0YW50LnByb3BlcnR5LXZhbHVlIGVudGl0eS5uYW1lLmZpbGVuYW1lIGVtcGhhc2lzXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1dd2l0aHxed2l0aCkpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKDopfCg9KXwoOyl8KD89XFxcXH0pXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cCBzdHJvbmdcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUgc3Ryb25nXCIgfSwgXCIzXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJtYXRjaFwiOiBgKD86KD8hXFxcXGIoPzphbmR8J3xhc3xhc3J8YXNzZXJ0fFxcXFwqfGJlZ2lufGNsYXNzfDp8LHxAfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8PXxleGNlcHRpb258ZXh0ZXJuYWx8ZmFsc2V8Zm9yfFxcXFwufGZ1bnxmdW5jdGlvbnxmdW5jdG9yfD58LXxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGFuZHxsYXp5fFxcXFx7fFxcXFwofFxcXFxbfDx8bGV0fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWV0aG9kfG1vZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfCN8b2JqZWN0fG9mfG9wZW58b3J8JXxcXFxcK3xwcml2YXRlfFxcXFw/fFwifHJlY3xcXFxcXFxcXHxcXFxcfXxcXFxcKXxcXFxcXXw7fHNpZ3wvfHN0cnVjdHx0aGVufH58dG98dHJ1ZXx0cnl8dHlwZXx2YWx8XFxcXHx8dmlydHVhbHx3aGVufHdoaWxlfHdpdGgpXFxcXGIoPzpbXiddfCQpKVxcXFxiKD89W1s6bG93ZXI6XV9dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKilgLCBcIm5hbWVcIjogXCJtYXJrdXAuaW5zZXJ0ZWQgY29uc3RhbnQubGFuZ3VhZ2Ugc3VwcG9ydC5jb25zdGFudC5wcm9wZXJ0eS12YWx1ZSBlbnRpdHkubmFtZS5maWxlbmFtZSBlbXBoYXNpc1wiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXTp8XjopKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKVwiLCBcImVuZFwiOiBcIig7KXwoPSl8KD89XFxcXH0pXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cFwiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3R5cGVcIiB9XSB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF09fF49KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCI7fCg/PVxcXFx9KVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3BhdHRlcm5cIiB9XSB9XSB9LCBcInBhdHRlcm5UeXBlXCI6IHsgXCJiZWdpblwiOiBcIlxcXFxidHlwZVxcXFxiXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImtleXdvcmRcIiB9IH0sIFwiZW5kXCI6IFwiKD89XFxcXCkpXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2RlY2xUeXBlXCIgfV0gfSwgXCJwcmFnbWFcIjogeyBcImJlZ2luXCI6IFwiKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pIyg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSB9LCBcImVuZFwiOiBcIig/PTs7fFxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNsaXRlcmFsTnVtYmVyXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjbGl0ZXJhbFN0cmluZ1wiIH1dIH0sIFwic2lnbmF0dXJlXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3NpZ25hdHVyZUxpdGVyYWxcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNzaWduYXR1cmVGdW5jdG9yXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcGF0aE1vZHVsZUV4dGVuZGVkXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjc2lnbmF0dXJlUGFyZW5zXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjc2lnbmF0dXJlUmVjb3ZlcmVkXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjc2lnbmF0dXJlQ29uc3RyYWludHNcIiB9XSB9LCBcInNpZ25hdHVyZUNvbnN0cmFpbnRzXCI6IHsgXCJiZWdpblwiOiBcIlxcXFxid2l0aFxcXFxiXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIG1hcmt1cC51bmRlcmxpbmVcIiB9IH0sIFwiZW5kXCI6IFwiKD89XFxcXCkpfCg/PTs7fFxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwicGF0dGVybnNcIjogW3sgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXXdpdGh8XndpdGgpKSg/IVtbOndvcmQ6XV0pKVwiLCBcImVuZFwiOiBcIlxcXFxiKD86KG1vZHVsZSl8KHR5cGUpKVxcXFxiXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJtYXJrdXAuaW5zZXJ0ZWQgY29uc3RhbnQubGFuZ3VhZ2Ugc3VwcG9ydC5jb25zdGFudC5wcm9wZXJ0eS12YWx1ZSBlbnRpdHkubmFtZS5maWxlbmFtZVwiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcImtleXdvcmRcIiB9IH0gfSwgeyBcImluY2x1ZGVcIjogXCIjZGVjbE1vZHVsZVwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2RlY2xUeXBlXCIgfV0gfSwgXCJzaWduYXR1cmVGdW5jdG9yXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiXFxcXGJmdW5jdG9yXFxcXGJcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZFwiIH0gfSwgXCJlbmRcIjogXCIoPz07O3xcXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W15bOndvcmQ6XV1mdW5jdG9yfF5mdW5jdG9yKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogXCIoXFxcXChcXFxcKSl8KFxcXFwoKD8hXFxcXCkpKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwiY29uc3RhbnQubGFuZ3VhZ2UgY29uc3RhbnQubnVtZXJpYyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUuaWQuY3NzIHN0cm9uZ1wiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSB9IH0sIHsgXCJiZWdpblwiOiBcIig/PD1cXFxcKClcIiwgXCJlbmRcIjogXCIoOil8KFxcXFwpKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgc3Ryb25nXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3ZhcmlhYmxlTW9kdWxlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdOnxeOikpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwiZW5kXCI6IFwiXFxcXClcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNzaWduYXR1cmVcIiB9XSB9LCB7IFwiYmVnaW5cIjogXCIoPzw9XFxcXCkpXCIsIFwiZW5kXCI6IFwiKFxcXFwoKXwoKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pLT4oPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH0gfSB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0tPnxeLT4pKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKVwiLCBcImVuZFwiOiBcIig/PTs7fFxcXFx9fFxcXFwpfFxcXFxdfFxcXFxiKD86ZW5kfGFuZHxjbGFzc3xleGNlcHRpb258ZXh0ZXJuYWx8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxldHxtZXRob2R8bW9kdWxlfG9wZW58dHlwZXx2YWwpXFxcXGIpXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3NpZ25hdHVyZVwiIH1dIH1dIH0sIHsgXCJtYXRjaFwiOiBcIig/PCFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKS0+KD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSlcIiwgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH1dIH0sIFwic2lnbmF0dXJlTGl0ZXJhbFwiOiB7IFwiYmVnaW5cIjogXCJcXFxcYnNpZ1xcXFxiXCIsIFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZyBlbXBoYXNpc1wiIH0gfSwgXCJlbmRcIjogXCJcXFxcYmVuZFxcXFxiXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNwcmFnbWFcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNkZWNsXCIgfV0gfSwgXCJzaWduYXR1cmVQYXJlbnNcIjogeyBcImJlZ2luXCI6IFwiXFxcXCgoPyFcXFxcKSlcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSB9LCBcImVuZFwiOiBcIlxcXFwpXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiYmVnaW5cIjogXCIoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSk6KD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSlcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgc3Ryb25nXCIgfSB9LCBcImVuZFwiOiBcIig/PVxcXFwpKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNzaWduYXR1cmVcIiB9XSB9LCB7IFwiaW5jbHVkZVwiOiBcIiNzaWduYXR1cmVcIiB9XSB9LCBcInNpZ25hdHVyZVJlY292ZXJlZFwiOiB7IFwicGF0dGVybnNcIjogW3sgXCJiZWdpblwiOiBcIlxcXFwofCg/Oig/PD0oPzpbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXTp8Xjp8W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0tPnxeLT4pKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKXwoPzooPzw9KD86W15bOndvcmQ6XV1pbmNsdWRlfF5pbmNsdWRlfFteWzp3b3JkOl1db3Blbnxeb3BlbikpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiXFxcXGJtb2R1bGVcXFxcYnwoPyEkfFtbOnNwYWNlOl1dfFxcXFxibW9kdWxlXFxcXGIpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJtYXJrdXAuaW5zZXJ0ZWQgY29uc3RhbnQubGFuZ3VhZ2Ugc3VwcG9ydC5jb25zdGFudC5wcm9wZXJ0eS12YWx1ZSBlbnRpdHkubmFtZS5maWxlbmFtZVwiIH0gfSB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W15bOndvcmQ6XV1tb2R1bGV8Xm1vZHVsZSkpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKD89Ozt8XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1dbW9kdWxlfF5tb2R1bGUpKSg/IVtbOndvcmQ6XV0pKVwiLCBcImVuZFwiOiBcIlxcXFxidHlwZVxcXFxiXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkXCIgfSB9IH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXXR5cGV8XnR5cGUpKSg/IVtbOndvcmQ6XV0pKVwiLCBcImVuZFwiOiBcIlxcXFxib2ZcXFxcYlwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWdcIiB9IH0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1db2Z8Xm9mKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogXCIoPz07O3xcXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNzaWduYXR1cmVcIiB9XSB9XSB9XSB9LCBcInN0cnVjdHVyZVwiOiB7IFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNzdHJ1Y3R1cmVMaXRlcmFsXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjc3RydWN0dXJlRnVuY3RvclwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3BhdGhNb2R1bGVFeHRlbmRlZFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3N0cnVjdHVyZVBhcmVuc1wiIH1dIH0sIFwic3RydWN0dXJlRnVuY3RvclwiOiB7IFwicGF0dGVybnNcIjogW3sgXCJiZWdpblwiOiBcIlxcXFxiZnVuY3RvclxcXFxiXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImtleXdvcmRcIiB9IH0sIFwiZW5kXCI6IFwiKD89Ozt8XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1dZnVuY3RvcnxeZnVuY3RvcikpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKFxcXFwoXFxcXCkpfChcXFxcKCg/IVxcXFwpKSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcImNvbnN0YW50Lmxhbmd1YWdlIGNvbnN0YW50Lm51bWVyaWMgZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLmlkLmNzcyBzdHJvbmdcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1wiIH0gfSB9LCB7IFwiYmVnaW5cIjogXCIoPzw9XFxcXCgpXCIsIFwiZW5kXCI6IFwiKDopfChcXFxcKSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIHN0cm9uZ1wiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24udGFnXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN2YXJpYWJsZU1vZHVsZVwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXTp8XjopKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKVwiLCBcImVuZFwiOiBcIlxcXFwpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjc2lnbmF0dXJlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD88PVxcXFwpKVwiLCBcImVuZFwiOiBcIihcXFxcKCl8KCg/PCFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKS0+KD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1wiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9IH0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdLT58Xi0+KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCIoPz07O3xcXFxcfXxcXFxcKXxcXFxcXXxcXFxcYig/OmVuZHxhbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNzdHJ1Y3R1cmVcIiB9XSB9XSB9LCB7IFwibWF0Y2hcIjogXCIoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSktPig/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXCIsIFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9XSB9LCBcInN0cnVjdHVyZUxpdGVyYWxcIjogeyBcImJlZ2luXCI6IFwiXFxcXGJzdHJ1Y3RcXFxcYlwiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWcgZW1waGFzaXNcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXGJlbmRcXFxcYlwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcHJhZ21hXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjZGVjbFwiIH1dIH0sIFwic3RydWN0dXJlUGFyZW5zXCI6IHsgXCJiZWdpblwiOiBcIlxcXFwoXCIsIFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1wiIH0gfSwgXCJlbmRcIjogXCJcXFxcKVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNzdHJ1Y3R1cmVVbnBhY2tcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNzdHJ1Y3R1cmVcIiB9XSB9LCBcInN0cnVjdHVyZVVucGFja1wiOiB7IFwiYmVnaW5cIjogXCJcXFxcYnZhbFxcXFxiXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcImVuZFwiOiBcIig/PVxcXFwpKVwiIH0sIFwidGVybVwiOiB7IFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3Rlcm1MZXRcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0ZXJtQXRvbWljXCIgfV0gfSwgXCJ0ZXJtQXRvbWljXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3Rlcm1Db25kaXRpb25hbFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3Rlcm1Db25zdHJ1Y3RvclwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3Rlcm1EZWxpbVwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3Rlcm1Gb3JcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0ZXJtRnVuY3Rpb25cIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNsaXRlcmFsXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjdGVybU1hdGNoXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjdGVybU1hdGNoUnVsZVwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3Rlcm1QdW5cIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0ZXJtT3BlcmF0b3JcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0ZXJtVHJ5XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjdGVybVdoaWxlXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcGF0aFJlY29yZFwiIH1dIH0sIFwidGVybUNvbmRpdGlvbmFsXCI6IHsgXCJtYXRjaFwiOiBcIlxcXFxiKD86aWZ8dGhlbnxlbHNlKVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQuY29udHJvbFwiIH0sIFwidGVybUNvbnN0cnVjdG9yXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjcGF0aE1vZHVsZVByZWZpeFNpbXBsZVwiIH0sIHsgXCJtYXRjaFwiOiBcIig/OlxcXFxiKD89W1s6dXBwZXI6XV0pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKVwiLCBcIm5hbWVcIjogXCJjb25zdGFudC5sYW5ndWFnZSBjb25zdGFudC5udW1lcmljIGVudGl0eS5vdGhlci5hdHRyaWJ1dGUtbmFtZS5pZC5jc3Mgc3Ryb25nXCIgfV0gfSwgXCJ0ZXJtRGVsaW1cIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCJcXFxcKCg/IVxcXFwpKVwiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWdcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXClcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIlxcXFxiYmVnaW5cXFxcYlwiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWdcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXGJlbmRcXFxcYlwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNhdHRyaWJ1dGVJZGVudGlmaWVyXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH1dIH0sIFwidGVybUZvclwiOiB7IFwicGF0dGVybnNcIjogW3sgXCJiZWdpblwiOiBcIlxcXFxiZm9yXFxcXGJcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZC5jb250cm9sXCIgfSB9LCBcImVuZFwiOiBcIlxcXFxiZG9uZVxcXFxiXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkLmNvbnRyb2xcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXWZvcnxeZm9yKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogXCIoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSk9KD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9IH0sIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3BhdHRlcm5cIiB9XSB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF09fF49KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCJcXFxcYig/OmRvd250b3x0bylcXFxcYlwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZC5jb250cm9sXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN0ZXJtXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1ddG98XnRvKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogXCJcXFxcYmRvXFxcXGJcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImtleXdvcmQuY29udHJvbFwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXWRvfF5kbykpKD8hW1s6d29yZDpdXSkpXCIsIFwiZW5kXCI6IFwiKD89XFxcXGJkb25lXFxcXGIpXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3Rlcm1cIiB9XSB9XSB9XSB9LCBcInRlcm1GdW5jdGlvblwiOiB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdG9yYWdlLnR5cGVcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJzdG9yYWdlLnR5cGVcIiB9IH0sIFwibWF0Y2hcIjogXCJcXFxcYig/OihmdW4pfChmdW5jdGlvbikpXFxcXGJcIiB9LCBcInRlcm1MZXRcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIoPzooPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF09fF49fFteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdLT58Xi0+KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSl8KD88PTt8XFxcXCgpKSg/PVtbOnNwYWNlOl1dfFxcXFxibGV0XFxcXGIpfCg/Oig/PD0oPzpbXls6d29yZDpdXWJlZ2lufF5iZWdpbnxbXls6d29yZDpdXWRvfF5kb3xbXls6d29yZDpdXWVsc2V8XmVsc2V8W15bOndvcmQ6XV1pbnxeaW58W15bOndvcmQ6XV1zdHJ1Y3R8XnN0cnVjdHxbXls6d29yZDpdXXRoZW58XnRoZW58W15bOndvcmQ6XV10cnl8XnRyeSkpKD8hW1s6d29yZDpdXSkpfCg/Oig/PD0oPzpbXiNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXUBAfF5AQCkpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpW1s6c3BhY2U6XV0rXCIsIFwiZW5kXCI6IFwiXFxcXGIoPzooYW5kKXwobGV0KSlcXFxcYnwoPz1bXls6c3BhY2U6XV0pKD8hXFxcXChcXFxcKilcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIG1hcmt1cC51bmRlcmxpbmVcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJzdG9yYWdlLnR5cGUgbWFya3VwLnVuZGVybGluZVwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXWFuZHxeYW5kfFteWzp3b3JkOl1dbGV0fF5sZXQpKSg/IVtbOndvcmQ6XV0pKXwobGV0KVwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdG9yYWdlLnR5cGUgbWFya3VwLnVuZGVybGluZVwiIH0gfSwgXCJlbmRcIjogXCJcXFxcYig/OihhbmQpfChpbikpXFxcXGJ8KD89XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8Y2xhc3N8ZXhjZXB0aW9ufGV4dGVybmFsfGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsZXR8bWV0aG9kfG1vZHVsZXxvcGVufHR5cGV8dmFsKVxcXFxiKVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgbWFya3VwLnVuZGVybGluZVwiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInN0b3JhZ2UudHlwZSBtYXJrdXAudW5kZXJsaW5lXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNiaW5kVGVybVwiIH1dIH1dIH0sIFwidGVybU1hdGNoXCI6IHsgXCJiZWdpblwiOiBcIlxcXFxibWF0Y2hcXFxcYlwiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZC5jb250cm9sXCIgfSB9LCBcImVuZFwiOiBcIlxcXFxid2l0aFxcXFxiXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3Rlcm1cIiB9XSB9LCBcInRlcm1NYXRjaFJ1bGVcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W15bOndvcmQ6XV1mdW58XmZ1bnxbXls6d29yZDpdXWZ1bmN0aW9ufF5mdW5jdGlvbnxbXls6d29yZDpdXXdpdGh8XndpdGgpKSg/IVtbOndvcmQ6XV0pKVwiLCBcImVuZFwiOiBcIig/PCFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKShcXFxcfCl8KC0+KSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUgc3Ryb25nXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2F0dHJpYnV0ZUlkZW50aWZpZXJcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNwYXR0ZXJuXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteXFxcXFsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF1cXFxcfHxeXFxcXHwpKSg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKXwoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSlcXFxcfCg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9IH0sIFwiZW5kXCI6IFwiKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pKFxcXFx8KXwoLT4pKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUgc3Ryb25nXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNwYXR0ZXJuXCIgfSwgeyBcImJlZ2luXCI6IFwiXFxcXGJ3aGVuXFxcXGJcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9IH0sIFwiZW5kXCI6IFwiKD89KD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pLT4oPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH1dIH1dIH0sIFwidGVybU9wZXJhdG9yXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiKD88IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pIyg/IVsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0pXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImtleXdvcmRcIiB9IH0sIFwiZW5kXCI6IGAoPzooPyFcXFxcYig/OmFuZHwnfGFzfGFzcnxhc3NlcnR8XFxcXCp8YmVnaW58Y2xhc3N8OnwsfEB8Y29uc3RyYWludHxkb3xkb25lfGRvd250b3xlbHNlfGVuZHw9fGV4Y2VwdGlvbnxleHRlcm5hbHxmYWxzZXxmb3J8XFxcXC58ZnVufGZ1bmN0aW9ufGZ1bmN0b3J8PnwtfGlmfGlufGluY2x1ZGV8aW5oZXJpdHxpbml0aWFsaXplcnxsYW5kfGxhenl8XFxcXHt8XFxcXCh8XFxcXFt8PHxsZXR8bG9yfGxzbHxsc3J8bHhvcnxtYXRjaHxtZXRob2R8bW9kfG1vZHVsZXxtdXRhYmxlfG5ld3xub25yZWN8I3xvYmplY3R8b2Z8b3BlbnxvcnwlfFxcXFwrfHByaXZhdGV8XFxcXD98XCJ8cmVjfFxcXFxcXFxcfFxcXFx9fFxcXFwpfFxcXFxdfDt8c2lnfC98c3RydWN0fHRoZW58fnx0b3x0cnVlfHRyeXx0eXBlfHZhbHxcXFxcfHx2aXJ0dWFsfHdoZW58d2hpbGV8d2l0aClcXFxcYig/OlteJ118JCkpXFxcXGIoPz1bWzpsb3dlcjpdX10pW1s6YWxwaGE6XV9dW1s6d29yZDpdJ10qKWAsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS5mdW5jdGlvblwiIH0gfSB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkLmNvbnRyb2wgc3Ryb25nXCIgfSB9LCBcIm1hdGNoXCI6IFwiPC1cIiB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cFwiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcIm1hdGNoXCI6IFwiKCx8WyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSspfCg7KVwiIH0sIHsgXCJtYXRjaFwiOiBcIlxcXFxiKD86YW5kfGFzc2VydHxhc3J8bGFuZHxsYXp5fGxzcnxseG9yfG1vZHxuZXd8b3IpXFxcXGJcIiwgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9XSB9LCBcInRlcm1QdW5cIjogeyBcImFwcGx5RW5kUGF0dGVybkxhc3RcIjogdHJ1ZSwgXCJiZWdpblwiOiBcIig/PCFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKVxcXFw/fH4oPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKVwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cFwiIH0gfSwgXCJlbmRcIjogXCI6fCg/PVteWzpzcGFjZTpdOl0pXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF1cXFxcP3xeXFxcXD98W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF1+fF5+KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogYCg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopYCwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcIm1hcmt1cC5pbnNlcnRlZCBjb25zdGFudC5sYW5ndWFnZSBzdXBwb3J0LmNvbnN0YW50LnByb3BlcnR5LXZhbHVlIGVudGl0eS5uYW1lLmZpbGVuYW1lXCIgfSB9IH1dIH0sIFwidGVybVRyeVwiOiB7IFwiYmVnaW5cIjogXCJcXFxcYnRyeVxcXFxiXCIsIFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkLmNvbnRyb2xcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXGJ3aXRoXFxcXGJcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH0sIFwidGVybVdoaWxlXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiXFxcXGJ3aGlsZVxcXFxiXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImtleXdvcmQuY29udHJvbFwiIH0gfSwgXCJlbmRcIjogXCJcXFxcYmRvbmVcXFxcYlwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZC5jb250cm9sXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W15bOndvcmQ6XV13aGlsZXxed2hpbGUpKSg/IVtbOndvcmQ6XV0pKVwiLCBcImVuZFwiOiBcIlxcXFxiZG9cXFxcYlwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwia2V5d29yZC5jb250cm9sXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN0ZXJtXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteWzp3b3JkOl1dZG98XmRvKSkoPyFbWzp3b3JkOl1dKSlcIiwgXCJlbmRcIjogXCIoPz1cXFxcYmRvbmVcXFxcYilcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdGVybVwiIH1dIH1dIH1dIH0sIFwidHlwZVwiOiB7IFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI2NvbW1lbnRcIiB9LCB7IFwibWF0Y2hcIjogXCJcXFxcYm5vbnJlY1xcXFxiXCIsIFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcGF0aE1vZHVsZVByZWZpeEV4dGVuZGVkXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjdHlwZUxhYmVsXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjdHlwZU9iamVjdFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3R5cGVPcGVyYXRvclwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3R5cGVQYXJlbnNcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0eXBlUG9seW1vcnBoaWNWYXJpYW50XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjdHlwZVJlY29yZFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3R5cGVDb25zdHJ1Y3RvclwiIH1dIH0sIFwidHlwZUNvbnN0cnVjdG9yXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IGAoXyl8KCg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopKXwoJykoKD86KD8hXFxcXGIoPzphbmR8J3xhc3xhc3J8YXNzZXJ0fFxcXFwqfGJlZ2lufGNsYXNzfDp8LHxAfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8PXxleGNlcHRpb258ZXh0ZXJuYWx8ZmFsc2V8Zm9yfFxcXFwufGZ1bnxmdW5jdGlvbnxmdW5jdG9yfD58LXxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGFuZHxsYXp5fFxcXFx7fFxcXFwofFxcXFxbfDx8bGV0fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWV0aG9kfG1vZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfCN8b2JqZWN0fG9mfG9wZW58b3J8JXxcXFxcK3xwcml2YXRlfFxcXFw/fFwifHJlY3xcXFxcXFxcXHxcXFxcfXxcXFxcKXxcXFxcXXw7fHNpZ3wvfHN0cnVjdHx0aGVufH58dG98dHJ1ZXx0cnl8dHlwZXx2YWx8XFxcXHx8dmlydHVhbHx3aGVufHdoaWxlfHdpdGgpXFxcXGIoPzpbXiddfCQpKVxcXFxiKD89W1s6bG93ZXI6XV9dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKikpfCg/PD1bXlxcXFwqXVxcXFwpfFxcXFxdKWAsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcImNvbW1lbnQgY29uc3RhbnQucmVnZXhwIG1ldGEuc2VwYXJhdG9yLm1hcmtkb3duXCIgfSwgXCIzXCI6IHsgXCJuYW1lXCI6IFwic3RyaW5nLm90aGVyLmxpbmsgdmFyaWFibGUubGFuZ3VhZ2UgdmFyaWFibGUucGFyYW1ldGVyIGVtcGhhc2lzIHN0cm9uZyBlbXBoYXNpc1wiIH0sIFwiNFwiOiB7IFwibmFtZVwiOiBcImtleXdvcmQuY29udHJvbCBlbXBoYXNpc1wiIH0gfSwgXCJlbmRcIjogYCg/PVxcXFwoKD8hXFxcXCopfFxcXFwqfDp8LHw9fFxcXFwufD58LXxcXFxce3xcXFxcW3xcXFxcK3xcXFxcfXxcXFxcKXxcXFxcXXw7fFxcXFx8KXwoKD86KD8hXFxcXGIoPzphbmR8J3xhc3xhc3J8YXNzZXJ0fFxcXFwqfGJlZ2lufGNsYXNzfDp8LHxAfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8PXxleGNlcHRpb258ZXh0ZXJuYWx8ZmFsc2V8Zm9yfFxcXFwufGZ1bnxmdW5jdGlvbnxmdW5jdG9yfD58LXxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGFuZHxsYXp5fFxcXFx7fFxcXFwofFxcXFxbfDx8bGV0fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWV0aG9kfG1vZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfCN8b2JqZWN0fG9mfG9wZW58b3J8JXxcXFxcK3xwcml2YXRlfFxcXFw/fFwifHJlY3xcXFxcXFxcXHxcXFxcfXxcXFxcKXxcXFxcXXw7fHNpZ3wvfHN0cnVjdHx0aGVufH58dG98dHJ1ZXx0cnl8dHlwZXx2YWx8XFxcXHx8dmlydHVhbHx3aGVufHdoaWxlfHdpdGgpXFxcXGIoPzpbXiddfCQpKVxcXFxiKD89W1s6bG93ZXI6XV9dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKikpWzpzcGFjZTpdKig/IVxcXFwoXFxcXCp8W1s6d29yZDpdXSl8KD89Ozt8XFxcXH18XFxcXCl8XFxcXF18XFxcXGIoPzplbmR8YW5kfGNsYXNzfGV4Y2VwdGlvbnxleHRlcm5hbHxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGV0fG1ldGhvZHxtb2R1bGV8b3Blbnx0eXBlfHZhbClcXFxcYilgLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24gc3Ryb25nXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcGF0aE1vZHVsZVByZWZpeEV4dGVuZGVkXCIgfV0gfV0gfSwgXCJ0eXBlTGFiZWxcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogYChcXFxcPz8pKCg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopKVtbOnNwYWNlOl1dKigoPzwhWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSk6KD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpYCwgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcImtleXdvcmQgc3Ryb25nIGVtcGhhc2lzXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwibWFya3VwLmluc2VydGVkIGNvbnN0YW50Lmxhbmd1YWdlIHN1cHBvcnQuY29uc3RhbnQucHJvcGVydHktdmFsdWUgZW50aXR5Lm5hbWUuZmlsZW5hbWUgZW1waGFzaXNcIiB9LCBcIjNcIjogeyBcIm5hbWVcIjogXCJrZXl3b3JkXCIgfSB9LCBcImVuZFwiOiBcIig/PSg/PCFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKS0+KD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwicGF0dGVybnNcIjogW3sgXCJpbmNsdWRlXCI6IFwiI3R5cGVcIiB9XSB9XSB9LCBcInR5cGVNb2R1bGVcIjogeyBcImJlZ2luXCI6IFwiXFxcXGJtb2R1bGVcXFxcYlwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJtYXJrdXAuaW5zZXJ0ZWQgY29uc3RhbnQubGFuZ3VhZ2Ugc3VwcG9ydC5jb25zdGFudC5wcm9wZXJ0eS12YWx1ZSBlbnRpdHkubmFtZS5maWxlbmFtZVwiIH0gfSwgXCJlbmRcIjogXCIoPz1cXFxcKSlcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjcGF0aE1vZHVsZUV4dGVuZGVkXCIgfSwgeyBcImluY2x1ZGVcIjogXCIjc2lnbmF0dXJlQ29uc3RyYWludHNcIiB9XSB9LCBcInR5cGVPYmplY3RcIjogeyBcImJlZ2luXCI6IFwiPFwiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwiY29uc3RhbnQubGFuZ3VhZ2UgY29uc3RhbnQubnVtZXJpYyBlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUuaWQuY3NzIHN0cm9uZyBzdHJvbmdcIiB9IH0sIFwiZW5kXCI6IFwiPlwiLCBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIoPzw9PHw7KVwiLCBcImVuZFwiOiBcIig6KXwoPz0+KVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgc3Ryb25nXCIgfSwgXCIzXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9LCBcIjRcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cFwiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjY29tbWVudFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3BhdGhNb2R1bGVQcmVmaXhTaW1wbGVcIiB9LCB7IFwibWF0Y2hcIjogYCg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopYCwgXCJuYW1lXCI6IFwibWFya3VwLmluc2VydGVkIGNvbnN0YW50Lmxhbmd1YWdlIHN1cHBvcnQuY29uc3RhbnQucHJvcGVydHktdmFsdWUgZW50aXR5Lm5hbWUuZmlsZW5hbWUgZW1waGFzaXNcIiB9XSB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF06fF46KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCIoOyl8KD89PilcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH0gfSwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjdHlwZVwiIH1dIH1dIH0sIFwidHlwZU9wZXJhdG9yXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcIm1hdGNoXCI6IFwiLHw7fFsjXFxcXC06IT8uQCovJiVeKzw9Pnx+JF0rXCIsIFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIHN0cm9uZ1wiIH1dIH0sIFwidHlwZVBhcmVuc1wiOiB7IFwiYmVnaW5cIjogXCJcXFxcKFwiLCBcImNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi50YWdcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXClcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcIm1hdGNoXCI6IFwiLFwiLCBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3R5cGVNb2R1bGVcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0eXBlXCIgfV0gfSwgXCJ0eXBlUG9seW1vcnBoaWNWYXJpYW50XCI6IHsgXCJiZWdpblwiOiBcIlxcXFxbXCIsIFwiZW5kXCI6IFwiXFxcXF1cIiwgXCJwYXR0ZXJuc1wiOiBbXSB9LCBcInR5cGVSZWNvcmRcIjogeyBcImJlZ2luXCI6IFwiXFxcXHtcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcImNvbnN0YW50Lmxhbmd1YWdlIGNvbnN0YW50Lm51bWVyaWMgZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLmlkLmNzcyBzdHJvbmcgc3Ryb25nXCIgfSB9LCBcImVuZFwiOiBcIlxcXFx9XCIsIFwicGF0dGVybnNcIjogW3sgXCJiZWdpblwiOiBcIig/PD1cXFxce3w7KVwiLCBcImVuZFwiOiBcIig6KXwoPSl8KDspfCh3aXRoKXwoPz1cXFxcfSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwIHN0cm9uZ1wiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZSBzdHJvbmdcIiB9LCBcIjNcIjogeyBcIm5hbWVcIjogXCJ2YXJpYWJsZS5vdGhlci5jbGFzcy5qcyBtZXNzYWdlLmVycm9yIHZhcmlhYmxlLmludGVycG9sYXRpb24gc3RyaW5nLnJlZ2V4cFwiIH0sIFwiNFwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjcGF0aE1vZHVsZVByZWZpeFNpbXBsZVwiIH0sIHsgXCJtYXRjaFwiOiBgKD86KD8hXFxcXGIoPzphbmR8J3xhc3xhc3J8YXNzZXJ0fFxcXFwqfGJlZ2lufGNsYXNzfDp8LHxAfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8PXxleGNlcHRpb258ZXh0ZXJuYWx8ZmFsc2V8Zm9yfFxcXFwufGZ1bnxmdW5jdGlvbnxmdW5jdG9yfD58LXxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGFuZHxsYXp5fFxcXFx7fFxcXFwofFxcXFxbfDx8bGV0fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWV0aG9kfG1vZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfCN8b2JqZWN0fG9mfG9wZW58b3J8JXxcXFxcK3xwcml2YXRlfFxcXFw/fFwifHJlY3xcXFxcXFxcXHxcXFxcfXxcXFxcKXxcXFxcXXw7fHNpZ3wvfHN0cnVjdHx0aGVufH58dG98dHJ1ZXx0cnl8dHlwZXx2YWx8XFxcXHx8dmlydHVhbHx3aGVufHdoaWxlfHdpdGgpXFxcXGIoPzpbXiddfCQpKVxcXFxiKD89W1s6bG93ZXI6XV9dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKilgLCBcIm5hbWVcIjogXCJtYXJrdXAuaW5zZXJ0ZWQgY29uc3RhbnQubGFuZ3VhZ2Ugc3VwcG9ydC5jb25zdGFudC5wcm9wZXJ0eS12YWx1ZSBlbnRpdHkubmFtZS5maWxlbmFtZSBlbXBoYXNpc1wiIH1dIH0sIHsgXCJiZWdpblwiOiBcIig/Oig/PD0oPzpbXls6d29yZDpdXXdpdGh8XndpdGgpKSg/IVtbOndvcmQ6XV0pKVwiLCBcImVuZFwiOiBcIig6KXwoPSl8KDspfCg/PVxcXFx9KVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHAgc3Ryb25nXCIgfSwgXCIyXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlIHN0cm9uZ1wiIH0sIFwiM1wiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwibWF0Y2hcIjogYCg/Oig/IVxcXFxiKD86YW5kfCd8YXN8YXNyfGFzc2VydHxcXFxcKnxiZWdpbnxjbGFzc3w6fCx8QHxjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfD18ZXhjZXB0aW9ufGV4dGVybmFsfGZhbHNlfGZvcnxcXFxcLnxmdW58ZnVuY3Rpb258ZnVuY3Rvcnw+fC18aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhbmR8bGF6eXxcXFxce3xcXFxcKHxcXFxcW3w8fGxldHxsb3J8bHNsfGxzcnxseG9yfG1hdGNofG1ldGhvZHxtb2R8bW9kdWxlfG11dGFibGV8bmV3fG5vbnJlY3wjfG9iamVjdHxvZnxvcGVufG9yfCV8XFxcXCt8cHJpdmF0ZXxcXFxcP3xcInxyZWN8XFxcXFxcXFx8XFxcXH18XFxcXCl8XFxcXF18O3xzaWd8L3xzdHJ1Y3R8dGhlbnx+fHRvfHRydWV8dHJ5fHR5cGV8dmFsfFxcXFx8fHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcXFxiKD86W14nXXwkKSlcXFxcYig/PVtbOmxvd2VyOl1fXSlbWzphbHBoYTpdX11bWzp3b3JkOl0nXSopYCwgXCJuYW1lXCI6IFwibWFya3VwLmluc2VydGVkIGNvbnN0YW50Lmxhbmd1YWdlIHN1cHBvcnQuY29uc3RhbnQucHJvcGVydHktdmFsdWUgZW50aXR5Lm5hbWUuZmlsZW5hbWUgZW1waGFzaXNcIiB9XSB9LCB7IFwiYmVnaW5cIjogXCIoPzooPzw9KD86W14jXFxcXC06IT8uQCovJiVeKzw9Pnx+JF06fF46KSkoPyFbI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdKSlcIiwgXCJlbmRcIjogXCIoOyl8KD0pfCg/PVxcXFx9KVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIuY2xhc3MuanMgbWVzc2FnZS5lcnJvciB2YXJpYWJsZS5pbnRlcnBvbGF0aW9uIHN0cmluZy5yZWdleHBcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUgc3Ryb25nXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN0eXBlXCIgfV0gfSwgeyBcImJlZ2luXCI6IFwiKD86KD88PSg/OlteI1xcXFwtOiE/LkAqLyYlXis8PT58fiRdPXxePSkpKD8hWyNcXFxcLTohPy5AKi8mJV4rPD0+fH4kXSkpXCIsIFwiZW5kXCI6IFwiO3woPz1cXFxcfSlcIiwgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInZhcmlhYmxlLm90aGVyLmNsYXNzLmpzIG1lc3NhZ2UuZXJyb3IgdmFyaWFibGUuaW50ZXJwb2xhdGlvbiBzdHJpbmcucmVnZXhwXCIgfSB9LCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN0eXBlXCIgfV0gfV0gfSwgXCJ2YXJpYWJsZU1vZHVsZVwiOiB7IFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJzdHJpbmcub3RoZXIubGluayB2YXJpYWJsZS5sYW5ndWFnZSB2YXJpYWJsZS5wYXJhbWV0ZXIgZW1waGFzaXNcIiB9IH0sIFwibWF0Y2hcIjogXCIoPzpcXFxcYig/PVtbOnVwcGVyOl1dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKilcIiB9LCBcInZhcmlhYmxlUGF0dGVyblwiOiB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJjb21tZW50IGNvbnN0YW50LnJlZ2V4cCBtZXRhLnNlcGFyYXRvci5tYXJrZG93blwiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInN0cmluZy5vdGhlci5saW5rIHZhcmlhYmxlLmxhbmd1YWdlIHZhcmlhYmxlLnBhcmFtZXRlciBlbXBoYXNpc1wiIH0gfSwgXCJtYXRjaFwiOiBgKFxcXFxiX1xcXFxiKXwoKD86KD8hXFxcXGIoPzphbmR8J3xhc3xhc3J8YXNzZXJ0fFxcXFwqfGJlZ2lufGNsYXNzfDp8LHxAfGNvbnN0cmFpbnR8ZG98ZG9uZXxkb3dudG98ZWxzZXxlbmR8PXxleGNlcHRpb258ZXh0ZXJuYWx8ZmFsc2V8Zm9yfFxcXFwufGZ1bnxmdW5jdGlvbnxmdW5jdG9yfD58LXxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8bGFuZHxsYXp5fFxcXFx7fFxcXFwofFxcXFxbfDx8bGV0fGxvcnxsc2x8bHNyfGx4b3J8bWF0Y2h8bWV0aG9kfG1vZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfCN8b2JqZWN0fG9mfG9wZW58b3J8JXxcXFxcK3xwcml2YXRlfFxcXFw/fFwifHJlY3xcXFxcXFxcXHxcXFxcfXxcXFxcKXxcXFxcXXw7fHNpZ3wvfHN0cnVjdHx0aGVufH58dG98dHJ1ZXx0cnl8dHlwZXx2YWx8XFxcXHx8dmlydHVhbHx3aGVufHdoaWxlfHdpdGgpXFxcXGIoPzpbXiddfCQpKVxcXFxiKD89W1s6bG93ZXI6XV9dKVtbOmFscGhhOl1fXVtbOndvcmQ6XSddKikpYCB9IH0sIFwic2NvcGVOYW1lXCI6IFwic291cmNlLm9jYW1sXCIgfSk7XG52YXIgb2NhbWwgPSBbXG4gIGxhbmdcbl07XG5cbmV4cG9ydCB7IG9jYW1sIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/shikiji@0.10.2/node_modules/shikiji/dist/langs/ocaml.mjs\n"));

/***/ })

}]);