"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_shikiji_0_10_2_node_modules_shikiji_dist_langs_wasm_mjs"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/shikiji@0.10.2/node_modules/shikiji/dist/langs/wasm.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/shikiji@0.10.2/node_modules/shikiji/dist/langs/wasm.mjs ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ wasm)\n/* harmony export */ });\nconst lang = Object.freeze({ \"displayName\": \"WebAssembly\", \"name\": \"wasm\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#strings\" }, { \"include\": \"#instructions\" }, { \"include\": \"#types\" }, { \"include\": \"#modules\" }, { \"include\": \"#constants\" }, { \"include\": \"#invalid\" }], \"repository\": { \"comments\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.wat\" } }, \"comment\": \"Line comment\", \"match\": \"(;;).*$\", \"name\": \"comment.line.wat\" }, { \"begin\": \"\\\\(;\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.wat\" } }, \"comment\": \"Block comment\", \"end\": \";\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.wat\" } }, \"name\": \"comment.block.wat\" }] }, \"constants\": { \"patterns\": [{ \"comment\": \"Fixed-width SIMD\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.type.wat\" } }, \"comment\": \"Vector literal (i8x16) [simd]\", \"match\": \"\\\\b(i8x16)(?:\\\\s+0x[0-9a-fA-F]{1,2}){16}\\\\b\", \"name\": \"constant.numeric.vector.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.type.wat\" } }, \"comment\": \"Vector literal (i16x8) [simd]\", \"match\": \"\\\\b(i16x8)(?:\\\\s+0x[0-9a-fA-F]{1,4}){8}\\\\b\", \"name\": \"constant.numeric.vector.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.type.wat\" } }, \"comment\": \"Vector literal (i32x4) [simd]\", \"match\": \"\\\\b(i32x4)(?:\\\\s+0x[0-9a-fA-F]{1,8}){4}\\\\b\", \"name\": \"constant.numeric.vector.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.type.wat\" } }, \"comment\": \"Vector literal (i64x2) [simd]\", \"match\": \"\\\\b(i64x2)(?:\\\\s+0x[0-9a-fA-F]{1,16}){2}\\\\b\", \"name\": \"constant.numeric.vector.wat\" }] }, { \"comment\": \"MVP\", \"patterns\": [{ \"comment\": \"Floating point literal\", \"match\": \"[+-]?\\\\b[0-9][0-9]*(?:\\\\.[0-9][0-9]*)?(?:[eE][+-]?[0-9]+)?\\\\b\", \"name\": \"constant.numeric.float.wat\" }, { \"comment\": \"Floating point hexadecimal literal\", \"match\": \"[+-]?\\\\b0x([0-9a-fA-F]*\\\\.[0-9a-fA-F]+|[0-9a-fA-F]+\\\\.?)[Pp][+-]?[0-9]+\\\\b\", \"name\": \"constant.numeric.float.wat\" }, { \"comment\": \"Floating point infinity\", \"match\": \"[+-]?\\\\binf\\\\b\", \"name\": \"constant.numeric.float.wat\" }, { \"comment\": \"Floating point literal (NaN)\", \"match\": \"[+-]?\\\\bnan:0x[0-9a-fA-F][0-9a-fA-F]*\\\\b\", \"name\": \"constant.numeric.float.wat\" }, { \"comment\": \"Integer literal\", \"match\": \"[+-]?\\\\b(?:0x[0-9a-fA-F][0-9a-fA-F]*|\\\\d[\\\\d]*)\\\\b\", \"name\": \"constant.numeric.integer.wat\" }] }] }, \"instructions\": { \"patterns\": [{ \"comment\": \"Non-trapping float-to-int conversions\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Conversion instruction [nontrapping-float-to-int-conversions]\", \"match\": \"\\\\b(i32|i64)\\\\.trunc_sat_f(?:32|64)_[su]\\\\b\", \"name\": \"keyword.operator.word.wat\" }] }, { \"comment\": \"Sign-extension operators\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Numeric instruction (i32) [sign-extension-ops]\", \"match\": \"\\\\b(i32)\\\\.(?:extend(?:8|16)_s)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Numeric instruction (i64) [sign-extension-ops]\", \"match\": \"\\\\b(i64)\\\\.(?:extend(?:8|16|32)_s)\\\\b\", \"name\": \"keyword.operator.word.wat\" }] }, { \"comment\": \"Bulk memory operations\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Memory instruction [bulk-memory-operations]\", \"match\": \"\\\\b(memory)\\\\.(?:copy|fill|init|drop)\\\\b\", \"name\": \"keyword.operator.word.wat\" }] }, { \"comment\": \"Fixed-width SIMD\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (v128) [simd]\", \"match\": \"\\\\b(v128)\\\\.(?:const|and|or|xor|not|andnot|bitselect|load|store)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (i8x16) [simd]\", \"match\": \"\\\\b(i8x16)\\\\.(?:shuffle|swizzle|splat|replace_lane|add|sub|mul|neg|shl|shr_[su]|eq|ne|lt_[su]|le_[su]|gt_[su]|ge_[su]|min_[su]|max_[su]|any_true|all_true|extract_lane_[su]|add_saturate_[su]|sub_saturate_[su]|avgr_u|narrow_i16x8_[su])\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (i16x8) [simd]\", \"match\": \"\\\\b(i16x8)\\\\.(?:splat|replace_lane|add|sub|mul|neg|shl|shr_[su]|eq|ne|lt_[su]|le_[su]|gt_[su]|ge_[su]|min_[su]|max_[su]|any_true|all_true|extract_lane_[su]|add_saturate_[su]|sub_saturate_[su]|avgr_u|load8x8_[su]|narrow_i32x4_[su]|widen_(low|high)_i8x16_[su])\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (i32x4) [simd]\", \"match\": \"\\\\b(i32x4)\\\\.(?:splat|replace_lane|add|sub|mul|neg|shl|shr_[su]|eq|ne|lt_[su]|le_[su]|gt_[su]|ge_[su]|min_[su]|max_[su]|any_true|all_true|extract_lane|load16x4_[su]|trunc_sat_f32x4_[su]|widen_(low|high)_i16x8_[su])\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (i64x2) [simd]\", \"match\": \"\\\\b(i64x2)\\\\.(?:splat|replace_lane|add|sub|mul|neg|shl|shr_[su]|extract_lane|load32x2_[su])\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (f32x4) [simd]\", \"match\": \"\\\\b(f32x4)\\\\.(?:splat|replace_lane|add|sub|mul|neg|extract_lane|eq|ne|lt|le|gt|ge|abs|min|max|div|sqrt|convert_i32x4_[su])\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (f64x2) [simd]\", \"match\": \"\\\\b(f64x2)\\\\.(?:splat|replace_lane|add|sub|mul|neg|extract_lane|eq|ne|lt|le|gt|ge|abs|min|max|div|sqrt)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (v8x16) [simd]\", \"match\": \"\\\\b(v8x16)\\\\.(?:load_splat|shuffle|swizzle)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (v16x8) [simd]\", \"match\": \"\\\\b(v16x8)\\\\.load_splat\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (v32x4) [simd]\", \"match\": \"\\\\b(v32x4)\\\\.load_splat\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Vector instruction (v64x2) [simd]\", \"match\": \"\\\\b(v64x2)\\\\.load_splat\\\\b\", \"name\": \"keyword.operator.word.wat\" }] }, { \"comment\": \"Threads\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.class.wat\" }, \"2\": { \"name\": \"support.class.wat\" }, \"3\": { \"name\": \"support.class.wat\" }, \"4\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Atomic instruction (i32) [threads]\", \"match\": \"\\\\b(i32)\\\\.(atomic)\\\\.(?:load(?:8_u|16_u)?|store(?:8|16)?|wait|(rmw)\\\\.(?:add|sub|and|or|xor|xchg|cmpxchg)|(rmw8|rmw16)\\\\.(?:add_u|sub_u|and_u|or_u|xor_u|xchg_u|cmpxchg_u))\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" }, \"2\": { \"name\": \"support.class.wat\" }, \"3\": { \"name\": \"support.class.wat\" }, \"4\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Atomic instruction (i64) [threads]\", \"match\": \"\\\\b(i64)\\\\.(atomic)\\\\.(?:load(?:8_u|16_u|32_u)?|store(?:8|16|32)?|wait|(rmw)\\\\.(?:add|sub|and|or|xor|xchg|cmpxchg)|(rmw8|rmw16|rmw32)\\\\.(?:add_u|sub_u|and_u|or_u|xor_u|xchg_u|cmpxchg_u))\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Atomic instruction [threads]\", \"match\": \"\\\\b(atomic)\\\\.(?:notify|fence)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"comment\": \"Shared modifier [threads]\", \"match\": \"\\\\bshared\\\\b\", \"name\": \"storage.modifier.wat\" }] }, { \"comment\": \"Reference types\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Reference instruction [reference-types]\", \"match\": \"\\\\b(ref)\\\\.(?:null|is_null|func|extern)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Table instruction [reference-types]\", \"match\": \"\\\\b(table)\\\\.(?:get|size|grow|fill|init|copy)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"comment\": \"Type name [reference-types]\", \"match\": \"\\\\b(?:externref|funcref|nullref)\\\\b\", \"name\": \"entity.name.type.wat\" }] }, { \"comment\": \"Tail Call\", \"patterns\": [{ \"comment\": \"Control instruction [tail-call]\", \"match\": \"\\\\breturn_call(?:_indirect)?\\\\b\", \"name\": \"keyword.control.wat\" }] }, { \"comment\": \"Exception handling\", \"patterns\": [{ \"comment\": \"Control instruction [exception-handling]\", \"match\": \"\\\\b(?:try|catch|throw|rethrow|br_on_exn)\\\\b\", \"name\": \"keyword.control.wat\" }, { \"comment\": \"Module element [exception-handling]\", \"match\": \"(?<=\\\\()event\\\\b\", \"name\": \"storage.type.wat\" }] }, { \"comment\": \"Binaryen extensions\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Pseudo stack instruction [binaryen]\", \"match\": \"\\\\b(i32|i64|f32|f64|externref|funcref|nullref|exnref)\\\\.(?:push|pop)\\\\b\", \"name\": \"keyword.operator.word.wat\" }] }, { \"comment\": \"MVP\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.class.type.wat\" } }, \"comment\": \"Memory instruction (i32) [mvp]\", \"match\": \"\\\\b(i32)\\\\.(?:load|load(?:8|16)(?:_[su])?|store(?:8|16)?)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.type.wat\" } }, \"comment\": \"Memory instruction (i64) [mvp]\", \"match\": \"\\\\b(i64)\\\\.(?:load|load(?:8|16|32)(?:_[su])?|store(?:8|16|32)?)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.type.wat\" } }, \"comment\": \"Memory instruction (f32/f64) [mvp]\", \"match\": \"\\\\b(f32|f64)\\\\.(?:load|store)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.memory.wat\" } }, \"comment\": \"Memory instruction [mvp]\", \"match\": \"\\\\b(memory)\\\\.(?:size|grow)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.wat\" } }, \"comment\": \"Memory instruction attribute [mvp]\", \"match\": \"\\\\b(offset|align)=\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"support.class.local.wat\" } }, \"comment\": \"Variable instruction (local) [mvp]\", \"match\": \"\\\\b(local)\\\\.(?:get|set|tee)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.global.wat\" } }, \"comment\": \"Variable instruction (global) [mvp]\", \"match\": \"\\\\b(global)\\\\.(?:get|set)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.type.wat\" } }, \"comment\": \"Numeric instruction (i32/i64) [mvp]\", \"match\": \"\\\\b(i32|i64)\\\\.(const|eqz|eq|ne|lt_[su]|gt_[su]|le_[su]|ge_[su]|clz|ctz|popcnt|add|sub|mul|div_[su]|rem_[su]|and|or|xor|shl|shr_[su]|rotl|rotr)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.type.wat\" } }, \"comment\": \"Numeric instruction (f32/f64) [mvp]\", \"match\": \"\\\\b(f32|f64)\\\\.(const|eq|ne|lt|gt|le|ge|abs|neg|ceil|floor|trunc|nearest|sqrt|add|sub|mul|div|min|max|copysign)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.type.wat\" } }, \"comment\": \"Conversion instruction (i32) [mvp]\", \"match\": \"\\\\b(i32)\\\\.(wrap_i64|trunc_(f32|f64)_[su]|reinterpret_f32)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.type.wat\" } }, \"comment\": \"Conversion instruction (i64) [mvp]\", \"match\": \"\\\\b(i64)\\\\.(extend_i32_[su]|trunc_f(32|64)_[su]|reinterpret_f64)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.type.wat\" } }, \"comment\": \"Conversion instruction (f32) [mvp]\", \"match\": \"\\\\b(f32)\\\\.(convert_i(32|64)_[su]|demote_f64|reinterpret_i32)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.type.wat\" } }, \"comment\": \"Conversion instruction (f64) [mvp]\", \"match\": \"\\\\b(f64)\\\\.(convert_i(32|64)_[su]|promote_f32|reinterpret_i64)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"comment\": \"Control instruction [mvp]\", \"match\": \"\\\\b(?:unreachable|nop|block|loop|if|then|else|end|br|br_if|br_table|return|call|call_indirect)\\\\b\", \"name\": \"keyword.control.wat\" }, { \"comment\": \"Parametric instruction [mvp]\", \"match\": \"\\\\b(?:drop|select)\\\\b\", \"name\": \"keyword.operator.word.wat\" }] }, { \"comment\": \"GC Instructions\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Reference Instructions [GC]\", \"match\": \"\\\\b(ref)\\\\.(?:eq|test|cast)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Struct Instructions [GC]\", \"match\": \"\\\\b(struct)\\\\.(?:new_canon|new_canon_default|get|get_s|get_u|set)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Array Instructions [GC]\", \"match\": \"\\\\b(array)\\\\.(?:new_canon|new_canon_default|get|get_s|get_u|set|len|new_canon_fixed|new_canon_data|new_canon_elem)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"i31 Instructions [GC]\", \"match\": \"\\\\b(i31)\\\\.(?:new|get_s|get_u)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Branch Instructions [GC]\", \"match\": \"\\\\b(?:br_on_non_null|br_on_cast|br_on_cast_fail)\\\\b\", \"name\": \"keyword.operator.word.wat\" }, { \"captures\": { \"1\": { \"name\": \"support.class.wat\" } }, \"comment\": \"Reference Instructions [GC]\", \"match\": \"\\\\b(extern)\\\\.(?:internalize|externalize)\\\\b\", \"name\": \"keyword.operator.word.wat\" }] }] }, \"invalid\": { \"patterns\": [{ \"match\": \"[^\\\\s()]+\", \"name\": \"invalid.wat\" }] }, \"modules\": { \"patterns\": [{ \"comment\": \"Bulk memory operations\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.wat\" } }, \"comment\": \"Passive modifier [bulk-memory-operations]\", \"match\": \"(?<=\\\\(data)\\\\s+(passive)\\\\b\" }] }, { \"comment\": \"MVP\", \"patterns\": [{ \"comment\": \"Module element [mvp]\", \"match\": \"(?<=\\\\()(?:module|import|export|memory|data|table|elem|start|func|type|param|result|global|local)\\\\b\", \"name\": \"storage.type.wat\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.wat\" } }, \"comment\": \"Mutable global modifier [mvp]\", \"match\": \"(?<=\\\\()\\\\s*(mut)\\\\b\", \"name\": \"storage.modifier.wat\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.function.wat\" } }, \"comment\": \"Function name [mvp]\", \"match\": \"(?<=\\\\(func|\\\\(start|call|return_call|ref\\\\.func)\\\\s+(\\\\$[0-9A-Za-z!#$%&'*+\\\\-./:<=>?@\\\\\\\\^_`|~]*)\" }, { \"begin\": \"\\\\)\\\\s+(\\\\$[0-9A-Za-z!#$%&'*+\\\\-./:<=>?@\\\\\\\\^_`|~]*)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.wat\" } }, \"comment\": \"Function name(s) (elem) [mvp]\", \"end\": \"\\\\)\", \"patterns\": [{ \"match\": \"(?<=\\\\s)\\\\$[0-9A-Za-z!#$%&'*+\\\\-./:<=>?@\\\\\\\\^_`|~]*\", \"name\": \"entity.name.function.wat\" }] }, { \"captures\": { \"1\": { \"name\": \"support.type.function.wat\" } }, \"comment\": \"Function type [mvp]\", \"match\": \"(?<=\\\\(type)\\\\s+(\\\\$[0-9A-Za-z!#$%&'*+\\\\-./:<=>?@\\\\\\\\^_`|~]*)\" }, { \"comment\": \"Variable name or branch label [mvp]\", \"match\": \"\\\\$[0-9A-Za-z!#$%&'*+\\\\-./:<=>?@\\\\\\\\^_`|~]*\\\\b\", \"name\": \"variable.other.wat\" }] }] }, \"strings\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin\" } }, \"comment\": \"String literal\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end\" } }, \"name\": \"string.quoted.double.wat\", \"patterns\": [{ \"match\": `\\\\\\\\(n|t|\\\\\\\\|'|\"|[0-9a-fA-F]{2})`, \"name\": \"constant.character.escape.wat\" }] }, \"types\": { \"patterns\": [{ \"comment\": \"Fixed-width SIMD\", \"patterns\": [{ \"comment\": \"Type name [simd]\", \"match\": \"\\\\bv128\\\\b(?!\\\\.)\", \"name\": \"entity.name.type.wat\" }] }, { \"comment\": \"Reference types\", \"patterns\": [{ \"comment\": \"Type name [reference-types]\", \"match\": \"\\\\b(?:externref|funcref|nullref)\\\\b(?!\\\\.)\", \"name\": \"entity.name.type.wat\" }] }, { \"comment\": \"Exception handling\", \"patterns\": [{ \"comment\": \"Type name [exception-handling]\", \"match\": \"\\\\bexnref\\\\b(?!\\\\.)\", \"name\": \"entity.name.type.wat\" }] }, { \"comment\": \"MVP\", \"patterns\": [{ \"comment\": \"Type name [mvp]\", \"match\": \"\\\\b(?:i32|i64|f32|f64)\\\\b(?!\\\\.)\", \"name\": \"entity.name.type.wat\" }] }, { \"comment\": \"GC Types\", \"patterns\": [{ \"comment\": \"Type name [GC]\", \"match\": \"\\\\b(?:i8|i16|ref|funcref|externref|anyref|eqref|i31ref|nullfuncref|nullexternref|structref|arrayref|nullref)\\\\b(?!\\\\.)\", \"name\": \"entity.name.type.wat\" }] }, { \"comment\": \"GC Heap Types\", \"patterns\": [{ \"comment\": \"Type name [GC]\", \"match\": \"\\\\b(?:type|func|extern|any|eq|nofunc|noextern|struct|array|none)\\\\b(?!\\\\.)\", \"name\": \"entity.name.type.wat\" }] }, { \"comment\": \"GC Structured and sub Types\", \"patterns\": [{ \"comment\": \"Type name [GC]\", \"match\": \"\\\\b(?:struct|array|sub|final|rec|field|mut)\\\\b(?!\\\\.)\", \"name\": \"entity.name.type.wat\" }] }] } }, \"scopeName\": \"source.wat\" });\nvar wasm = [\n  lang\n];\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9zaGlraWppQDAuMTAuMi9ub2RlX21vZHVsZXMvc2hpa2lqaS9kaXN0L2xhbmdzL3dhc20ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSw2QkFBNkIsNkRBQTZELHdCQUF3QixJQUFJLHVCQUF1QixJQUFJLDRCQUE0QixJQUFJLHFCQUFxQixJQUFJLHVCQUF1QixJQUFJLHlCQUF5QixJQUFJLHVCQUF1QixtQkFBbUIsY0FBYyxlQUFlLGNBQWMsT0FBTyxnREFBZ0QsMENBQTBDLG1DQUFtQyxJQUFJLGNBQWMsc0JBQXNCLE9BQU8sZ0RBQWdELHVDQUF1Qyx1QkFBdUIsT0FBTyxnREFBZ0QsK0JBQStCLEdBQUcsaUJBQWlCLGVBQWUsOENBQThDLGNBQWMsT0FBTyw4QkFBOEIsdUZBQXVGLElBQUksRUFBRSxHQUFHLDZDQUE2QyxJQUFJLGNBQWMsT0FBTyw4QkFBOEIsdUZBQXVGLElBQUksRUFBRSxFQUFFLDZDQUE2QyxJQUFJLGNBQWMsT0FBTyw4QkFBOEIsdUZBQXVGLElBQUksRUFBRSxFQUFFLDZDQUE2QyxJQUFJLGNBQWMsT0FBTyw4QkFBOEIsdUZBQXVGLEtBQUssRUFBRSxFQUFFLDZDQUE2QyxHQUFHLElBQUksaUNBQWlDLHFKQUFxSixJQUFJLDhLQUE4SyxJQUFJLHVHQUF1RyxJQUFJLHNJQUFzSSxJQUFJLHFJQUFxSSxHQUFHLEdBQUcsb0JBQW9CLGVBQWUsbUVBQW1FLGNBQWMsT0FBTywrQkFBK0IsMktBQTJLLEdBQUcsSUFBSSxzREFBc0QsY0FBYyxPQUFPLCtCQUErQixtSkFBbUosSUFBSSxjQUFjLE9BQU8sK0JBQStCLHNKQUFzSixHQUFHLElBQUksb0RBQW9ELGNBQWMsT0FBTywrQkFBK0Isc0pBQXNKLEdBQUcsSUFBSSw4Q0FBOEMsY0FBYyxPQUFPLCtCQUErQixzS0FBc0ssSUFBSSxjQUFjLE9BQU8sK0JBQStCLGdWQUFnVixJQUFJLGNBQWMsT0FBTywrQkFBK0IseVdBQXlX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L3NoaWtpamlAMC4xMC4yL25vZGVfbW9kdWxlcy9zaGlraWppL2Rpc3QvbGFuZ3Mvd2FzbS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbGFuZyA9IE9iamVjdC5mcmVlemUoeyBcImRpc3BsYXlOYW1lXCI6IFwiV2ViQXNzZW1ibHlcIiwgXCJuYW1lXCI6IFwid2FzbVwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50c1wiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3N0cmluZ3NcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNpbnN0cnVjdGlvbnNcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiN0eXBlc1wiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI21vZHVsZXNcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNjb25zdGFudHNcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNpbnZhbGlkXCIgfV0sIFwicmVwb3NpdG9yeVwiOiB7IFwiY29tbWVudHNcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmNvbW1lbnQud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJMaW5lIGNvbW1lbnRcIiwgXCJtYXRjaFwiOiBcIig7OykuKiRcIiwgXCJuYW1lXCI6IFwiY29tbWVudC5saW5lLndhdFwiIH0sIHsgXCJiZWdpblwiOiBcIlxcXFwoO1wiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmNvbW1lbnQud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJCbG9jayBjb21tZW50XCIsIFwiZW5kXCI6IFwiO1xcXFwpXCIsIFwiZW5kQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmNvbW1lbnQud2F0XCIgfSB9LCBcIm5hbWVcIjogXCJjb21tZW50LmJsb2NrLndhdFwiIH1dIH0sIFwiY29uc3RhbnRzXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImNvbW1lbnRcIjogXCJGaXhlZC13aWR0aCBTSU1EXCIsIFwicGF0dGVybnNcIjogW3sgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZS53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlZlY3RvciBsaXRlcmFsIChpOHgxNikgW3NpbWRdXCIsIFwibWF0Y2hcIjogXCJcXFxcYihpOHgxNikoPzpcXFxccysweFswLTlhLWZBLUZdezEsMn0pezE2fVxcXFxiXCIsIFwibmFtZVwiOiBcImNvbnN0YW50Lm51bWVyaWMudmVjdG9yLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQudHlwZS53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlZlY3RvciBsaXRlcmFsIChpMTZ4OCkgW3NpbWRdXCIsIFwibWF0Y2hcIjogXCJcXFxcYihpMTZ4OCkoPzpcXFxccysweFswLTlhLWZBLUZdezEsNH0pezh9XFxcXGJcIiwgXCJuYW1lXCI6IFwiY29uc3RhbnQubnVtZXJpYy52ZWN0b3Iud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC50eXBlLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiVmVjdG9yIGxpdGVyYWwgKGkzMng0KSBbc2ltZF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGkzMng0KSg/OlxcXFxzKzB4WzAtOWEtZkEtRl17MSw4fSl7NH1cXFxcYlwiLCBcIm5hbWVcIjogXCJjb25zdGFudC5udW1lcmljLnZlY3Rvci53YXRcIiB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJWZWN0b3IgbGl0ZXJhbCAoaTY0eDIpIFtzaW1kXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoaTY0eDIpKD86XFxcXHMrMHhbMC05YS1mQS1GXXsxLDE2fSl7Mn1cXFxcYlwiLCBcIm5hbWVcIjogXCJjb25zdGFudC5udW1lcmljLnZlY3Rvci53YXRcIiB9XSB9LCB7IFwiY29tbWVudFwiOiBcIk1WUFwiLCBcInBhdHRlcm5zXCI6IFt7IFwiY29tbWVudFwiOiBcIkZsb2F0aW5nIHBvaW50IGxpdGVyYWxcIiwgXCJtYXRjaFwiOiBcIlsrLV0/XFxcXGJbMC05XVswLTldKig/OlxcXFwuWzAtOV1bMC05XSopPyg/OltlRV1bKy1dP1swLTldKyk/XFxcXGJcIiwgXCJuYW1lXCI6IFwiY29uc3RhbnQubnVtZXJpYy5mbG9hdC53YXRcIiB9LCB7IFwiY29tbWVudFwiOiBcIkZsb2F0aW5nIHBvaW50IGhleGFkZWNpbWFsIGxpdGVyYWxcIiwgXCJtYXRjaFwiOiBcIlsrLV0/XFxcXGIweChbMC05YS1mQS1GXSpcXFxcLlswLTlhLWZBLUZdK3xbMC05YS1mQS1GXStcXFxcLj8pW1BwXVsrLV0/WzAtOV0rXFxcXGJcIiwgXCJuYW1lXCI6IFwiY29uc3RhbnQubnVtZXJpYy5mbG9hdC53YXRcIiB9LCB7IFwiY29tbWVudFwiOiBcIkZsb2F0aW5nIHBvaW50IGluZmluaXR5XCIsIFwibWF0Y2hcIjogXCJbKy1dP1xcXFxiaW5mXFxcXGJcIiwgXCJuYW1lXCI6IFwiY29uc3RhbnQubnVtZXJpYy5mbG9hdC53YXRcIiB9LCB7IFwiY29tbWVudFwiOiBcIkZsb2F0aW5nIHBvaW50IGxpdGVyYWwgKE5hTilcIiwgXCJtYXRjaFwiOiBcIlsrLV0/XFxcXGJuYW46MHhbMC05YS1mQS1GXVswLTlhLWZBLUZdKlxcXFxiXCIsIFwibmFtZVwiOiBcImNvbnN0YW50Lm51bWVyaWMuZmxvYXQud2F0XCIgfSwgeyBcImNvbW1lbnRcIjogXCJJbnRlZ2VyIGxpdGVyYWxcIiwgXCJtYXRjaFwiOiBcIlsrLV0/XFxcXGIoPzoweFswLTlhLWZBLUZdWzAtOWEtZkEtRl0qfFxcXFxkW1xcXFxkXSopXFxcXGJcIiwgXCJuYW1lXCI6IFwiY29uc3RhbnQubnVtZXJpYy5pbnRlZ2VyLndhdFwiIH1dIH1dIH0sIFwiaW5zdHJ1Y3Rpb25zXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImNvbW1lbnRcIjogXCJOb24tdHJhcHBpbmcgZmxvYXQtdG8taW50IGNvbnZlcnNpb25zXCIsIFwicGF0dGVybnNcIjogW3sgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJDb252ZXJzaW9uIGluc3RydWN0aW9uIFtub250cmFwcGluZy1mbG9hdC10by1pbnQtY29udmVyc2lvbnNdXCIsIFwibWF0Y2hcIjogXCJcXFxcYihpMzJ8aTY0KVxcXFwudHJ1bmNfc2F0X2YoPzozMnw2NClfW3N1XVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQub3BlcmF0b3Iud29yZC53YXRcIiB9XSB9LCB7IFwiY29tbWVudFwiOiBcIlNpZ24tZXh0ZW5zaW9uIG9wZXJhdG9yc1wiLCBcInBhdHRlcm5zXCI6IFt7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiTnVtZXJpYyBpbnN0cnVjdGlvbiAoaTMyKSBbc2lnbi1leHRlbnNpb24tb3BzXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoaTMyKVxcXFwuKD86ZXh0ZW5kKD86OHwxNilfcylcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIk51bWVyaWMgaW5zdHJ1Y3Rpb24gKGk2NCkgW3NpZ24tZXh0ZW5zaW9uLW9wc11cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGk2NClcXFxcLig/OmV4dGVuZCg/Ojh8MTZ8MzIpX3MpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH1dIH0sIHsgXCJjb21tZW50XCI6IFwiQnVsayBtZW1vcnkgb3BlcmF0aW9uc1wiLCBcInBhdHRlcm5zXCI6IFt7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiTWVtb3J5IGluc3RydWN0aW9uIFtidWxrLW1lbW9yeS1vcGVyYXRpb25zXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIobWVtb3J5KVxcXFwuKD86Y29weXxmaWxsfGluaXR8ZHJvcClcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfV0gfSwgeyBcImNvbW1lbnRcIjogXCJGaXhlZC13aWR0aCBTSU1EXCIsIFwicGF0dGVybnNcIjogW3sgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJWZWN0b3IgaW5zdHJ1Y3Rpb24gKHYxMjgpIFtzaW1kXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIodjEyOClcXFxcLig/OmNvbnN0fGFuZHxvcnx4b3J8bm90fGFuZG5vdHxiaXRzZWxlY3R8bG9hZHxzdG9yZSlcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlZlY3RvciBpbnN0cnVjdGlvbiAoaTh4MTYpIFtzaW1kXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoaTh4MTYpXFxcXC4oPzpzaHVmZmxlfHN3aXp6bGV8c3BsYXR8cmVwbGFjZV9sYW5lfGFkZHxzdWJ8bXVsfG5lZ3xzaGx8c2hyX1tzdV18ZXF8bmV8bHRfW3N1XXxsZV9bc3VdfGd0X1tzdV18Z2VfW3N1XXxtaW5fW3N1XXxtYXhfW3N1XXxhbnlfdHJ1ZXxhbGxfdHJ1ZXxleHRyYWN0X2xhbmVfW3N1XXxhZGRfc2F0dXJhdGVfW3N1XXxzdWJfc2F0dXJhdGVfW3N1XXxhdmdyX3V8bmFycm93X2kxNng4X1tzdV0pXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJWZWN0b3IgaW5zdHJ1Y3Rpb24gKGkxNng4KSBbc2ltZF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGkxNng4KVxcXFwuKD86c3BsYXR8cmVwbGFjZV9sYW5lfGFkZHxzdWJ8bXVsfG5lZ3xzaGx8c2hyX1tzdV18ZXF8bmV8bHRfW3N1XXxsZV9bc3VdfGd0X1tzdV18Z2VfW3N1XXxtaW5fW3N1XXxtYXhfW3N1XXxhbnlfdHJ1ZXxhbGxfdHJ1ZXxleHRyYWN0X2xhbmVfW3N1XXxhZGRfc2F0dXJhdGVfW3N1XXxzdWJfc2F0dXJhdGVfW3N1XXxhdmdyX3V8bG9hZDh4OF9bc3VdfG5hcnJvd19pMzJ4NF9bc3VdfHdpZGVuXyhsb3d8aGlnaClfaTh4MTZfW3N1XSlcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlZlY3RvciBpbnN0cnVjdGlvbiAoaTMyeDQpIFtzaW1kXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoaTMyeDQpXFxcXC4oPzpzcGxhdHxyZXBsYWNlX2xhbmV8YWRkfHN1YnxtdWx8bmVnfHNobHxzaHJfW3N1XXxlcXxuZXxsdF9bc3VdfGxlX1tzdV18Z3RfW3N1XXxnZV9bc3VdfG1pbl9bc3VdfG1heF9bc3VdfGFueV90cnVlfGFsbF90cnVlfGV4dHJhY3RfbGFuZXxsb2FkMTZ4NF9bc3VdfHRydW5jX3NhdF9mMzJ4NF9bc3VdfHdpZGVuXyhsb3d8aGlnaClfaTE2eDhfW3N1XSlcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlZlY3RvciBpbnN0cnVjdGlvbiAoaTY0eDIpIFtzaW1kXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoaTY0eDIpXFxcXC4oPzpzcGxhdHxyZXBsYWNlX2xhbmV8YWRkfHN1YnxtdWx8bmVnfHNobHxzaHJfW3N1XXxleHRyYWN0X2xhbmV8bG9hZDMyeDJfW3N1XSlcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlZlY3RvciBpbnN0cnVjdGlvbiAoZjMyeDQpIFtzaW1kXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoZjMyeDQpXFxcXC4oPzpzcGxhdHxyZXBsYWNlX2xhbmV8YWRkfHN1YnxtdWx8bmVnfGV4dHJhY3RfbGFuZXxlcXxuZXxsdHxsZXxndHxnZXxhYnN8bWlufG1heHxkaXZ8c3FydHxjb252ZXJ0X2kzMng0X1tzdV0pXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJWZWN0b3IgaW5zdHJ1Y3Rpb24gKGY2NHgyKSBbc2ltZF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGY2NHgyKVxcXFwuKD86c3BsYXR8cmVwbGFjZV9sYW5lfGFkZHxzdWJ8bXVsfG5lZ3xleHRyYWN0X2xhbmV8ZXF8bmV8bHR8bGV8Z3R8Z2V8YWJzfG1pbnxtYXh8ZGl2fHNxcnQpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJWZWN0b3IgaW5zdHJ1Y3Rpb24gKHY4eDE2KSBbc2ltZF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKHY4eDE2KVxcXFwuKD86bG9hZF9zcGxhdHxzaHVmZmxlfHN3aXp6bGUpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJWZWN0b3IgaW5zdHJ1Y3Rpb24gKHYxNng4KSBbc2ltZF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKHYxNng4KVxcXFwubG9hZF9zcGxhdFxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQub3BlcmF0b3Iud29yZC53YXRcIiB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiVmVjdG9yIGluc3RydWN0aW9uICh2MzJ4NCkgW3NpbWRdXCIsIFwibWF0Y2hcIjogXCJcXFxcYih2MzJ4NClcXFxcLmxvYWRfc3BsYXRcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlZlY3RvciBpbnN0cnVjdGlvbiAodjY0eDIpIFtzaW1kXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIodjY0eDIpXFxcXC5sb2FkX3NwbGF0XFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH1dIH0sIHsgXCJjb21tZW50XCI6IFwiVGhyZWFkc1wiLCBcInBhdHRlcm5zXCI6IFt7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLndhdFwiIH0sIFwiMlwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSwgXCIzXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9LCBcIjRcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiQXRvbWljIGluc3RydWN0aW9uIChpMzIpIFt0aHJlYWRzXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoaTMyKVxcXFwuKGF0b21pYylcXFxcLig/OmxvYWQoPzo4X3V8MTZfdSk/fHN0b3JlKD86OHwxNik/fHdhaXR8KHJtdylcXFxcLig/OmFkZHxzdWJ8YW5kfG9yfHhvcnx4Y2hnfGNtcHhjaGcpfChybXc4fHJtdzE2KVxcXFwuKD86YWRkX3V8c3ViX3V8YW5kX3V8b3JfdXx4b3JfdXx4Y2hnX3V8Y21weGNoZ191KSlcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLndhdFwiIH0sIFwiM1wiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSwgXCI0XCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIkF0b21pYyBpbnN0cnVjdGlvbiAoaTY0KSBbdGhyZWFkc11cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGk2NClcXFxcLihhdG9taWMpXFxcXC4oPzpsb2FkKD86OF91fDE2X3V8MzJfdSk/fHN0b3JlKD86OHwxNnwzMik/fHdhaXR8KHJtdylcXFxcLig/OmFkZHxzdWJ8YW5kfG9yfHhvcnx4Y2hnfGNtcHhjaGcpfChybXc4fHJtdzE2fHJtdzMyKVxcXFwuKD86YWRkX3V8c3ViX3V8YW5kX3V8b3JfdXx4b3JfdXx4Y2hnX3V8Y21weGNoZ191KSlcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIkF0b21pYyBpbnN0cnVjdGlvbiBbdGhyZWFkc11cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGF0b21pYylcXFxcLig/Om5vdGlmeXxmZW5jZSlcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNvbW1lbnRcIjogXCJTaGFyZWQgbW9kaWZpZXIgW3RocmVhZHNdXCIsIFwibWF0Y2hcIjogXCJcXFxcYnNoYXJlZFxcXFxiXCIsIFwibmFtZVwiOiBcInN0b3JhZ2UubW9kaWZpZXIud2F0XCIgfV0gfSwgeyBcImNvbW1lbnRcIjogXCJSZWZlcmVuY2UgdHlwZXNcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlJlZmVyZW5jZSBpbnN0cnVjdGlvbiBbcmVmZXJlbmNlLXR5cGVzXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIocmVmKVxcXFwuKD86bnVsbHxpc19udWxsfGZ1bmN8ZXh0ZXJuKVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQub3BlcmF0b3Iud29yZC53YXRcIiB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiVGFibGUgaW5zdHJ1Y3Rpb24gW3JlZmVyZW5jZS10eXBlc11cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKHRhYmxlKVxcXFwuKD86Z2V0fHNpemV8Z3Jvd3xmaWxsfGluaXR8Y29weSlcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNvbW1lbnRcIjogXCJUeXBlIG5hbWUgW3JlZmVyZW5jZS10eXBlc11cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKD86ZXh0ZXJucmVmfGZ1bmNyZWZ8bnVsbHJlZilcXFxcYlwiLCBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS50eXBlLndhdFwiIH1dIH0sIHsgXCJjb21tZW50XCI6IFwiVGFpbCBDYWxsXCIsIFwicGF0dGVybnNcIjogW3sgXCJjb21tZW50XCI6IFwiQ29udHJvbCBpbnN0cnVjdGlvbiBbdGFpbC1jYWxsXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGJyZXR1cm5fY2FsbCg/Ol9pbmRpcmVjdCk/XFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5jb250cm9sLndhdFwiIH1dIH0sIHsgXCJjb21tZW50XCI6IFwiRXhjZXB0aW9uIGhhbmRsaW5nXCIsIFwicGF0dGVybnNcIjogW3sgXCJjb21tZW50XCI6IFwiQ29udHJvbCBpbnN0cnVjdGlvbiBbZXhjZXB0aW9uLWhhbmRsaW5nXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoPzp0cnl8Y2F0Y2h8dGhyb3d8cmV0aHJvd3xicl9vbl9leG4pXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5jb250cm9sLndhdFwiIH0sIHsgXCJjb21tZW50XCI6IFwiTW9kdWxlIGVsZW1lbnQgW2V4Y2VwdGlvbi1oYW5kbGluZ11cIiwgXCJtYXRjaFwiOiBcIig/PD1cXFxcKClldmVudFxcXFxiXCIsIFwibmFtZVwiOiBcInN0b3JhZ2UudHlwZS53YXRcIiB9XSB9LCB7IFwiY29tbWVudFwiOiBcIkJpbmFyeWVuIGV4dGVuc2lvbnNcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlBzZXVkbyBzdGFjayBpbnN0cnVjdGlvbiBbYmluYXJ5ZW5dXCIsIFwibWF0Y2hcIjogXCJcXFxcYihpMzJ8aTY0fGYzMnxmNjR8ZXh0ZXJucmVmfGZ1bmNyZWZ8bnVsbHJlZnxleG5yZWYpXFxcXC4oPzpwdXNofHBvcClcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfV0gfSwgeyBcImNvbW1lbnRcIjogXCJNVlBcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy50eXBlLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiTWVtb3J5IGluc3RydWN0aW9uIChpMzIpIFttdnBdXCIsIFwibWF0Y2hcIjogXCJcXFxcYihpMzIpXFxcXC4oPzpsb2FkfGxvYWQoPzo4fDE2KSg/Ol9bc3VdKT98c3RvcmUoPzo4fDE2KT8pXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3MudHlwZS53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIk1lbW9yeSBpbnN0cnVjdGlvbiAoaTY0KSBbbXZwXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoaTY0KVxcXFwuKD86bG9hZHxsb2FkKD86OHwxNnwzMikoPzpfW3N1XSk/fHN0b3JlKD86OHwxNnwzMik/KVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQub3BlcmF0b3Iud29yZC53YXRcIiB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLnR5cGUud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJNZW1vcnkgaW5zdHJ1Y3Rpb24gKGYzMi9mNjQpIFttdnBdXCIsIFwibWF0Y2hcIjogXCJcXFxcYihmMzJ8ZjY0KVxcXFwuKD86bG9hZHxzdG9yZSlcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy5tZW1vcnkud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJNZW1vcnkgaW5zdHJ1Y3Rpb24gW212cF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKG1lbW9yeSlcXFxcLig/OnNpemV8Z3JvdylcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwiZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiTWVtb3J5IGluc3RydWN0aW9uIGF0dHJpYnV0ZSBbbXZwXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIob2Zmc2V0fGFsaWduKT1cXFxcYlwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3MubG9jYWwud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJWYXJpYWJsZSBpbnN0cnVjdGlvbiAobG9jYWwpIFttdnBdXCIsIFwibWF0Y2hcIjogXCJcXFxcYihsb2NhbClcXFxcLig/OmdldHxzZXR8dGVlKVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQub3BlcmF0b3Iud29yZC53YXRcIiB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLmdsb2JhbC53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlZhcmlhYmxlIGluc3RydWN0aW9uIChnbG9iYWwpIFttdnBdXCIsIFwibWF0Y2hcIjogXCJcXFxcYihnbG9iYWwpXFxcXC4oPzpnZXR8c2V0KVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQub3BlcmF0b3Iud29yZC53YXRcIiB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLnR5cGUud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJOdW1lcmljIGluc3RydWN0aW9uIChpMzIvaTY0KSBbbXZwXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoaTMyfGk2NClcXFxcLihjb25zdHxlcXp8ZXF8bmV8bHRfW3N1XXxndF9bc3VdfGxlX1tzdV18Z2VfW3N1XXxjbHp8Y3R6fHBvcGNudHxhZGR8c3VifG11bHxkaXZfW3N1XXxyZW1fW3N1XXxhbmR8b3J8eG9yfHNobHxzaHJfW3N1XXxyb3RsfHJvdHIpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3MudHlwZS53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIk51bWVyaWMgaW5zdHJ1Y3Rpb24gKGYzMi9mNjQpIFttdnBdXCIsIFwibWF0Y2hcIjogXCJcXFxcYihmMzJ8ZjY0KVxcXFwuKGNvbnN0fGVxfG5lfGx0fGd0fGxlfGdlfGFic3xuZWd8Y2VpbHxmbG9vcnx0cnVuY3xuZWFyZXN0fHNxcnR8YWRkfHN1YnxtdWx8ZGl2fG1pbnxtYXh8Y29weXNpZ24pXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3MudHlwZS53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIkNvbnZlcnNpb24gaW5zdHJ1Y3Rpb24gKGkzMikgW212cF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGkzMilcXFxcLih3cmFwX2k2NHx0cnVuY18oZjMyfGY2NClfW3N1XXxyZWludGVycHJldF9mMzIpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3MudHlwZS53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIkNvbnZlcnNpb24gaW5zdHJ1Y3Rpb24gKGk2NCkgW212cF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGk2NClcXFxcLihleHRlbmRfaTMyX1tzdV18dHJ1bmNfZigzMnw2NClfW3N1XXxyZWludGVycHJldF9mNjQpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3MudHlwZS53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIkNvbnZlcnNpb24gaW5zdHJ1Y3Rpb24gKGYzMikgW212cF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGYzMilcXFxcLihjb252ZXJ0X2koMzJ8NjQpX1tzdV18ZGVtb3RlX2Y2NHxyZWludGVycHJldF9pMzIpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3MudHlwZS53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIkNvbnZlcnNpb24gaW5zdHJ1Y3Rpb24gKGY2NCkgW212cF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGY2NClcXFxcLihjb252ZXJ0X2koMzJ8NjQpX1tzdV18cHJvbW90ZV9mMzJ8cmVpbnRlcnByZXRfaTY0KVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQub3BlcmF0b3Iud29yZC53YXRcIiB9LCB7IFwiY29tbWVudFwiOiBcIkNvbnRyb2wgaW5zdHJ1Y3Rpb24gW212cF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKD86dW5yZWFjaGFibGV8bm9wfGJsb2NrfGxvb3B8aWZ8dGhlbnxlbHNlfGVuZHxicnxicl9pZnxicl90YWJsZXxyZXR1cm58Y2FsbHxjYWxsX2luZGlyZWN0KVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQuY29udHJvbC53YXRcIiB9LCB7IFwiY29tbWVudFwiOiBcIlBhcmFtZXRyaWMgaW5zdHJ1Y3Rpb24gW212cF1cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKD86ZHJvcHxzZWxlY3QpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH1dIH0sIHsgXCJjb21tZW50XCI6IFwiR0MgSW5zdHJ1Y3Rpb25zXCIsIFwicGF0dGVybnNcIjogW3sgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJSZWZlcmVuY2UgSW5zdHJ1Y3Rpb25zIFtHQ11cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKHJlZilcXFxcLig/OmVxfHRlc3R8Y2FzdClcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLm9wZXJhdG9yLndvcmQud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3VwcG9ydC5jbGFzcy53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIlN0cnVjdCBJbnN0cnVjdGlvbnMgW0dDXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoc3RydWN0KVxcXFwuKD86bmV3X2Nhbm9ufG5ld19jYW5vbl9kZWZhdWx0fGdldHxnZXRfc3xnZXRfdXxzZXQpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJBcnJheSBJbnN0cnVjdGlvbnMgW0dDXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoYXJyYXkpXFxcXC4oPzpuZXdfY2Fub258bmV3X2Nhbm9uX2RlZmF1bHR8Z2V0fGdldF9zfGdldF91fHNldHxsZW58bmV3X2Nhbm9uX2ZpeGVkfG5ld19jYW5vbl9kYXRhfG5ld19jYW5vbl9lbGVtKVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQub3BlcmF0b3Iud29yZC53YXRcIiB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LmNsYXNzLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiaTMxIEluc3RydWN0aW9ucyBbR0NdXCIsIFwibWF0Y2hcIjogXCJcXFxcYihpMzEpXFxcXC4oPzpuZXd8Z2V0X3N8Z2V0X3UpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJCcmFuY2ggSW5zdHJ1Y3Rpb25zIFtHQ11cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKD86YnJfb25fbm9uX251bGx8YnJfb25fY2FzdHxicl9vbl9jYXN0X2ZhaWwpXFxcXGJcIiwgXCJuYW1lXCI6IFwia2V5d29yZC5vcGVyYXRvci53b3JkLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN1cHBvcnQuY2xhc3Mud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJSZWZlcmVuY2UgSW5zdHJ1Y3Rpb25zIFtHQ11cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKGV4dGVybilcXFxcLig/OmludGVybmFsaXplfGV4dGVybmFsaXplKVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQub3BlcmF0b3Iud29yZC53YXRcIiB9XSB9XSB9LCBcImludmFsaWRcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwibWF0Y2hcIjogXCJbXlxcXFxzKCldK1wiLCBcIm5hbWVcIjogXCJpbnZhbGlkLndhdFwiIH1dIH0sIFwibW9kdWxlc1wiOiB7IFwicGF0dGVybnNcIjogW3sgXCJjb21tZW50XCI6IFwiQnVsayBtZW1vcnkgb3BlcmF0aW9uc1wiLCBcInBhdHRlcm5zXCI6IFt7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdG9yYWdlLm1vZGlmaWVyLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiUGFzc2l2ZSBtb2RpZmllciBbYnVsay1tZW1vcnktb3BlcmF0aW9uc11cIiwgXCJtYXRjaFwiOiBcIig/PD1cXFxcKGRhdGEpXFxcXHMrKHBhc3NpdmUpXFxcXGJcIiB9XSB9LCB7IFwiY29tbWVudFwiOiBcIk1WUFwiLCBcInBhdHRlcm5zXCI6IFt7IFwiY29tbWVudFwiOiBcIk1vZHVsZSBlbGVtZW50IFttdnBdXCIsIFwibWF0Y2hcIjogXCIoPzw9XFxcXCgpKD86bW9kdWxlfGltcG9ydHxleHBvcnR8bWVtb3J5fGRhdGF8dGFibGV8ZWxlbXxzdGFydHxmdW5jfHR5cGV8cGFyYW18cmVzdWx0fGdsb2JhbHxsb2NhbClcXFxcYlwiLCBcIm5hbWVcIjogXCJzdG9yYWdlLnR5cGUud2F0XCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3RvcmFnZS5tb2RpZmllci53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIk11dGFibGUgZ2xvYmFsIG1vZGlmaWVyIFttdnBdXCIsIFwibWF0Y2hcIjogXCIoPzw9XFxcXCgpXFxcXHMqKG11dClcXFxcYlwiLCBcIm5hbWVcIjogXCJzdG9yYWdlLm1vZGlmaWVyLndhdFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcImVudGl0eS5uYW1lLmZ1bmN0aW9uLndhdFwiIH0gfSwgXCJjb21tZW50XCI6IFwiRnVuY3Rpb24gbmFtZSBbbXZwXVwiLCBcIm1hdGNoXCI6IFwiKD88PVxcXFwoZnVuY3xcXFxcKHN0YXJ0fGNhbGx8cmV0dXJuX2NhbGx8cmVmXFxcXC5mdW5jKVxcXFxzKyhcXFxcJFswLTlBLVphLXohIyQlJicqK1xcXFwtLi86PD0+P0BcXFxcXFxcXF5fYHx+XSopXCIgfSwgeyBcImJlZ2luXCI6IFwiXFxcXClcXFxccysoXFxcXCRbMC05QS1aYS16ISMkJSYnKitcXFxcLS4vOjw9Pj9AXFxcXFxcXFxeX2B8fl0qKVwiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS5mdW5jdGlvbi53YXRcIiB9IH0sIFwiY29tbWVudFwiOiBcIkZ1bmN0aW9uIG5hbWUocykgKGVsZW0pIFttdnBdXCIsIFwiZW5kXCI6IFwiXFxcXClcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcIm1hdGNoXCI6IFwiKD88PVxcXFxzKVxcXFwkWzAtOUEtWmEteiEjJCUmJyorXFxcXC0uLzo8PT4/QFxcXFxcXFxcXl9gfH5dKlwiLCBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS5mdW5jdGlvbi53YXRcIiB9XSB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJzdXBwb3J0LnR5cGUuZnVuY3Rpb24ud2F0XCIgfSB9LCBcImNvbW1lbnRcIjogXCJGdW5jdGlvbiB0eXBlIFttdnBdXCIsIFwibWF0Y2hcIjogXCIoPzw9XFxcXCh0eXBlKVxcXFxzKyhcXFxcJFswLTlBLVphLXohIyQlJicqK1xcXFwtLi86PD0+P0BcXFxcXFxcXF5fYHx+XSopXCIgfSwgeyBcImNvbW1lbnRcIjogXCJWYXJpYWJsZSBuYW1lIG9yIGJyYW5jaCBsYWJlbCBbbXZwXVwiLCBcIm1hdGNoXCI6IFwiXFxcXCRbMC05QS1aYS16ISMkJSYnKitcXFxcLS4vOjw9Pj9AXFxcXFxcXFxeX2B8fl0qXFxcXGJcIiwgXCJuYW1lXCI6IFwidmFyaWFibGUub3RoZXIud2F0XCIgfV0gfV0gfSwgXCJzdHJpbmdzXCI6IHsgXCJiZWdpblwiOiAnXCInLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5iZWdpblwiIH0gfSwgXCJjb21tZW50XCI6IFwiU3RyaW5nIGxpdGVyYWxcIiwgXCJlbmRcIjogJ1wiJywgXCJlbmRDYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLmVuZFwiIH0gfSwgXCJuYW1lXCI6IFwic3RyaW5nLnF1b3RlZC5kb3VibGUud2F0XCIsIFwicGF0dGVybnNcIjogW3sgXCJtYXRjaFwiOiBgXFxcXFxcXFwobnx0fFxcXFxcXFxcfCd8XCJ8WzAtOWEtZkEtRl17Mn0pYCwgXCJuYW1lXCI6IFwiY29uc3RhbnQuY2hhcmFjdGVyLmVzY2FwZS53YXRcIiB9XSB9LCBcInR5cGVzXCI6IHsgXCJwYXR0ZXJuc1wiOiBbeyBcImNvbW1lbnRcIjogXCJGaXhlZC13aWR0aCBTSU1EXCIsIFwicGF0dGVybnNcIjogW3sgXCJjb21tZW50XCI6IFwiVHlwZSBuYW1lIFtzaW1kXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGJ2MTI4XFxcXGIoPyFcXFxcLilcIiwgXCJuYW1lXCI6IFwiZW50aXR5Lm5hbWUudHlwZS53YXRcIiB9XSB9LCB7IFwiY29tbWVudFwiOiBcIlJlZmVyZW5jZSB0eXBlc1wiLCBcInBhdHRlcm5zXCI6IFt7IFwiY29tbWVudFwiOiBcIlR5cGUgbmFtZSBbcmVmZXJlbmNlLXR5cGVzXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoPzpleHRlcm5yZWZ8ZnVuY3JlZnxudWxscmVmKVxcXFxiKD8hXFxcXC4pXCIsIFwibmFtZVwiOiBcImVudGl0eS5uYW1lLnR5cGUud2F0XCIgfV0gfSwgeyBcImNvbW1lbnRcIjogXCJFeGNlcHRpb24gaGFuZGxpbmdcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImNvbW1lbnRcIjogXCJUeXBlIG5hbWUgW2V4Y2VwdGlvbi1oYW5kbGluZ11cIiwgXCJtYXRjaFwiOiBcIlxcXFxiZXhucmVmXFxcXGIoPyFcXFxcLilcIiwgXCJuYW1lXCI6IFwiZW50aXR5Lm5hbWUudHlwZS53YXRcIiB9XSB9LCB7IFwiY29tbWVudFwiOiBcIk1WUFwiLCBcInBhdHRlcm5zXCI6IFt7IFwiY29tbWVudFwiOiBcIlR5cGUgbmFtZSBbbXZwXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoPzppMzJ8aTY0fGYzMnxmNjQpXFxcXGIoPyFcXFxcLilcIiwgXCJuYW1lXCI6IFwiZW50aXR5Lm5hbWUudHlwZS53YXRcIiB9XSB9LCB7IFwiY29tbWVudFwiOiBcIkdDIFR5cGVzXCIsIFwicGF0dGVybnNcIjogW3sgXCJjb21tZW50XCI6IFwiVHlwZSBuYW1lIFtHQ11cIiwgXCJtYXRjaFwiOiBcIlxcXFxiKD86aTh8aTE2fHJlZnxmdW5jcmVmfGV4dGVybnJlZnxhbnlyZWZ8ZXFyZWZ8aTMxcmVmfG51bGxmdW5jcmVmfG51bGxleHRlcm5yZWZ8c3RydWN0cmVmfGFycmF5cmVmfG51bGxyZWYpXFxcXGIoPyFcXFxcLilcIiwgXCJuYW1lXCI6IFwiZW50aXR5Lm5hbWUudHlwZS53YXRcIiB9XSB9LCB7IFwiY29tbWVudFwiOiBcIkdDIEhlYXAgVHlwZXNcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImNvbW1lbnRcIjogXCJUeXBlIG5hbWUgW0dDXVwiLCBcIm1hdGNoXCI6IFwiXFxcXGIoPzp0eXBlfGZ1bmN8ZXh0ZXJufGFueXxlcXxub2Z1bmN8bm9leHRlcm58c3RydWN0fGFycmF5fG5vbmUpXFxcXGIoPyFcXFxcLilcIiwgXCJuYW1lXCI6IFwiZW50aXR5Lm5hbWUudHlwZS53YXRcIiB9XSB9LCB7IFwiY29tbWVudFwiOiBcIkdDIFN0cnVjdHVyZWQgYW5kIHN1YiBUeXBlc1wiLCBcInBhdHRlcm5zXCI6IFt7IFwiY29tbWVudFwiOiBcIlR5cGUgbmFtZSBbR0NdXCIsIFwibWF0Y2hcIjogXCJcXFxcYig/OnN0cnVjdHxhcnJheXxzdWJ8ZmluYWx8cmVjfGZpZWxkfG11dClcXFxcYig/IVxcXFwuKVwiLCBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS50eXBlLndhdFwiIH1dIH1dIH0gfSwgXCJzY29wZU5hbWVcIjogXCJzb3VyY2Uud2F0XCIgfSk7XG52YXIgd2FzbSA9IFtcbiAgbGFuZ1xuXTtcblxuZXhwb3J0IHsgd2FzbSBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/shikiji@0.10.2/node_modules/shikiji/dist/langs/wasm.mjs\n"));

/***/ })

}]);