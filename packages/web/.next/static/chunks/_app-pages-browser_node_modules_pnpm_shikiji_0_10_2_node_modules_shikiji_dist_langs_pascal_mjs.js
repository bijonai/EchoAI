"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_shikiji_0_10_2_node_modules_shikiji_dist_langs_pascal_mjs"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/shikiji@0.10.2/node_modules/shikiji/dist/langs/pascal.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/shikiji@0.10.2/node_modules/shikiji/dist/langs/pascal.mjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ pascal)\n/* harmony export */ });\nconst lang = Object.freeze({ \"displayName\": \"Pascal\", \"fileTypes\": [\"pas\", \"p\", \"pp\", \"dfm\", \"fmx\", \"dpr\", \"dpk\", \"lfm\", \"lpr\"], \"name\": \"pascal\", \"patterns\": [{ \"match\": \"\\\\b(?i:(absolute|abstract|add|all|and_then|array|as|asc|asm|assembler|async|attribute|autoreleasepool|await|begin|bindable|block|by|case|cdecl|class|concat|const|constref|copy|cppdecl|contains|default|delegate|deprecated|desc|distinct|div|each|else|empty|end|ensure|enum|equals|event|except|export|exports|extension|external|far|file|finalization|finalizer|finally|flags|forward|from|future|generic|goto|group|has|helper|if|implements|implies|import|in|index|inherited|initialization|inline|interrupt|into|invariants|is|iterator|label|library|join|lazy|lifetimestrategy|locked|locking|loop|mapped|matching|method|mod|module|name|namespace|near|nested|new|nostackframe|not|notify|nullable|object|of|old|oldfpccall|on|only|operator|optional|or_else|order|otherwise|out|override|package|packed|parallel|params|partial|pascal|pinned|platform|pow|private|program|protected|public|published|interface|implementation|qualified|queryable|raises|read|readonly|record|reference|register|remove|resident|require|requires|resourcestring|restricted|result|reverse|safecall|sealed|segment|select|selector|sequence|set|shl|shr|skip|specialize|soft|static|stored|stdcall|step|strict|strong|take|then|threadvar|to|try|tuple|type|unconstrained|unit|unmanaged|unretained|unsafe|uses|using|var|view|virtual|volatile|weak|dynamic|overload|reintroduce|where|with|write|xor|yield))\\\\b\", \"name\": \"keyword.pascal\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.prototype.pascal\" }, \"2\": { \"name\": \"entity.name.function.prototype.pascal\" } }, \"match\": \"\\\\b(?i:(function|procedure|constructor|destructor))\\\\b\\\\s+(\\\\w+(\\\\.\\\\w+)?)(\\\\(.*?\\\\))?;\\\\s*(?=(?i:attribute|forward|external))\", \"name\": \"meta.function.prototype.pascal\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.function.pascal\" }, \"2\": { \"name\": \"entity.name.function.pascal\" } }, \"match\": \"\\\\b(?i:(function|procedure|constructor|destructor|property|read|write))\\\\b\\\\s+(\\\\w+(\\\\.\\\\w+)?)\", \"name\": \"meta.function.pascal\" }, { \"match\": \"\\\\b(?i:(self|result))\\\\b\", \"name\": \"token.variable\" }, { \"match\": \"\\\\b(?i:(and|or))\\\\b\", \"name\": \"keyword.operator.pascal\" }, { \"match\": \"\\\\b(?i:(break|continue|exit|abort|while|do|downto|for|raise|repeat|until))\\\\b\", \"name\": \"keyword.control.pascal\" }, { \"begin\": \"\\\\{\\\\$\", \"captures\": { \"0\": { \"name\": \"string.regexp\" } }, \"end\": \"\\\\}\", \"name\": \"string.regexp\" }, { \"match\": \"\\\\b(?i:(ansichar|ansistring|boolean|byte|cardinal|char|comp|currency|double|dword|extended|file|integer|int64|longint|longword|nativeint|nativeuint|olevariant|pansichar|pchar|pwidechar|pointer|real|shortint|shortstring|single|smallint|string|uint64|variant|widechar|widestring|word|wordbool))\\\\b\", \"name\": \"storage.support.type.pascal\" }, { \"match\": \"\\\\b(\\\\d+)|(\\\\d*\\\\.\\\\d+([eE][\\\\-+]?\\\\d+)?)\\\\b\", \"name\": \"constant.numeric.pascal\" }, { \"match\": \"\\\\$[0-9a-fA-F]{1,16}\\\\b\", \"name\": \"constant.numeric.hex.pascal\" }, { \"match\": \"\\\\b(?i:(true|false|nil))\\\\b\", \"name\": \"constant.language.pascal\" }, { \"match\": \"\\\\b(?i:(Assert))\\\\b\", \"name\": \"keyword.control\" }, { \"begin\": \"(^[ \\\\t]+)?(?=//)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.pascal\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"//\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.pascal\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.double-slash.pascal.two\" }] }, { \"begin\": \"\\\\(\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.pascal\" } }, \"end\": \"\\\\*\\\\)\", \"name\": \"comment.block.pascal.one\" }, { \"begin\": \"\\\\{(?!\\\\$)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.pascal\" } }, \"end\": \"\\\\}\", \"name\": \"comment.block.pascal.two\" }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.pascal\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.pascal\" } }, \"name\": \"string.quoted.single.pascal\", \"patterns\": [{ \"match\": \"''\", \"name\": \"constant.character.escape.apostrophe.pascal\" }] }, { \"match\": \"\\\\#\\\\d+\", \"name\": \"string.other.pascal\" }], \"scopeName\": \"source.pascal\" });\nvar pascal = [\n  lang\n];\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9zaGlraWppQDAuMTAuMi9ub2RlX21vZHVsZXMvc2hpa2lqaS9kaXN0L2xhbmdzL3Bhc2NhbC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLDZCQUE2QixxSUFBcUksdzNDQUF3M0MsSUFBSSxjQUFjLE9BQU8seUNBQXlDLFNBQVMsbURBQW1ELG1HQUFtRyxvRkFBb0YsSUFBSSxjQUFjLE9BQU8sd0NBQXdDLFNBQVMseUNBQXlDLDZJQUE2SSxJQUFJLCtEQUErRCxJQUFJLG1FQUFtRSxJQUFJLDRIQUE0SCxJQUFJLGFBQWEsb0JBQW9CLE9BQU8sMkJBQTJCLGFBQWEsNEJBQTRCLElBQUksMlZBQTJWLElBQUksNEZBQTRGLElBQUkseUJBQXlCLEtBQUssNkNBQTZDLElBQUksNEVBQTRFLElBQUksMkRBQTJELElBQUksaURBQWlELE9BQU8sMkRBQTJELG1DQUFtQyxrQ0FBa0MsT0FBTyxtREFBbUQsZ0VBQWdFLEdBQUcsSUFBSSxpQ0FBaUMsT0FBTyxtREFBbUQsdURBQXVELElBQUksYUFBYSx3QkFBd0IsT0FBTyxtREFBbUQsYUFBYSx1Q0FBdUMsSUFBSSxpQ0FBaUMsT0FBTyx3REFBd0QsK0JBQStCLE9BQU8sc0RBQXNELHdEQUF3RCxzRUFBc0UsR0FBRyxJQUFJLG1EQUFtRCxpQ0FBaUM7QUFDcm1JO0FBQ0E7QUFDQTs7QUFFNkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hY2JveGxpdS9wcm9qZWN0cy9iaWpvbi9lY2hvYWkvbm9kZV9tb2R1bGVzLy5wbnBtL3NoaWtpamlAMC4xMC4yL25vZGVfbW9kdWxlcy9zaGlraWppL2Rpc3QvbGFuZ3MvcGFzY2FsLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBsYW5nID0gT2JqZWN0LmZyZWV6ZSh7IFwiZGlzcGxheU5hbWVcIjogXCJQYXNjYWxcIiwgXCJmaWxlVHlwZXNcIjogW1wicGFzXCIsIFwicFwiLCBcInBwXCIsIFwiZGZtXCIsIFwiZm14XCIsIFwiZHByXCIsIFwiZHBrXCIsIFwibGZtXCIsIFwibHByXCJdLCBcIm5hbWVcIjogXCJwYXNjYWxcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcIm1hdGNoXCI6IFwiXFxcXGIoP2k6KGFic29sdXRlfGFic3RyYWN0fGFkZHxhbGx8YW5kX3RoZW58YXJyYXl8YXN8YXNjfGFzbXxhc3NlbWJsZXJ8YXN5bmN8YXR0cmlidXRlfGF1dG9yZWxlYXNlcG9vbHxhd2FpdHxiZWdpbnxiaW5kYWJsZXxibG9ja3xieXxjYXNlfGNkZWNsfGNsYXNzfGNvbmNhdHxjb25zdHxjb25zdHJlZnxjb3B5fGNwcGRlY2x8Y29udGFpbnN8ZGVmYXVsdHxkZWxlZ2F0ZXxkZXByZWNhdGVkfGRlc2N8ZGlzdGluY3R8ZGl2fGVhY2h8ZWxzZXxlbXB0eXxlbmR8ZW5zdXJlfGVudW18ZXF1YWxzfGV2ZW50fGV4Y2VwdHxleHBvcnR8ZXhwb3J0c3xleHRlbnNpb258ZXh0ZXJuYWx8ZmFyfGZpbGV8ZmluYWxpemF0aW9ufGZpbmFsaXplcnxmaW5hbGx5fGZsYWdzfGZvcndhcmR8ZnJvbXxmdXR1cmV8Z2VuZXJpY3xnb3RvfGdyb3VwfGhhc3xoZWxwZXJ8aWZ8aW1wbGVtZW50c3xpbXBsaWVzfGltcG9ydHxpbnxpbmRleHxpbmhlcml0ZWR8aW5pdGlhbGl6YXRpb258aW5saW5lfGludGVycnVwdHxpbnRvfGludmFyaWFudHN8aXN8aXRlcmF0b3J8bGFiZWx8bGlicmFyeXxqb2lufGxhenl8bGlmZXRpbWVzdHJhdGVneXxsb2NrZWR8bG9ja2luZ3xsb29wfG1hcHBlZHxtYXRjaGluZ3xtZXRob2R8bW9kfG1vZHVsZXxuYW1lfG5hbWVzcGFjZXxuZWFyfG5lc3RlZHxuZXd8bm9zdGFja2ZyYW1lfG5vdHxub3RpZnl8bnVsbGFibGV8b2JqZWN0fG9mfG9sZHxvbGRmcGNjYWxsfG9ufG9ubHl8b3BlcmF0b3J8b3B0aW9uYWx8b3JfZWxzZXxvcmRlcnxvdGhlcndpc2V8b3V0fG92ZXJyaWRlfHBhY2thZ2V8cGFja2VkfHBhcmFsbGVsfHBhcmFtc3xwYXJ0aWFsfHBhc2NhbHxwaW5uZWR8cGxhdGZvcm18cG93fHByaXZhdGV8cHJvZ3JhbXxwcm90ZWN0ZWR8cHVibGljfHB1Ymxpc2hlZHxpbnRlcmZhY2V8aW1wbGVtZW50YXRpb258cXVhbGlmaWVkfHF1ZXJ5YWJsZXxyYWlzZXN8cmVhZHxyZWFkb25seXxyZWNvcmR8cmVmZXJlbmNlfHJlZ2lzdGVyfHJlbW92ZXxyZXNpZGVudHxyZXF1aXJlfHJlcXVpcmVzfHJlc291cmNlc3RyaW5nfHJlc3RyaWN0ZWR8cmVzdWx0fHJldmVyc2V8c2FmZWNhbGx8c2VhbGVkfHNlZ21lbnR8c2VsZWN0fHNlbGVjdG9yfHNlcXVlbmNlfHNldHxzaGx8c2hyfHNraXB8c3BlY2lhbGl6ZXxzb2Z0fHN0YXRpY3xzdG9yZWR8c3RkY2FsbHxzdGVwfHN0cmljdHxzdHJvbmd8dGFrZXx0aGVufHRocmVhZHZhcnx0b3x0cnl8dHVwbGV8dHlwZXx1bmNvbnN0cmFpbmVkfHVuaXR8dW5tYW5hZ2VkfHVucmV0YWluZWR8dW5zYWZlfHVzZXN8dXNpbmd8dmFyfHZpZXd8dmlydHVhbHx2b2xhdGlsZXx3ZWFrfGR5bmFtaWN8b3ZlcmxvYWR8cmVpbnRyb2R1Y2V8d2hlcmV8d2l0aHx3cml0ZXx4b3J8eWllbGQpKVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQucGFzY2FsXCIgfSwgeyBcImNhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwic3RvcmFnZS50eXBlLnByb3RvdHlwZS5wYXNjYWxcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS5mdW5jdGlvbi5wcm90b3R5cGUucGFzY2FsXCIgfSB9LCBcIm1hdGNoXCI6IFwiXFxcXGIoP2k6KGZ1bmN0aW9ufHByb2NlZHVyZXxjb25zdHJ1Y3RvcnxkZXN0cnVjdG9yKSlcXFxcYlxcXFxzKyhcXFxcdysoXFxcXC5cXFxcdyspPykoXFxcXCguKj9cXFxcKSk/O1xcXFxzKig/PSg/aTphdHRyaWJ1dGV8Zm9yd2FyZHxleHRlcm5hbCkpXCIsIFwibmFtZVwiOiBcIm1ldGEuZnVuY3Rpb24ucHJvdG90eXBlLnBhc2NhbFwiIH0sIHsgXCJjYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInN0b3JhZ2UudHlwZS5mdW5jdGlvbi5wYXNjYWxcIiB9LCBcIjJcIjogeyBcIm5hbWVcIjogXCJlbnRpdHkubmFtZS5mdW5jdGlvbi5wYXNjYWxcIiB9IH0sIFwibWF0Y2hcIjogXCJcXFxcYig/aTooZnVuY3Rpb258cHJvY2VkdXJlfGNvbnN0cnVjdG9yfGRlc3RydWN0b3J8cHJvcGVydHl8cmVhZHx3cml0ZSkpXFxcXGJcXFxccysoXFxcXHcrKFxcXFwuXFxcXHcrKT8pXCIsIFwibmFtZVwiOiBcIm1ldGEuZnVuY3Rpb24ucGFzY2FsXCIgfSwgeyBcIm1hdGNoXCI6IFwiXFxcXGIoP2k6KHNlbGZ8cmVzdWx0KSlcXFxcYlwiLCBcIm5hbWVcIjogXCJ0b2tlbi52YXJpYWJsZVwiIH0sIHsgXCJtYXRjaFwiOiBcIlxcXFxiKD9pOihhbmR8b3IpKVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQub3BlcmF0b3IucGFzY2FsXCIgfSwgeyBcIm1hdGNoXCI6IFwiXFxcXGIoP2k6KGJyZWFrfGNvbnRpbnVlfGV4aXR8YWJvcnR8d2hpbGV8ZG98ZG93bnRvfGZvcnxyYWlzZXxyZXBlYXR8dW50aWwpKVxcXFxiXCIsIFwibmFtZVwiOiBcImtleXdvcmQuY29udHJvbC5wYXNjYWxcIiB9LCB7IFwiYmVnaW5cIjogXCJcXFxce1xcXFwkXCIsIFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJzdHJpbmcucmVnZXhwXCIgfSB9LCBcImVuZFwiOiBcIlxcXFx9XCIsIFwibmFtZVwiOiBcInN0cmluZy5yZWdleHBcIiB9LCB7IFwibWF0Y2hcIjogXCJcXFxcYig/aTooYW5zaWNoYXJ8YW5zaXN0cmluZ3xib29sZWFufGJ5dGV8Y2FyZGluYWx8Y2hhcnxjb21wfGN1cnJlbmN5fGRvdWJsZXxkd29yZHxleHRlbmRlZHxmaWxlfGludGVnZXJ8aW50NjR8bG9uZ2ludHxsb25nd29yZHxuYXRpdmVpbnR8bmF0aXZldWludHxvbGV2YXJpYW50fHBhbnNpY2hhcnxwY2hhcnxwd2lkZWNoYXJ8cG9pbnRlcnxyZWFsfHNob3J0aW50fHNob3J0c3RyaW5nfHNpbmdsZXxzbWFsbGludHxzdHJpbmd8dWludDY0fHZhcmlhbnR8d2lkZWNoYXJ8d2lkZXN0cmluZ3x3b3JkfHdvcmRib29sKSlcXFxcYlwiLCBcIm5hbWVcIjogXCJzdG9yYWdlLnN1cHBvcnQudHlwZS5wYXNjYWxcIiB9LCB7IFwibWF0Y2hcIjogXCJcXFxcYihcXFxcZCspfChcXFxcZCpcXFxcLlxcXFxkKyhbZUVdW1xcXFwtK10/XFxcXGQrKT8pXFxcXGJcIiwgXCJuYW1lXCI6IFwiY29uc3RhbnQubnVtZXJpYy5wYXNjYWxcIiB9LCB7IFwibWF0Y2hcIjogXCJcXFxcJFswLTlhLWZBLUZdezEsMTZ9XFxcXGJcIiwgXCJuYW1lXCI6IFwiY29uc3RhbnQubnVtZXJpYy5oZXgucGFzY2FsXCIgfSwgeyBcIm1hdGNoXCI6IFwiXFxcXGIoP2k6KHRydWV8ZmFsc2V8bmlsKSlcXFxcYlwiLCBcIm5hbWVcIjogXCJjb25zdGFudC5sYW5ndWFnZS5wYXNjYWxcIiB9LCB7IFwibWF0Y2hcIjogXCJcXFxcYig/aTooQXNzZXJ0KSlcXFxcYlwiLCBcIm5hbWVcIjogXCJrZXl3b3JkLmNvbnRyb2xcIiB9LCB7IFwiYmVnaW5cIjogXCIoXlsgXFxcXHRdKyk/KD89Ly8pXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMVwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLndoaXRlc3BhY2UuY29tbWVudC5sZWFkaW5nLnBhc2NhbFwiIH0gfSwgXCJlbmRcIjogXCIoPyFcXFxcRylcIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImJlZ2luXCI6IFwiLy9cIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5jb21tZW50LnBhc2NhbFwiIH0gfSwgXCJlbmRcIjogXCJcXFxcblwiLCBcIm5hbWVcIjogXCJjb21tZW50LmxpbmUuZG91YmxlLXNsYXNoLnBhc2NhbC50d29cIiB9XSB9LCB7IFwiYmVnaW5cIjogXCJcXFxcKFxcXFwqXCIsIFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmNvbW1lbnQucGFzY2FsXCIgfSB9LCBcImVuZFwiOiBcIlxcXFwqXFxcXClcIiwgXCJuYW1lXCI6IFwiY29tbWVudC5ibG9jay5wYXNjYWwub25lXCIgfSwgeyBcImJlZ2luXCI6IFwiXFxcXHsoPyFcXFxcJClcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24uY29tbWVudC5wYXNjYWxcIiB9IH0sIFwiZW5kXCI6IFwiXFxcXH1cIiwgXCJuYW1lXCI6IFwiY29tbWVudC5ibG9jay5wYXNjYWwudHdvXCIgfSwgeyBcImJlZ2luXCI6IFwiJ1wiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5iZWdpbi5wYXNjYWxcIiB9IH0sIFwiZW5kXCI6IFwiJ1wiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuZW5kLnBhc2NhbFwiIH0gfSwgXCJuYW1lXCI6IFwic3RyaW5nLnF1b3RlZC5zaW5nbGUucGFzY2FsXCIsIFwicGF0dGVybnNcIjogW3sgXCJtYXRjaFwiOiBcIicnXCIsIFwibmFtZVwiOiBcImNvbnN0YW50LmNoYXJhY3Rlci5lc2NhcGUuYXBvc3Ryb3BoZS5wYXNjYWxcIiB9XSB9LCB7IFwibWF0Y2hcIjogXCJcXFxcI1xcXFxkK1wiLCBcIm5hbWVcIjogXCJzdHJpbmcub3RoZXIucGFzY2FsXCIgfV0sIFwic2NvcGVOYW1lXCI6IFwic291cmNlLnBhc2NhbFwiIH0pO1xudmFyIHBhc2NhbCA9IFtcbiAgbGFuZ1xuXTtcblxuZXhwb3J0IHsgcGFzY2FsIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/shikiji@0.10.2/node_modules/shikiji/dist/langs/pascal.mjs\n"));

/***/ })

}]);